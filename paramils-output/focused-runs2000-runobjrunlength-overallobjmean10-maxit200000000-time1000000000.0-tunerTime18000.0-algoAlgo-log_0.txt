Call: /usr/bin/ruby ../scripts/param_ils_2_3_run.rb "-numRun" "0" "-scenariofile" "MPSO_scenario_run0.txt" "-validN" "100" "-pruning" "0"


seed: 1234
algo: python mpso_wrapper_run0.py
tunerTimeout (CPU time): 18000.0
maxWallTime: 8640000.0
maxEvals: 100000000
run_obj: runlength
overall_obj: mean10
instance_file: mpso-instances.txt
test_instance_file: mpso-test-instances.txt
N: 2000
cutoff_time: 1000000000.0
cutoff_length: 400000
R: 10
pertubation_strength_basic: 
pertubation_strength_scaling: false
p_restart: 0.01
Run 1
Level 
========================================================
Starting ILS for level 1, i.e. a limit of N=2000, and cutoff time=1000000000.0.
Current CPU time = 0, this run goes until 18000.0 
========================================================
New Incumbent: 0, 100000000 [0, 0]. With state c1=2.05, c2=2.05, iter=5, rad=1, step=1.0
 Same incumbent, new precision:
New Incumbent: 1.566102, 4945.0 [1, 1000000000.0]. With state c1=2.05, c2=2.05, iter=5, rad=1, step=1.0
        -> Worse random: c1=2.025 c2=2.1 iter=12 rad=5 step=0.5 (7452.0 [based on 1 runs with cutoff 1000000000.0])
        -> Worse random: c1=1.975 c2=2.125 iter=5 rad=3 step=1.0 (5220.0 [based on 1 runs with cutoff 1000000000.0])
        -> Worse random: c1=2.1 c2=2.15 iter=3 rad=5 step=0.8 (5730.0 [based on 1 runs with cutoff 1000000000.0])
5/100000000, 10.33306/18000.0
        -> Worse random: c1=1.950 c2=2.1 iter=8 rad=1 step=1.2 (15052.0 [based on 1 runs with cutoff 1000000000.0])
        -> Worse random: c1=2.075 c2=2.0 iter=8 rad=4 step=1.2 (6580.0 [based on 1 runs with cutoff 1000000000.0])
7/100000000, 63.421141000000006/18000.0
        -> Worse random: c1=1.950 c2=1.950 iter=10 rad=3 step=1.2 (4000100.01 [based on 1 runs with cutoff 1000000000.0])
8/100000000, 113.994406/18000.0
        -> Worse random: c1=1.975 c2=2.025 iter=10 rad=3 step=0.8 (4000100.01 [based on 1 runs with cutoff 1000000000.0])
        -> Worse random: c1=2.025 c2=2.125 iter=12 rad=3 step=1.2 (5268.0 [based on 1 runs with cutoff 1000000000.0])
        -> Worse random: c1=1.975 c2=2.125 iter=12 rad=1 step=0.5 (10104.0 [based on 1 runs with cutoff 1000000000.0])
        -> Worse random: c1=2.075 c2=1.975 iter=5 rad=5 step=0.8 (10725.0 [based on 1 runs with cutoff 1000000000.0])
   BLS in iteration 1, start with c1=2.05 c2=2.05 iter=5 rad=1 step=1.0 (4945.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 1->2"], evaluating ...
        -> worse: (11850.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.05->2.1"], evaluating ...
13/100000000, 125.024652/18000.0
        -> worse: (5400.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->8"], evaluating ...
        -> worse: (11100.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.05->1.975"], evaluating ...
        -> worse: (17245.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.05->1.950"], evaluating ...
16/100000000, 164.467079/18000.0
        -> worse: (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.05->2.15"], evaluating ...
          -> Take improving step to neighbour c1=2.05 c2=2.15 iter=5 rad=1 step=1.0 (4945.0 [based on 1 runs with cutoff 1000000000.0]) with flip 1

          
============= Performing 6 bonus runs of state: c1=2.05 c2=2.15 iter=5 rad=1 step=1.0 (4945.0 [based on 1 runs with cutoff 1000000000.0]) ============ 

State wants more detail (1+1) than incumbent (1), doing incumbent first:
c1=2.05 c2=2.15 iter=5 rad=1 step=1.0 (4945.0 [based on 1 runs with cutoff 1000000000.0])
c1=2.05 c2=2.05 iter=5 rad=1 step=1.0 (4945.0 [based on 1 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 168.281225, 5355.0 [2, 1000000000.0]. With state c1=2.05, c2=2.05, iter=5, rad=1, step=1.0
19/100000000, 243.78040700000003/18000.0
State wants more detail (2+1) than incumbent (2), doing incumbent first:
c1=2.05 c2=2.15 iter=5 rad=1 step=1.0 (2002597.5045560994 [based on 2 runs with cutoff 1000000000.0])
c1=2.05 c2=2.05 iter=5 rad=1 step=1.0 (5355.0 [based on 2 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 245.95689200000004, 6976.666666666667 [3, 1000000000.0]. With state c1=2.05, c2=2.05, iter=5, rad=1, step=1.0
State wants more detail (3+1) than incumbent (3), doing incumbent first:
c1=2.05 c2=2.15 iter=5 rad=1 step=1.0 (1337291.6697040664 [based on 3 runs with cutoff 1000000000.0])
c1=2.05 c2=2.05 iter=5 rad=1 step=1.0 (6976.666666666667 [based on 3 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 249.13197200000005, 6168.75 [4, 1000000000.0]. With state c1=2.05, c2=2.05, iter=5, rad=1, step=1.0
State wants more detail (4+1) than incumbent (4), doing incumbent first:
c1=2.05 c2=2.15 iter=5 rad=1 step=1.0 (1003501.2522780497 [based on 4 runs with cutoff 1000000000.0])
c1=2.05 c2=2.05 iter=5 rad=1 step=1.0 (6168.75 [based on 4 runs with cutoff 1000000000.0])
24/100000000, 254.03975000000005/18000.0
 Same incumbent, new precision:
New Incumbent: 254.03975000000005, 10483.0 [5, 1000000000.0]. With state c1=2.05, c2=2.05, iter=5, rad=1, step=1.0
State wants more detail (5+1) than incumbent (5), doing incumbent first:
c1=2.05 c2=2.15 iter=5 rad=1 step=1.0 (804639.0018224397 [based on 5 runs with cutoff 1000000000.0])
c1=2.05 c2=2.05 iter=5 rad=1 step=1.0 (10483.0 [based on 5 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 258.33000200000004, 10813.333333333334 [6, 1000000000.0]. With state c1=2.05, c2=2.05, iter=5, rad=1, step=1.0
27/100000000, 272.42596000000003/18000.0
State wants more detail (6+1) than incumbent (6), doing incumbent first:
c1=2.05 c2=2.15 iter=5 rad=1 step=1.0 (694941.6681853664 [based on 6 runs with cutoff 1000000000.0])
c1=2.05 c2=2.05 iter=5 rad=1 step=1.0 (10813.333333333334 [based on 6 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 274.12800100000004, 10239.285714285714 [7, 1000000000.0]. With state c1=2.05, c2=2.05, iter=5, rad=1, step=1.0
          -> After 6 bonus runs: c1=2.05 c2=2.15 iter=5 rad=1 step=1.0 (596312.8584445998 [based on 7 runs with cutoff 1000000000.0])

    Changing ["c1: 2.05->2.125"], evaluating ...
        -> worse: (6485.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->0.8"], evaluating ...
34/100000000, 283.5769160000001/18000.0
36/100000000, 317.36621700000006/18000.0
          -> Take improving step to neighbour c1=2.05 c2=2.15 iter=5 rad=1 step=0.8 (53665.0 [based on 7 runs with cutoff 1000000000.0]) with flip 2

          
============= Performing 2 bonus runs of state: c1=2.05 c2=2.15 iter=5 rad=1 step=0.8 (53665.0 [based on 7 runs with cutoff 1000000000.0]) ============ 

State wants more detail (7+1) than incumbent (7), doing incumbent first:
c1=2.05 c2=2.15 iter=5 rad=1 step=0.8 (53665.0 [based on 7 runs with cutoff 1000000000.0])
c1=2.05 c2=2.05 iter=5 rad=1 step=1.0 (10239.285714285714 [based on 7 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 320.71827300000007, 9943.125 [8, 1000000000.0]. With state c1=2.05, c2=2.05, iter=5, rad=1, step=1.0
State wants more detail (8+1) than incumbent (8), doing incumbent first:
c1=2.05 c2=2.15 iter=5 rad=1 step=0.8 (47615.625 [based on 8 runs with cutoff 1000000000.0])
c1=2.05 c2=2.05 iter=5 rad=1 step=1.0 (9943.125 [based on 8 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 324.3950740000001, 9936.111111111111 [9, 1000000000.0]. With state c1=2.05, c2=2.05, iter=5, rad=1, step=1.0
          -> After 2 bonus runs: c1=2.05 c2=2.15 iter=5 rad=1 step=0.8 (42974.444444444445 [based on 9 runs with cutoff 1000000000.0])

    Changing ["rad: 1->4"], evaluating ...
42/100000000, 327.6266400000001/18000.0
47/100000000, 404.7762430000002/18000.0
        -> worse: (669605.0016666666 [based on 6 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (9445.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 1->2"], evaluating ...
        -> worse: (4885.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->3"], evaluating ...
        -> worse: (4536.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->12"], evaluating ...
        -> worse: (6804.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 1->5"], evaluating ...
53/100000000, 448.69757500000014/18000.0
        -> worse: (63110.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.125"], evaluating ...
        -> worse: (10792.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.0"], evaluating ...
        -> worse: (6280.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.125"], evaluating ...
        -> worse: (4295.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->10"], evaluating ...
58/100000000, 459.67265100000014/18000.0
        -> worse: (4980.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.950"], evaluating ...
59/100000000, 493.72942900000015/18000.0
        -> worse: (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.0"], evaluating ...
        -> worse: (12830.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.1"], evaluating ...
        -> worse: (14612.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.075"], evaluating ...
63/100000000, 504.56667000000016/18000.0
        -> worse: (4033.3333333333335 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
        -> worse: (12890.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
        -> worse: (5520.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
68/100000000, 516.1923890000002/18000.0
        -> worse: (38845.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 1->3"], evaluating ...
74/100000000, 527.4752370000001/18000.0
New inc: 4525.0
New Incumbent: 532.2928700000001, 4525.0 [9, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
          -> Take improving step to neighbour c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (4525.0 [based on 9 runs with cutoff 1000000000.0]) with flip 3

          
============= Performing 18 bonus runs of state: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (4525.0 [based on 9 runs with cutoff 1000000000.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 535.1621210000001, 5314.5 [10, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
79/100000000, 557.0508380000001/18000.0
 Same incumbent, new precision:
New Incumbent: 557.0508380000001, 18654.545454545456 [11, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 558.7831390000001, 17423.333333333332 [12, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 560.5588920000001, 16281.538461538461 [13, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 561.9132390000001, 15217.142857142857 [14, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
83/100000000, 655.3087270000001/18000.0
 Same incumbent, new precision:
New Incumbent: 655.3087270000001, 280876.00060770806 [15, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 657.1961040000001, 263668.7505697263 [16, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
85/100000000, 711.1144010000002/18000.0
 Same incumbent, new precision:
New Incumbent: 711.1144010000002, 269887.94171268353 [17, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 712.3860580000002, 254935.8338397567 [18, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 714.1568140000002, 241732.8952166116 [19, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 716.4239820000001, 230056.25045578103 [20, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 718.0106880000002, 219249.04805312477 [21, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 719.6178480000002, 209423.63677798276 [22, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
91/100000000, 722.1151340000002/18000.0
 Same incumbent, new precision:
New Incumbent: 722.1151340000002, 200748.4786572009 [23, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 723.9622150000002, 192588.33371315085 [24, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 726.4741390000003, 185125.40036462483 [25, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 728.2265510000003, 178165.96188906234 [26, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 729.8438740000004, 171709.44478206002 [27, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
          -> After 18 bonus runs: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (171709.44478206002 [based on 27 runs with cutoff 1000000000.0])

    Changing ["c2: 2.15->2.125"], evaluating ...
        -> worse: (8385.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->3"], evaluating ...
97/100000000, 786.8356150000004/18000.0
        -> worse: (4000410.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.0"], evaluating ...
        -> worse: (4415.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
        -> worse: (7600.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.1"], evaluating ...
        -> worse: (7600.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
101/100000000, 800.9439930000004/18000.0
        -> worse: (54675.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->8"], evaluating ...
        -> worse: (8492.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (10845.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.950"], evaluating ...
        -> worse: (8865.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->10"], evaluating ...
        -> worse: (8710.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.075"], evaluating ...
106/100000000, 812.0698790000006/18000.0
111/100000000, 835.0247070000006/18000.0
        -> worse: (20724.166666666668 [based on 6 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->0.5"], evaluating ...
        -> worse: (3540.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.025"], evaluating ...
        -> worse: (6425.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.15"], evaluating ...
115/100000000, 912.6852890000006/18000.0
        -> worse: (154957.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
121/100000000, 924.8085690000005/18000.0
        -> worse: (5575.833333333333 [based on 6 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.125"], evaluating ...
        -> worse: (5800.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->12"], evaluating ...
        -> worse: (4608.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
        -> worse: (4705.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.950"], evaluating ...
125/100000000, 984.4536690000004/18000.0
        -> worse: (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (5800.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.975"], evaluating ...
        -> worse: (4408.333333333333 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.0"], evaluating ...
130/100000000, 995.5065160000005/18000.0
        -> worse: (18970.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
        -> worse: (3780.0 [based on 1 runs with cutoff 1000000000.0])
          
============= Performing 23 bonus runs of state: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (171709.44478206002 [based on 27 runs with cutoff 1000000000.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 998.5460600000005, 165635.35746841502 [28, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 999.8503420000004, 159979.65548674553 [29, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 1001.4739010000004, 154771.33363718734 [30, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
135/100000000, 1024.9031180000004/18000.0
 Same incumbent, new precision:
New Incumbent: 1024.9031180000004, 152905.32287469745 [31, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 1026.5896670000004, 148257.96903486314 [32, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 1028.1287940000004, 143873.78815501882 [33, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 1029.6600130000004, 139730.73556222414 [34, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 1032.5406480000004, 136110.85740330344 [35, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 1034.1470200000003, 132425.69469765612 [36, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
141/100000000, 1041.1699040000003/18000.0
 Same incumbent, new precision:
New Incumbent: 1041.1699040000003, 129546.48673285461 [37, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 1043.3127580000003, 126327.36866093738 [38, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 1045.2429890000003, 123227.82074655437 [39, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
144/100000000, 1064.1659170000003/18000.0
 Same incumbent, new precision:
New Incumbent: 1064.1659170000003, 123360.12522789052 [40, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 1065.8802840000003, 120457.68314916147 [41, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 1067.1757090000003, 117629.64307418144 [42, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 1068.7694600000004, 114969.65137478187 [43, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 1070.2010600000003, 112398.40929808229 [44, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
149/100000000, 1089.3149900000003/18000.0
 Same incumbent, new precision:
New Incumbent: 1089.3149900000003, 111639.5557581249 [45, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 1092.0899000000004, 109488.04367642653 [46, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 1094.0552150000003, 107288.61721522597 [47, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 1095.9049270000003, 105141.66685657542 [48, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
153/100000000, 1152.9013430000002/18000.0
 Same incumbent, new precision:
New Incumbent: 1152.9013430000002, 184635.71467582896 [49, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 1156.2803240000003, 181275.3003823124 [50, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
          -> After 23 bonus runs for LM: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (181275.3003823124 [based on 50 runs with cutoff 1000000000.0])

   LM for iteration 1: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (181275.3003823124 [based on 50 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 1): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 1): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 181275.3003823124, based on 50 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (181275.3003823124 [based on 50 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (181275.3003823124 [based on 50 runs with cutoff 1000000000.0])
LM better, change incumbent
New Incumbent: 1156.2803240000003, 181275.3003823124 [50, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
154/100000000, 1156.2803240000003/18000.0
iteration 2, flip 5, evaluation count 154
    perturb to ---> c1=2.05 c2=2.15 iter=5 rad=1 step=0.8 (42974.444444444445 [based on 9 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.05 c2=1.975 iter=5 rad=1 step=0.8 (38845.0 [based on 1 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.05 c2=1.975 iter=10 rad=1 step=0.8 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 2, start with c1=2.05 c2=1.975 iter=10 rad=1 step=0.8 (41920.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 1.975->2.0"], evaluating ...
          -> Take improving step to neighbour c1=2.05 c2=2.0 iter=10 rad=1 step=0.8 (9250.0 [based on 1 runs with cutoff 1000000000.0]) with flip 5

          
============= Performing 1 bonus runs of state: c1=2.05 c2=2.0 iter=10 rad=1 step=0.8 (9250.0 [based on 1 runs with cutoff 1000000000.0]) ============ 

157/100000000, 1165.9572190000001/18000.0
          -> After 1 bonus runs: c1=2.05 c2=2.0 iter=10 rad=1 step=0.8 (10705.0 [based on 2 runs with cutoff 1000000000.0])

    Changing ["c1: 2.05->1.975"], evaluating ...
158/100000000, 1198.9342960000001/18000.0
        -> worse: (4000100.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.0->2.15"], evaluating ...
          -> Take improving step to neighbour c1=2.05 c2=2.15 iter=10 rad=1 step=0.8 (3935.0 [based on 2 runs with cutoff 1000000000.0]) with flip 6

          
============= Performing 2 bonus runs of state: c1=2.05 c2=2.15 iter=10 rad=1 step=0.8 (3935.0 [based on 2 runs with cutoff 1000000000.0]) ============ 

          -> After 2 bonus runs: c1=2.05 c2=2.15 iter=10 rad=1 step=0.8 (4040.0 [based on 4 runs with cutoff 1000000000.0])

    Changing ["c1: 2.05->2.025"], evaluating ...
164/100000000, 1209.8550190000003/18000.0
        -> worse: (4830.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (8635.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 1->5"], evaluating ...
        -> worse: (6060.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 10->3"], evaluating ...
169/100000000, 1220.2298490000003/18000.0
          -> Take improving step to neighbour c1=2.05 c2=2.15 iter=3 rad=1 step=0.8 (3723.0 [based on 4 runs with cutoff 1000000000.0]) with flip 7

          
============= Performing 4 bonus runs of state: c1=2.05 c2=2.15 iter=3 rad=1 step=0.8 (3723.0 [based on 4 runs with cutoff 1000000000.0]) ============ 

172/100000000, 1261.6920060000002/18000.0
          -> After 4 bonus runs: c1=2.05 c2=2.15 iter=3 rad=1 step=0.8 (505410.75125 [based on 8 runs with cutoff 1000000000.0])

    Changing ["iter: 3->12"], evaluating ...
        -> worse: (5040.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.950"], evaluating ...
        -> worse: (10584.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.1"], evaluating ...
        -> worse: (9027.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.125"], evaluating ...
178/100000000, 1271.8878610000004/18000.0
179/100000000, 1282.3169060000005/18000.0
        -> worse: (27495.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.975"], evaluating ...
        -> worse: (14529.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
        -> worse: (5106.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (5730.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 3->8"], evaluating ...
        -> worse: (5932.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->0.5"], evaluating ...
        -> worse: (5526.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
185/100000000, 1293.0615610000004/18000.0
        -> worse: (10284.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 1->5"], evaluating ...
        -> worse: (4656.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (5730.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.075"], evaluating ...
192/100000000, 1304.8173880000004/18000.0
193/100000000, 1318.8161960000004/18000.0
          -> Take improving step to neighbour c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (22035.375 [based on 8 runs with cutoff 1000000000.0]) with flip 8

          
============= Performing 13 bonus runs of state: c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (22035.375 [based on 8 runs with cutoff 1000000000.0]) ============ 

198/100000000, 1358.1982270000005/18000.0
202/100000000, 1372.7262270000003/18000.0
208/100000000, 1383.6158730000002/18000.0
          -> After 13 bonus runs: c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (30651.0 [based on 21 runs with cutoff 1000000000.0])

    Changing ["iter: 3->5"], evaluating ...
        -> worse: (3617.5 [based on 4 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
        -> worse: (15939.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.0"], evaluating ...
        -> worse: (5466.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 1->3"], evaluating ...
214/100000000, 1394.1238500000002/18000.0
217/100000000, 1412.9847790000001/18000.0
222/100000000, 1480.694825/18000.0
        -> worse: (377200.91 [based on 11 runs with cutoff 1000000000.0])
    Changing ["iter: 3->10"], evaluating ...
        -> worse: (5160.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 3->12"], evaluating ...
        -> worse: (8346.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.025"], evaluating ...
        -> worse: (4269.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.15"], evaluating ...
228/100000000, 1491.9133310000002/18000.0
        -> worse: (3990.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 3->8"], evaluating ...
        -> worse: (3182.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
        -> worse: (3144.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
        -> worse: (5910.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.0"], evaluating ...
234/100000000, 1501.99861/18000.0
        -> worse: (11082.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
        -> worse: (14529.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.950"], evaluating ...
        -> worse: (26787.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 1->2"], evaluating ...
238/100000000, 1533.8666779999999/18000.0
        -> worse: (57823.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 1->4"], evaluating ...
        -> worse: (7044.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (6600.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->0.5"], evaluating ...
        -> worse: (8166.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
244/100000000, 1544.300233/18000.0
247/100000000, 1584.500797/18000.0
        -> worse: (670248.0016666666 [based on 6 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (4776.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.125"], evaluating ...
        -> worse: (6300.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 1->5"], evaluating ...
        -> worse: (4327.5 [based on 2 runs with cutoff 1000000000.0])
          
============= Performing 22 bonus runs of state: c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (30651.0 [based on 21 runs with cutoff 1000000000.0]) ============ 

253/100000000, 1630.6508209999997/18000.0
259/100000000, 1641.2650969999997/18000.0
260/100000000, 1678.1260419999996/18000.0
266/100000000, 1689.4127469999996/18000.0
267/100000000, 1700.9724769999996/18000.0
273/100000000, 1712.3714539999999/18000.0
          -> After 22 bonus runs for LM: c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (205446.2795348837 [based on 43 runs with cutoff 1000000000.0])

   LM for iteration 2: c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (205446.2795348837 [based on 43 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 2): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 2): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 181275.3003823124, based on 50 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (205446.2795348837 [based on 43 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (181275.3003823124 [based on 50 runs with cutoff 1000000000.0])
Incumbent better, keeping it
rejecting worse c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (205446.2795348837 [based on 43 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (181275.3003823124 [based on 50 runs with cutoff 1000000000.0])
273/100000000, 1712.3714539999999/18000.0
iteration 3, flip 10, evaluation count 273
    perturb to ---> c1=2.05 c2=2.15 iter=8 rad=3 step=0.8 (8492.0 [based on 1 runs with cutoff 1000000000.0])
    perturb to ---> c1=1.950 c2=2.15 iter=8 rad=3 step=0.8 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> c1=1.950 c2=2.15 iter=12 rad=3 step=0.8 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 3, start with c1=1.950 c2=2.15 iter=12 rad=3 step=0.8 (8196.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
          -> Take improving step to neighbour c1=1.950 c2=2.15 iter=12 rad=3 step=1.0 (5424.0 [based on 1 runs with cutoff 1000000000.0]) with flip 10

          
============= Performing 1 bonus runs of state: c1=1.950 c2=2.15 iter=12 rad=3 step=1.0 (5424.0 [based on 1 runs with cutoff 1000000000.0]) ============ 

          -> After 1 bonus runs: c1=1.950 c2=2.15 iter=12 rad=3 step=1.0 (4716.0 [based on 2 runs with cutoff 1000000000.0])

    Changing ["iter: 12->5"], evaluating ...
        -> worse: (12830.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->1.2"], evaluating ...
278/100000000, 1723.4586479999998/18000.0
        -> worse: (8496.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->1"], evaluating ...
        -> worse: (6864.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
280/100000000, 1775.737567/18000.0
        -> worse: (4000320.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 1.950->2.05"], evaluating ...
          -> Take improving step to neighbour c1=2.05 c2=2.15 iter=12 rad=3 step=1.0 (4218.0 [based on 2 runs with cutoff 1000000000.0]) with flip 11

          
============= Performing 5 bonus runs of state: c1=2.05 c2=2.15 iter=12 rad=3 step=1.0 (4218.0 [based on 2 runs with cutoff 1000000000.0]) ============ 

286/100000000, 1807.933734/18000.0
          -> After 5 bonus runs: c1=2.05 c2=2.15 iter=12 rad=3 step=1.0 (27689.14285714286 [based on 7 runs with cutoff 1000000000.0])

    Changing ["c1: 2.05->2.075"], evaluating ...
292/100000000, 1818.893232/18000.0
        -> worse: (4996.8 [based on 5 runs with cutoff 1000000000.0])
    Changing ["rad: 3->2"], evaluating ...
294/100000000, 1902.209057/18000.0
        -> worse: (2002260.0045609209 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.975"], evaluating ...
        -> worse: (3762.0 [based on 4 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (11520.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->1"], evaluating ...
300/100000000, 1913.1430810000004/18000.0
        -> worse: (5424.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.950"], evaluating ...
301/100000000, 1963.7443840000003/18000.0
        -> worse: (4000320.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.025"], evaluating ...
        -> worse: (8796.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
        -> worse: (5844.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 12->8"], evaluating ...
307/100000000, 1974.9171060000003/18000.0
          -> Take improving step to neighbour c1=2.05 c2=2.15 iter=8 rad=3 step=1.0 (4578.285714285715 [based on 7 runs with cutoff 1000000000.0]) with flip 12

          
============= Performing 9 bonus runs of state: c1=2.05 c2=2.15 iter=8 rad=3 step=1.0 (4578.285714285715 [based on 7 runs with cutoff 1000000000.0]) ============ 

313/100000000, 1986.1845150000004/18000.0
314/100000000, 2042.7493970000003/18000.0
316/100000000, 2087.897586/18000.0
          -> After 9 bonus runs: c1=2.05 c2=2.15 iter=8 rad=3 step=1.0 (265896.750625 [based on 16 runs with cutoff 1000000000.0])

    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (6700.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.950"], evaluating ...
321/100000000, 2098.630923/18000.0
        -> worse: (13096.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
        -> worse: (13732.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 8->10"], evaluating ...
        -> worse: (8100.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 8->3"], evaluating ...
        -> worse: (10962.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->1.2"], evaluating ...
325/100000000, 2108.8423810000004/18000.0
        -> worse: (11100.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 8->5"], evaluating ...
        -> worse: (4350.0 [based on 5 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->0.8"], evaluating ...
        -> worse: (6588.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
331/100000000, 2120.5351200000005/18000.0
        -> worse: (6940.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->4"], evaluating ...
        -> worse: (3904.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.1"], evaluating ...
        -> worse: (5932.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.0"], evaluating ...
        -> worse: (18988.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (8492.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.0"], evaluating ...
336/100000000, 2132.1397050000005/18000.0
        -> worse: (8296.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.125"], evaluating ...
        -> worse: (4628.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->0.5"], evaluating ...
        -> worse: (7236.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.075"], evaluating ...
342/100000000, 2142.2264619999996/18000.0
344/100000000, 2154.7551489999996/18000.0
        -> worse: (14728.0 [based on 6 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
        -> worse: (5932.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.125"], evaluating ...
347/100000000, 2193.9562889999997/18000.0
        -> worse: (76716.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 3->5"], evaluating ...
        -> worse: (7338.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.15"], evaluating ...
352/100000000, 2205.2381299999997/18000.0
355/100000000, 2264.299909/18000.0
        -> worse: (670122.0016666666 [based on 6 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.975"], evaluating ...
        -> worse: (4688.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.950"], evaluating ...
357/100000000, 2318.809419/18000.0
        -> worse: (4000160.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.025"], evaluating ...
        -> worse: (7476.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->2"], evaluating ...
        -> worse: (4416.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->1"], evaluating ...
        -> worse: (4449.333333333333 [based on 3 runs with cutoff 1000000000.0])
          
============= Performing 26 bonus runs of state: c1=2.05 c2=2.15 iter=8 rad=3 step=1.0 (265896.750625 [based on 16 runs with cutoff 1000000000.0]) ============ 

363/100000000, 2381.062589/18000.0
369/100000000, 2403.996911/18000.0
375/100000000, 2422.181961/18000.0
376/100000000, 2442.3002549999997/18000.0
382/100000000, 2452.5192069999994/18000.0
386/100000000, 2467.8335869999996/18000.0
          -> After 26 bonus runs for LM: c1=2.05 c2=2.15 iter=8 rad=3 step=1.0 (120825.905 [based on 42 runs with cutoff 1000000000.0])

   LM for iteration 3: c1=2.05 c2=2.15 iter=8 rad=3 step=1.0 (120825.905 [based on 42 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 3): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 3): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 181275.3003823124, based on 50 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.05 c2=2.15 iter=8 rad=3 step=1.0 (120825.905 [based on 42 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (181275.3003823124 [based on 50 runs with cutoff 1000000000.0])
Incumbent better, keeping it
rejecting worse c1=2.05 c2=2.15 iter=8 rad=3 step=1.0 (120825.905 [based on 42 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (181275.3003823124 [based on 50 runs with cutoff 1000000000.0])
388/100000000, 2470.886788/18000.0
iteration 4, flip 14, evaluation count 388
    perturb to ---> c1=2.05 c2=2.15 iter=5 rad=1 step=0.8 (42974.444444444445 [based on 9 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.05 c2=2.15 iter=5 rad=1 step=1.2 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> c1=2.05 c2=2.15 iter=5 rad=1 step=0.8 (42974.444444444445 [based on 9 runs with cutoff 1000000000.0])
389/100000000, 2479.874892/18000.0
   BLS in iteration 4, start with c1=2.05 c2=2.15 iter=5 rad=1 step=0.8 (47866.0 [based on 10 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
        -> worse: (9567.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->0.5"], evaluating ...
        -> worse: (12240.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.0"], evaluating ...
392/100000000, 2493.5428469999997/18000.0
        -> worse: (26335.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
393/100000000, 2504.3269539999997/18000.0
        -> worse: (45882.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.975"], evaluating ...
        -> worse: (4415.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->10"], evaluating ...
396/100000000, 2526.919767/18000.0
          -> Take improving step to neighbour c1=2.05 c2=2.15 iter=10 rad=1 step=0.8 (25273.0 [based on 10 runs with cutoff 1000000000.0]) with flip 14

          
============= Performing 6 bonus runs of state: c1=2.05 c2=2.15 iter=10 rad=1 step=0.8 (25273.0 [based on 10 runs with cutoff 1000000000.0]) ============ 

402/100000000, 2537.9174179999995/18000.0
          -> After 6 bonus runs: c1=2.05 c2=2.15 iter=10 rad=1 step=0.8 (19548.75 [based on 16 runs with cutoff 1000000000.0])

    Changing ["c1: 2.05->2.075"], evaluating ...
407/100000000, 2549.403755/18000.0
        -> worse: (4896.666666666667 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
        -> worse: (11570.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.025"], evaluating ...
        -> worse: (4150.0 [based on 4 runs with cutoff 1000000000.0])
    Changing ["rad: 1->2"], evaluating ...
        -> worse: (7400.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 10->8"], evaluating ...
        -> worse: (4496.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.950"], evaluating ...
413/100000000, 2560.324094/18000.0
        -> worse: (12000.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 1->5"], evaluating ...
414/100000000, 2624.486295/18000.0
        -> worse: (120130.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (9273.333333333334 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.125"], evaluating ...
417/100000000, 2674.3611290000003/18000.0
        -> worse: (127130.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
422/100000000, 2684.8405880000005/18000.0
        -> worse: (10496.0 [based on 5 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
        -> worse: (24005.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 10->3"], evaluating ...
        -> worse: (450003.0011111111 [based on 9 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->0.5"], evaluating ...
        -> worse: (4840.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.1"], evaluating ...
428/100000000, 2695.5022150000004/18000.0
429/100000000, 2713.2755450000004/18000.0
        -> worse: (48445.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.950"], evaluating ...
430/100000000, 2746.1575250000005/18000.0
        -> worse: (4000100.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.0"], evaluating ...
        -> worse: (6970.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 1->3"], evaluating ...
        -> worse: (6185.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.15"], evaluating ...
        -> worse: (7635.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.125"], evaluating ...
        -> worse: (5390.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
436/100000000, 2757.561642000001/18000.0
        -> worse: (22440.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.975"], evaluating ...
438/100000000, 2767.6943440000014/18000.0
        -> worse: (5390.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
        -> worse: (8526.0 [based on 5 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
444/100000000, 2778.9730590000013/18000.0
        -> worse: (6540.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.0"], evaluating ...
        -> worse: (12760.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["iter: 10->12"], evaluating ...
        -> worse: (5512.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["rad: 1->4"], evaluating ...
        -> worse: (6790.0 [based on 1 runs with cutoff 1000000000.0])
          
============= Performing 26 bonus runs of state: c1=2.05 c2=2.15 iter=10 rad=1 step=0.8 (19548.75 [based on 16 runs with cutoff 1000000000.0]) ============ 

448/100000000, 2800.733872000001/18000.0
454/100000000, 2811.430149000001/18000.0
461/100000000, 2855.480401000001/18000.0
467/100000000, 2866.259262000001/18000.0
471/100000000, 2907.4077050000014/18000.0
          -> After 26 bonus runs for LM: c1=2.05 c2=2.15 iter=10 rad=1 step=0.8 (205191.42904761905 [based on 42 runs with cutoff 1000000000.0])

   LM for iteration 4: c1=2.05 c2=2.15 iter=10 rad=1 step=0.8 (205191.42904761905 [based on 42 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 4): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 4): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 181275.3003823124, based on 50 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.05 c2=2.15 iter=10 rad=1 step=0.8 (205191.42904761905 [based on 42 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (181275.3003823124 [based on 50 runs with cutoff 1000000000.0])
Incumbent better, keeping it
rejecting worse c1=2.05 c2=2.15 iter=10 rad=1 step=0.8 (205191.42904761905 [based on 42 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (181275.3003823124 [based on 50 runs with cutoff 1000000000.0])
473/100000000, 2910.5527030000017/18000.0
iteration 5, flip 16, evaluation count 473
    perturb to ---> c1=2.05 c2=2.15 iter=5 rad=3 step=0.5 (3540.0 [based on 1 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.05 c2=2.1 iter=5 rad=3 step=0.5 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> c1=2.05 c2=2.1 iter=8 rad=3 step=0.5 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 5, start with c1=2.05 c2=2.1 iter=8 rad=3 step=0.5 (8056.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.025"], evaluating ...
          -> Take improving step to neighbour c1=2.025 c2=2.1 iter=8 rad=3 step=0.5 (5932.0 [based on 1 runs with cutoff 1000000000.0]) with flip 16

          
============= Performing 1 bonus runs of state: c1=2.025 c2=2.1 iter=8 rad=3 step=0.5 (5932.0 [based on 1 runs with cutoff 1000000000.0]) ============ 

          -> After 1 bonus runs: c1=2.025 c2=2.1 iter=8 rad=3 step=0.5 (4228.0 [based on 2 runs with cutoff 1000000000.0])

    Changing ["c1: 2.025->2.125"], evaluating ...
477/100000000, 2918.3918760000015/18000.0
        -> worse: (7236.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->1.975"], evaluating ...
478/100000000, 2970.1578400000017/18000.0
        -> worse: (4000160.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.025"], evaluating ...
        -> worse: (20720.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.025->1.975"], evaluating ...
        -> worse: (6580.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.025->2.15"], evaluating ...
        -> worse: (6760.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 8->10"], evaluating ...
        -> worse: (6540.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.5->1.2"], evaluating ...
483/100000000, 2981.9397940000017/18000.0
        -> worse: (6760.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->5"], evaluating ...
        -> worse: (9796.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.025->2.0"], evaluating ...
486/100000000, 3077.4733000000015/18000.0
        -> worse: (2002474.0045517178 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.025->2.1"], evaluating ...
488/100000000, 3113.8705260000015/18000.0
        -> worse: (77356.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.0"], evaluating ...
        -> worse: (48548.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.5->0.8"], evaluating ...
        -> worse: (6580.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.5->1.0"], evaluating ...
491/100000000, 3125.407380000002/18000.0
        -> worse: (9388.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.075"], evaluating ...
        -> worse: (8492.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->1.950"], evaluating ...
493/100000000, 3180.625993000002/18000.0
        -> worse: (4000160.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.025->2.075"], evaluating ...
          -> Take improving step to neighbour c1=2.075 c2=2.1 iter=8 rad=3 step=0.5 (3378.0 [based on 2 runs with cutoff 1000000000.0]) with flip 17

          
============= Performing 16 bonus runs of state: c1=2.075 c2=2.1 iter=8 rad=3 step=0.5 (3378.0 [based on 2 runs with cutoff 1000000000.0]) ============ 

499/100000000, 3243.1079960000015/18000.0
504/100000000, 3312.358467000001/18000.0
509/100000000, 3323.0328390000013/18000.0
510/100000000, 3370.284813000001/18000.0
          -> After 16 bonus runs: c1=2.075 c2=2.1 iter=8 rad=3 step=0.5 (467179.3344444444 [based on 18 runs with cutoff 1000000000.0])

    Changing ["c2: 2.1->1.975"], evaluating ...
        -> worse: (13576.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->2"], evaluating ...
        -> worse: (3680.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->1.950"], evaluating ...
515/100000000, 3381.963869000001/18000.0
        -> worse: (19644.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 8->10"], evaluating ...
        -> worse: (6060.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->4"], evaluating ...
        -> worse: (6760.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->1"], evaluating ...
        -> worse: (7236.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.05"], evaluating ...
        -> worse: (11100.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 8->5"], evaluating ...
520/100000000, 3392.5212040000006/18000.0
        -> worse: (8020.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.125"], evaluating ...
        -> worse: (5932.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.025"], evaluating ...
        -> worse: (11724.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.075"], evaluating ...
        -> worse: (4628.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.5->0.8"], evaluating ...
        -> worse: (7236.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.0"], evaluating ...
525/100000000, 3403.616775000001/18000.0
        -> worse: (11724.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 8->12"], evaluating ...
        -> worse: (7512.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.5->1.0"], evaluating ...
        -> worse: (3452.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 8->3"], evaluating ...
        -> worse: (4656.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->1.950"], evaluating ...
530/100000000, 3418.6512010000006/18000.0
        -> worse: (49936.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.5->1.2"], evaluating ...
        -> worse: (3752.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.15"], evaluating ...
        -> worse: (7060.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->5"], evaluating ...
        -> worse: (5848.0 [based on 1 runs with cutoff 1000000000.0])
          
============= Performing 20 bonus runs of state: c1=2.075 c2=2.1 iter=8 rad=3 step=0.5 (467179.3344444444 [based on 18 runs with cutoff 1000000000.0]) ============ 

536/100000000, 3430.7138210000007/18000.0
539/100000000, 3462.2580730000004/18000.0
545/100000000, 3472.812167/18000.0
546/100000000, 3516.308399/18000.0
547/100000000, 3609.688618/18000.0
553/100000000, 3622.471356/18000.0
          -> After 20 bonus runs for LM: c1=2.075 c2=2.1 iter=8 rad=3 step=0.5 (342099.895503044 [based on 38 runs with cutoff 1000000000.0])

   LM for iteration 5: c1=2.075 c2=2.1 iter=8 rad=3 step=0.5 (342099.895503044 [based on 38 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 5): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 5): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 181275.3003823124, based on 50 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.075 c2=2.1 iter=8 rad=3 step=0.5 (342099.895503044 [based on 38 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (181275.3003823124 [based on 50 runs with cutoff 1000000000.0])
Incumbent better, keeping it
rejecting worse c1=2.075 c2=2.1 iter=8 rad=3 step=0.5 (342099.895503044 [based on 38 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (181275.3003823124 [based on 50 runs with cutoff 1000000000.0])
554/100000000, 3624.535451/18000.0
iteration 6, flip 19, evaluation count 554
    perturb to ---> c1=2.05 c2=2.15 iter=12 rad=3 step=0.8 (4608.0 [based on 1 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.05 c2=2.075 iter=12 rad=3 step=0.8 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> c1=2.0 c2=2.075 iter=12 rad=3 step=0.8 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 6, start with c1=2.0 c2=2.075 iter=12 rad=3 step=0.8 (8676.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->1"], evaluating ...
        -> worse: (11520.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.0->2.15"], evaluating ...
          -> Take improving step to neighbour c1=2.15 c2=2.075 iter=12 rad=3 step=0.8 (8196.0 [based on 1 runs with cutoff 1000000000.0]) with flip 19

          
============= Performing 2 bonus runs of state: c1=2.15 c2=2.075 iter=12 rad=3 step=0.8 (8196.0 [based on 1 runs with cutoff 1000000000.0]) ============ 

558/100000000, 3632.606138/18000.0
          -> After 2 bonus runs: c1=2.15 c2=2.075 iter=12 rad=3 step=0.8 (4544.0 [based on 3 runs with cutoff 1000000000.0])

    Changing ["rad: 3->5"], evaluating ...
          -> Take improving step to neighbour c1=2.15 c2=2.075 iter=12 rad=5 step=0.8 (3968.0 [based on 3 runs with cutoff 1000000000.0]) with flip 20

          
============= Performing 1 bonus runs of state: c1=2.15 c2=2.075 iter=12 rad=5 step=0.8 (3968.0 [based on 3 runs with cutoff 1000000000.0]) ============ 

          -> After 1 bonus runs: c1=2.15 c2=2.075 iter=12 rad=5 step=0.8 (3345.0 [based on 4 runs with cutoff 1000000000.0])

    Changing ["c2: 2.075->2.0"], evaluating ...
564/100000000, 3643.804509/18000.0
        -> worse: (7452.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.075->2.1"], evaluating ...
          -> Take improving step to neighbour c1=2.15 c2=2.1 iter=12 rad=5 step=0.8 (3213.0 [based on 4 runs with cutoff 1000000000.0]) with flip 21

          
============= Performing 2 bonus runs of state: c1=2.15 c2=2.1 iter=12 rad=5 step=0.8 (3213.0 [based on 4 runs with cutoff 1000000000.0]) ============ 

570/100000000, 3667.6786599999996/18000.0
          -> After 2 bonus runs: c1=2.15 c2=2.1 iter=12 rad=5 step=0.8 (15948.0 [based on 6 runs with cutoff 1000000000.0])

    Changing ["step: 0.8->1.2"], evaluating ...
        -> worse: (6564.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->1.950"], evaluating ...
        -> worse: (12876.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.025"], evaluating ...
        -> worse: (7512.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 12->10"], evaluating ...
575/100000000, 3679.397995/18000.0
579/100000000, 3752.488031/18000.0
        -> worse: (61378.333333333336 [based on 6 runs with cutoff 1000000000.0])
    Changing ["rad: 5->1"], evaluating ...
        -> worse: (4148.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["iter: 12->8"], evaluating ...
586/100000000, 3763.8881689999994/18000.0
        -> worse: (3848.8 [based on 5 runs with cutoff 1000000000.0])
    Changing ["rad: 5->2"], evaluating ...
592/100000000, 3777.539617999999/18000.0
        -> worse: (8990.4 [based on 5 runs with cutoff 1000000000.0])
    Changing ["rad: 5->3"], evaluating ...
        -> worse: (3222.0 [based on 4 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->0.5"], evaluating ...
598/100000000, 3788.077990999999/18000.0
        -> worse: (4590.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.125"], evaluating ...
603/100000000, 3801.9151319999987/18000.0
        -> worse: (8760.0 [based on 5 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.05"], evaluating ...
        -> worse: (6144.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
        -> worse: (4476.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->2.0"], evaluating ...
        -> worse: (10104.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->2.1"], evaluating ...
608/100000000, 3813.035188999999/18000.0
609/100000000, 3919.713378999999/18000.0
        -> worse: (2002230.0045642126 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 12->3"], evaluating ...
614/100000000, 3930.0969569999993/18000.0
        -> worse: (4537.2 [based on 5 runs with cutoff 1000000000.0])
    Changing ["iter: 12->5"], evaluating ...
        -> worse: (7120.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->1.950"], evaluating ...
        -> worse: (4866.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->2.05"], evaluating ...
619/100000000, 3974.8109739999995/18000.0
        -> worse: (69108.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.15"], evaluating ...
621/100000000, 4063.1778469999995/18000.0
        -> worse: (158436.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->1.975"], evaluating ...
        -> worse: (3964.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["rad: 5->4"], evaluating ...
627/100000000, 4074.1187129999994/18000.0
        -> worse: (6372.0 [based on 5 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->2.125"], evaluating ...
632/100000000, 4084.7661179999996/18000.0
          -> Take improving step to neighbour c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (4024.0 [based on 6 runs with cutoff 1000000000.0]) with flip 22

          
============= Performing 22 bonus runs of state: c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (4024.0 [based on 6 runs with cutoff 1000000000.0]) ============ 

638/100000000, 4096.295253999999/18000.0
640/100000000, 4172.629009999999/18000.0
644/100000000, 4287.282656999998/18000.0
646/100000000, 4361.923024999997/18000.0
652/100000000, 4445.275005999997/18000.0
          -> After 22 bonus runs: c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (575042.5728260024 [based on 28 runs with cutoff 1000000000.0])

    Changing ["iter: 12->5"], evaluating ...
658/100000000, 4455.686144999998/18000.0
        -> worse: (3875.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 5->3"], evaluating ...
        -> worse: (10788.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 12->10"], evaluating ...
        -> worse: (6730.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.075"], evaluating ...
        -> worse: (6744.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
        -> worse: (5544.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->1.975"], evaluating ...
663/100000000, 4467.3975519999985/18000.0
        -> worse: (5844.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->1.950"], evaluating ...
        -> worse: (12192.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.025"], evaluating ...
        -> worse: (3960.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 12->8"], evaluating ...
        -> worse: (3664.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 5->2"], evaluating ...
        -> worse: (3960.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.0"], evaluating ...
668/100000000, 4478.439240999998/18000.0
        -> worse: (8316.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->1.975"], evaluating ...
        -> worse: (9528.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.125"], evaluating ...
671/100000000, 4594.147623999997/18000.0
        -> worse: (2002230.0045507224 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 12->3"], evaluating ...
        -> worse: (3699.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 5->4"], evaluating ...
        -> worse: (2646.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.05"], evaluating ...
        -> worse: (6084.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
        -> worse: (7224.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.15"], evaluating ...
677/100000000, 4605.580240999996/18000.0
        -> worse: (3650.4 [based on 5 runs with cutoff 1000000000.0])
    Changing ["rad: 5->1"], evaluating ...
        -> worse: (7572.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.025"], evaluating ...
683/100000000, 4616.791165999995/18000.0
        -> worse: (6144.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.075"], evaluating ...
        -> worse: (3912.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->0.5"], evaluating ...
        -> worse: (7104.0 [based on 1 runs with cutoff 1000000000.0])
          
============= Performing 22 bonus runs of state: c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (575042.5728260024 [based on 28 runs with cutoff 1000000000.0]) ============ 

688/100000000, 4637.834692999995/18000.0
694/100000000, 4648.559328999995/18000.0
698/100000000, 4733.172653999995/18000.0
704/100000000, 4745.599470999997/18000.0
707/100000000, 4766.051589999996/18000.0
          -> After 22 bonus runs for LM: c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (406991.76098256133 [based on 50 runs with cutoff 1000000000.0])

   LM for iteration 6: c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (406991.76098256133 [based on 50 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 6): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 6): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 181275.3003823124, based on 50 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (406991.76098256133 [based on 50 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (181275.3003823124 [based on 50 runs with cutoff 1000000000.0])
Incumbent better, keeping it
rejecting worse c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (406991.76098256133 [based on 50 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (181275.3003823124 [based on 50 runs with cutoff 1000000000.0])
708/100000000, 4768.267698999996/18000.0
iteration 7, flip 24, evaluation count 708
    perturb to ---> c1=2.05 c2=2.1 iter=5 rad=3 step=0.8 (4705.0 [based on 1 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.05 c2=2.1 iter=5 rad=5 step=0.8 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> c1=2.125 c2=2.1 iter=5 rad=5 step=0.8 (3875.0 [based on 1 runs with cutoff 1000000000.0])
   BLS in iteration 7, start with c1=2.125 c2=2.1 iter=5 rad=5 step=0.8 (2907.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.025"], evaluating ...
        -> worse: (8385.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 5->1"], evaluating ...
        -> worse: (3815.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 5->3"], evaluating ...
713/100000000, 4777.874827999996/18000.0
        -> worse: (3075.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.075"], evaluating ...
        -> worse: (3275.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.025"], evaluating ...
        -> worse: (6425.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->10"], evaluating ...
        -> worse: (4620.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 5->3"], evaluating ...
718/100000000, 4787.911236999997/18000.0
        -> worse: (5800.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.15"], evaluating ...
          -> Take improving step to neighbour c1=2.125 c2=2.15 iter=5 rad=5 step=0.8 (2860.0 [based on 2 runs with cutoff 1000000000.0]) with flip 24

          
============= Performing 8 bonus runs of state: c1=2.125 c2=2.15 iter=5 rad=5 step=0.8 (2860.0 [based on 2 runs with cutoff 1000000000.0]) ============ 

724/100000000, 4876.810152999997/18000.0
          -> After 8 bonus runs: c1=2.125 c2=2.15 iter=5 rad=5 step=0.8 (402979.001 [based on 10 runs with cutoff 1000000000.0])

    Changing ["step: 0.8->1.2"], evaluating ...
        -> worse: (6485.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->3"], evaluating ...
730/100000000, 4887.966261999996/18000.0
        -> worse: (3789.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.0"], evaluating ...
        -> worse: (6425.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.05"], evaluating ...
        -> worse: (43248.333333333336 [based on 3 runs with cutoff 1000000000.0])
    Changing ["iter: 5->8"], evaluating ...
        -> worse: (6112.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->1.975"], evaluating ...
        -> worse: (8385.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
735/100000000, 4899.790070999995/18000.0
        -> worse: (9900.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.025"], evaluating ...
737/100000000, 5015.118909999995/18000.0
        -> worse: (2001745.0045528961 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.15"], evaluating ...
739/100000000, 5130.182688999995/18000.0
        -> worse: (2001805.004552589 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 5->3"], evaluating ...
        -> worse: (7532.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 5->12"], evaluating ...
744/100000000, 5141.004908999994/18000.0
          -> Take improving step to neighbour c1=2.125 c2=2.15 iter=12 rad=5 step=0.8 (4149.6 [based on 10 runs with cutoff 1000000000.0]) with flip 25

          
============= Performing 11 bonus runs of state: c1=2.125 c2=2.15 iter=12 rad=5 step=0.8 (4149.6 [based on 10 runs with cutoff 1000000000.0]) ============ 

746/100000000, 5220.986406999994/18000.0
751/100000000, 5233.732347999994/18000.0
752/100000000, 5255.5237569999945/18000.0
          -> After 11 bonus runs: c1=2.125 c2=2.15 iter=12 rad=5 step=0.8 (199958.8576190476 [based on 21 runs with cutoff 1000000000.0])

    Changing ["c1: 2.125->2.0"], evaluating ...
        -> worse: (11520.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 5->4"], evaluating ...
758/100000000, 5266.481906999995/18000.0
        -> worse: (4188.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.15"], evaluating ...
        -> worse: (106716.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
        -> worse: (4224.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (3840.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
762/100000000, 5310.1546779999935/18000.0
        -> worse: (73686.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->1.975"], evaluating ...
        -> worse: (7044.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
764/100000000, 5330.426748999993/18000.0
        -> worse: (34038.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 5->2"], evaluating ...
766/100000000, 5412.871880999993/18000.0
        -> worse: (2001924.00456459 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.1"], evaluating ...
        -> worse: (5424.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 12->10"], evaluating ...
        -> worse: (4800.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.075"], evaluating ...
        -> worse: (2616.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
        -> worse: (4128.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 5->1"], evaluating ...
772/100000000, 5423.943275999993/18000.0
        -> worse: (7452.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
774/100000000, 5497.499632999992/18000.0
776/100000000, 5609.201796999992/18000.0
781/100000000, 5689.208182999993/18000.0
          -> Take improving step to neighbour c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (406991.76098256133 [based on 50 runs with cutoff 1000000000.0]) with flip 26

          
============= Performing 15 bonus runs of state: c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (406991.76098256133 [based on 50 runs with cutoff 1000000000.0]) ============ 

State wants more detail (50+1) than incumbent (50), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (406991.76098256133 [based on 50 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (181275.3003823124 [based on 50 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 5690.709907999993, 177771.76508069842 [51, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (51+1) than incumbent (51), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (399093.4127280013 [based on 51 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (177771.76508069842 [based on 51 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 5694.600082999993, 174436.25036760807 [52, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
785/100000000, 5704.792353999993/18000.0
State wants more detail (52+1) than incumbent (52), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (392067.462483232 [based on 52 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (174436.25036760807 [based on 52 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 5706.167885999993, 171174.24564369093 [53, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (53+1) than incumbent (53), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (384693.0575307182 [based on 53 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (171174.24564369093 [based on 53 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 5709.229007999993, 168087.03739103 [54, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (54+1) than incumbent (54), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (377643.1120208901 [based on 54 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (168087.03739103 [based on 54 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 5712.664773999993, 165093.9094384658 [55, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (55+1) than incumbent (55), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (370840.14634778304 [based on 55 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (165093.9094384658 [based on 55 runs with cutoff 1000000000.0])
792/100000000, 5763.524316999993/18000.0
 Same incumbent, new precision:
New Incumbent: 5763.524316999993, 168254.28605563607 [56, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
793/100000000, 5785.972845999993/18000.0
State wants more detail (56+1) than incumbent (56), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (366298.0723058583 [based on 56 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (168254.28605563607 [based on 56 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 5787.4884419999935, 165351.22840553717 [57, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (57+1) than incumbent (57), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (360347.15875663277 [based on 57 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (165351.22840553717 [based on 57 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 5795.084940999994, 162577.24170888998 [58, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
797/100000000, 5796.980382999994/18000.0
State wants more detail (58+1) than incumbent (58), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (354201.7249849667 [based on 58 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (162577.24170888998 [based on 58 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 5799.010960999994, 159922.6274426376 [59, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (59+1) than incumbent (59), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (348232.27201911976 [based on 59 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (159922.6274426376 [based on 59 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 5801.982355999994, 157279.50031859367 [60, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (60+1) than incumbent (60), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (342453.0008188011 [based on 60 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (157279.50031859367 [based on 60 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 5805.682605999995, 154783.03310025606 [61, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
803/100000000, 5915.8209489999945/18000.0
State wants more detail (61+1) than incumbent (61), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (402429.83702045033 [based on 61 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (154783.03310025606 [based on 61 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 5917.408515999994, 152340.4035341229 [62, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (62+1) than incumbent (62), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (395998.06545560434 [based on 62 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (152340.4035341229 [based on 62 runs with cutoff 1000000000.0])
806/100000000, 5965.290963999994/18000.0
 Same incumbent, new precision:
New Incumbent: 5965.290963999994, 155034.04792247014 [63, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
807/100000000, 5993.020555999994/18000.0
State wants more detail (63+1) than incumbent (63), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (392044.57235313446 [based on 63 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (155034.04792247014 [based on 63 runs with cutoff 1000000000.0])
808/100000000, 6017.259313999994/18000.0
 Same incumbent, new precision:
New Incumbent: 6017.259313999994, 155222.89092368155 [64, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
809/100000000, 6089.865691999995/18000.0
State wants more detail (64+1) than incumbent (64), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (448420.1260663667 [based on 64 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (155222.89092368155 [based on 64 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 6091.495200999995, 152894.23106331722 [65, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
          -> After 15 bonus runs: c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (441571.7548961149 [based on 65 runs with cutoff 1000000000.0])

    Changing ["c2: 2.1->2.125"], evaluating ...
        -> worse: (1335952.003033815 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->1.975"], evaluating ...
813/100000000, 6104.123960999995/18000.0
        -> worse: (19584.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.05"], evaluating ...
        -> worse: (47696.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["rad: 5->1"], evaluating ...
        -> worse: (6120.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 5->4"], evaluating ...
        -> worse: (2736.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.025"], evaluating ...
817/100000000, 6115.100587999996/18000.0
        -> worse: (10662.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->1.950"], evaluating ...
818/100000000, 6221.984301999995/18000.0
        -> worse: (2006958.00455633 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.1"], evaluating ...
        -> worse: (1336112.0030428085 [based on 3 runs with cutoff 1000000000.0])
    Changing ["iter: 12->8"], evaluating ...
        -> worse: (3064.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->0.5"], evaluating ...
        -> worse: (4854.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.0"], evaluating ...
        -> worse: (7014.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.075"], evaluating ...
823/100000000, 6232.233569999996/18000.0
        -> worse: (4494.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.0"], evaluating ...
        -> worse: (10308.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
        -> worse: (3834.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 5->2"], evaluating ...
826/100000000, 6261.300868999996/18000.0
        -> worse: (57936.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
        -> worse: (4674.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->1.950"], evaluating ...
        -> worse: (17070.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.15"], evaluating ...
829/100000000, 6271.740873999996/18000.0
        -> worse: (14129.142857142857 [based on 7 runs with cutoff 1000000000.0])
    Changing ["rad: 5->3"], evaluating ...
        -> worse: (6912.0 [based on 2 runs with cutoff 1000000000.0])
          
============= Performing 19 bonus runs of state: c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (441571.7548961149 [based on 65 runs with cutoff 1000000000.0]) ============ 

State wants more detail (65+1) than incumbent (65), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (441571.7548961149 [based on 65 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (152894.23106331722 [based on 65 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 6275.703125999997, 150682.42453205484 [66, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (66+1) than incumbent (66), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (434950.546488598 [based on 66 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (150682.42453205484 [based on 66 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 6279.325437999996, 148494.77640471075 [67, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (67+1) than incumbent (67), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (428509.97116787266 [based on 67 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (148494.77640471075 [based on 67 runs with cutoff 1000000000.0])
835/100000000, 6314.157680999996/18000.0
 Same incumbent, new precision:
New Incumbent: 6314.157680999996, 148342.6473399356 [68, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
836/100000000, 6328.105361999996/18000.0
State wants more detail (68+1) than incumbent (68), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (422921.4715918745 [based on 68 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (148342.6473399356 [based on 68 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 6329.5926109999955, 146224.92781326984 [69, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (69+1) than incumbent (69), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (416940.52272822417 [based on 69 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (146224.92781326984 [based on 69 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 6333.730232999995, 144161.64313022312 [70, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (70+1) than incumbent (70), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (411007.0295463924 [based on 70 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (144161.64313022312 [based on 70 runs with cutoff 1000000000.0])
841/100000000, 6344.392128999994/18000.0
 Same incumbent, new precision:
New Incumbent: 6344.392128999994, 142981.47914247352 [71, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
842/100000000, 6417.5842529999945/18000.0
State wants more detail (71+1) than incumbent (71), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (461560.7334964432 [based on 71 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (142981.47914247352 [based on 71 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 6419.002198999994, 141019.0280432725 [72, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
844/100000000, 6495.126151999994/18000.0
State wants more detail (72+1) than incumbent (72), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (510706.83455899253 [based on 72 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (141019.0280432725 [based on 72 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 6496.887610999995, 139123.83587829614 [73, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (73+1) than incumbent (73), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (503804.87792119815 [based on 73 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (139123.83587829614 [based on 73 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 6501.599443999994, 137295.00025831917 [74, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (74+1) than incumbent (74), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (497123.35254388466 [based on 74 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (137295.00025831917 [based on 74 runs with cutoff 1000000000.0])
849/100000000, 6506.463326999994/18000.0
 Same incumbent, new precision:
New Incumbent: 6506.463326999994, 135567.06692154158 [75, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (75+1) than incumbent (75), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (490570.08117663284 [based on 75 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (135567.06692154158 [based on 75 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 6510.325960999994, 133839.93446204762 [76, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (76+1) than incumbent (76), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (484161.790634835 [based on 76 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (133839.93446204762 [based on 76 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 6513.7580459999945, 132149.61063786517 [77, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (77+1) than incumbent (77), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (477916.988159058 [based on 77 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (132149.61063786517 [based on 77 runs with cutoff 1000000000.0])
855/100000000, 6517.293029999994/18000.0
 Same incumbent, new precision:
New Incumbent: 6517.293029999994, 130513.01306558486 [78, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (78+1) than incumbent (78), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (471856.9242083008 [based on 78 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (130513.01306558486 [based on 78 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 6521.121606999995, 128919.05087488126 [79, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (79+1) than incumbent (79), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (465934.1783322464 [based on 79 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (128919.05087488126 [based on 79 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 6524.367717999994, 127326.87523894524 [80, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (80+1) than incumbent (80), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (460130.4011030933 [based on 80 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (127326.87523894524 [based on 80 runs with cutoff 1000000000.0])
861/100000000, 6527.7989649999945/18000.0
 Same incumbent, new precision:
New Incumbent: 6527.7989649999945, 125794.93850760024 [81, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (81+1) than incumbent (81), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (454563.8529413267 [based on 81 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (125794.93850760024 [based on 81 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 6532.883545999995, 124299.08559897097 [82, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
State wants more detail (82+1) than incumbent (82), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (449055.9522957008 [based on 82 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (124299.08559897097 [based on 82 runs with cutoff 1000000000.0])
865/100000000, 6593.410109999994/18000.0
 Same incumbent, new precision:
New Incumbent: 6593.410109999994, 170999.6991459713 [83, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
866/100000000, 6667.415571999994/18000.0
State wants more detail (83+1) than incumbent (83), doing incumbent first:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (491850.9409427405 [based on 83 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (170999.6991459713 [based on 83 runs with cutoff 1000000000.0])
 Same incumbent, new precision:
New Incumbent: 6670.007107999994, 169091.60748947164 [84, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
          -> After 19 bonus runs for LM: c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (486056.7154553269 [based on 84 runs with cutoff 1000000000.0])

   LM for iteration 7: c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (486056.7154553269 [based on 84 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 7): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 7): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 169091.60748947164, based on 84 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (486056.7154553269 [based on 84 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (169091.60748947164 [based on 84 runs with cutoff 1000000000.0])
Incumbent better, keeping it
rejecting worse c1=2.125 c2=2.1 iter=12 rad=5 step=0.8 (486056.7154553269 [based on 84 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (169091.60748947164 [based on 84 runs with cutoff 1000000000.0])
868/100000000, 6672.113712999994/18000.0
iteration 8, flip 28, evaluation count 868
    perturb to ---> c1=2.05 c2=2.15 iter=5 rad=2 step=0.8 (4885.0 [based on 1 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.05 c2=2.1 iter=5 rad=2 step=0.8 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> c1=2.05 c2=2.1 iter=5 rad=2 step=1.0 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 8, start with c1=2.05 c2=2.1 iter=5 rad=2 step=1.0 (3240.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.05"], evaluating ...
871/100000000, 6681.885752999994/18000.0
        -> worse: (18877.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.125"], evaluating ...
        -> worse: (6280.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.15"], evaluating ...
        -> worse: (6545.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->0.8"], evaluating ...
        -> worse: (6425.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.025"], evaluating ...
        -> worse: (10080.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 2->4"], evaluating ...
876/100000000, 6692.062443999994/18000.0
        -> worse: (6280.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->3"], evaluating ...
        -> worse: (6480.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.0"], evaluating ...
        -> worse: (16170.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->10"], evaluating ...
        -> worse: (5220.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->1.975"], evaluating ...
880/100000000, 6702.361839999993/18000.0
        -> worse: (24820.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->8"], evaluating ...
        -> worse: (5484.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.15"], evaluating ...
        -> worse: (6545.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->0.5"], evaluating ...
        -> worse: (5640.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->1.950"], evaluating ...
885/100000000, 6755.505295999993/18000.0
        -> worse: (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->1.2"], evaluating ...
        -> worse: (7720.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.025"], evaluating ...
        -> worse: (7720.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.075"], evaluating ...
        -> worse: (5800.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.125"], evaluating ...
        -> worse: (3875.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 2->1"], evaluating ...
890/100000000, 6770.525389999993/18000.0
        -> worse: (19840.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.075"], evaluating ...
        -> worse: (3875.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.950"], evaluating ...
        -> worse: (9960.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 2->5"], evaluating ...
        -> worse: (4235.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.0"], evaluating ...
        -> worse: (10305.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.1"], evaluating ...
896/100000000, 6782.794658999994/18000.0
        -> worse: (5415.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 5->12"], evaluating ...
        -> worse: (3840.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.975"], evaluating ...
        -> worse: (12890.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 2->3"], evaluating ...
        -> worse: (4115.0 [based on 1 runs with cutoff 1000000000.0])
          
============= Performing 28 bonus runs of state: c1=2.05 c2=2.1 iter=5 rad=2 step=1.0 (2860.0 [based on 2 runs with cutoff 1000000000.0]) ============ 

902/100000000, 6794.339382999994/18000.0
907/100000000, 6805.766775999995/18000.0
908/100000000, 6852.628950999995/18000.0
914/100000000, 6863.937598999995/18000.0
920/100000000, 6920.684215999996/18000.0
922/100000000, 6933.193131999996/18000.0
927/100000000, 6986.932457999997/18000.0
          -> After 28 bonus runs for LM: c1=2.05 c2=2.1 iter=5 rad=2 step=1.0 (406780.8343333333 [based on 30 runs with cutoff 1000000000.0])

   LM for iteration 8: c1=2.05 c2=2.1 iter=5 rad=2 step=1.0 (406780.8343333333 [based on 30 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 8): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 8): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 169091.60748947164, based on 84 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.05 c2=2.1 iter=5 rad=2 step=1.0 (406780.8343333333 [based on 30 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (169091.60748947164 [based on 84 runs with cutoff 1000000000.0])
Incumbent better, keeping it
rejecting worse c1=2.05 c2=2.1 iter=5 rad=2 step=1.0 (406780.8343333333 [based on 30 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (169091.60748947164 [based on 84 runs with cutoff 1000000000.0])
927/100000000, 6986.932457999997/18000.0
iteration 9, flip 29, evaluation count 927
    perturb to ---> c1=1.975 c2=2.15 iter=5 rad=3 step=0.8 (4408.333333333333 [based on 3 runs with cutoff 1000000000.0])
    perturb to ---> c1=1.975 c2=2.1 iter=5 rad=3 step=0.8 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> c1=1.975 c2=2.1 iter=5 rad=3 step=1.0 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 9, start with c1=1.975 c2=2.1 iter=5 rad=3 step=1.0 (18790.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 1.975->2.0"], evaluating ...
          -> Take improving step to neighbour c1=2.0 c2=2.1 iter=5 rad=3 step=1.0 (7060.0 [based on 1 runs with cutoff 1000000000.0]) with flip 29

          
============= Performing 1 bonus runs of state: c1=2.0 c2=2.1 iter=5 rad=3 step=1.0 (7060.0 [based on 1 runs with cutoff 1000000000.0]) ============ 

930/100000000, 7019.858972999997/18000.0
          -> After 1 bonus runs: c1=2.0 c2=2.1 iter=5 rad=3 step=1.0 (60140.0 [based on 2 runs with cutoff 1000000000.0])

    Changing ["c1: 2.0->2.1"], evaluating ...
        -> worse: (8140.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->8"], evaluating ...
          -> Take improving step to neighbour c1=2.0 c2=2.1 iter=8 rad=3 step=1.0 (6428.0 [based on 2 runs with cutoff 1000000000.0]) with flip 30

          
============= Performing 2 bonus runs of state: c1=2.0 c2=2.1 iter=8 rad=3 step=1.0 (6428.0 [based on 2 runs with cutoff 1000000000.0]) ============ 

935/100000000, 7030.510451999997/18000.0
          -> After 2 bonus runs: c1=2.0 c2=2.1 iter=8 rad=3 step=1.0 (5709.0 [based on 4 runs with cutoff 1000000000.0])

    Changing ["c1: 2.0->2.025"], evaluating ...
        -> worse: (7186.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.0->2.075"], evaluating ...
          -> Take improving step to neighbour c1=2.075 c2=2.1 iter=8 rad=3 step=1.0 (3359.0 [based on 4 runs with cutoff 1000000000.0]) with flip 31

          
============= Performing 2 bonus runs of state: c1=2.075 c2=2.1 iter=8 rad=3 step=1.0 (3359.0 [based on 4 runs with cutoff 1000000000.0]) ============ 

940/100000000, 7094.9663589999955/18000.0
          -> After 2 bonus runs: c1=2.075 c2=2.1 iter=8 rad=3 step=1.0 (670052.6683333333 [based on 6 runs with cutoff 1000000000.0])

    Changing ["c2: 2.1->1.950"], evaluating ...
        -> worse: (56452.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->0.8"], evaluating ...
942/100000000, 7105.205712999996/18000.0
        -> worse: (5178.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->1.975"], evaluating ...
        -> worse: (7716.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.05"], evaluating ...
        -> worse: (4466.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.0"], evaluating ...
        -> worse: (11640.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.1"], evaluating ...
        -> worse: (6580.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 8->10"], evaluating ...
947/100000000, 7115.592705999995/18000.0
        -> worse: (3430.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->1.975"], evaluating ...
        -> worse: (12372.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.05"], evaluating ...
        -> worse: (11640.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 8->12"], evaluating ...
        -> worse: (6804.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->4"], evaluating ...
        -> worse: (7716.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.125"], evaluating ...
952/100000000, 7127.008693999996/18000.0
953/100000000, 7183.6543559999955/18000.0
        -> worse: (125336.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 3->1"], evaluating ...
        -> worse: (5932.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->0.5"], evaluating ...
          -> Take improving step to neighbour c1=2.075 c2=2.1 iter=8 rad=3 step=0.5 (342099.895503044 [based on 38 runs with cutoff 1000000000.0]) with flip 32

          
============= Performing 14 bonus runs of state: c1=2.075 c2=2.1 iter=8 rad=3 step=0.5 (342099.895503044 [based on 38 runs with cutoff 1000000000.0]) ============ 

957/100000000, 7223.689202999995/18000.0
962/100000000, 7234.066863999995/18000.0
966/100000000, 7252.685141999995/18000.0
          -> After 14 bonus runs: c1=2.075 c2=2.1 iter=8 rad=3 step=0.5 (257659.6928676091 [based on 52 runs with cutoff 1000000000.0])

    Changing ["c2: 2.1->2.075"], evaluating ...
        -> worse: (3576.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 3->4"], evaluating ...
971/100000000, 7262.763599999995/18000.0
        -> worse: (5578.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 8->3"], evaluating ...
        -> worse: (3592.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->1.950"], evaluating ...
        -> worse: (15330.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.125"], evaluating ...
        -> worse: (5846.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 3->2"], evaluating ...
        -> worse: (4238.666666666667 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->1.975"], evaluating ...
976/100000000, 7276.112291999995/18000.0
        -> worse: (12768.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.025"], evaluating ...
        -> worse: (8772.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.0"], evaluating ...
        -> worse: (7880.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 3->5"], evaluating ...
        -> worse: (4696.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.1"], evaluating ...
        -> worse: (52849.333333333336 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.125"], evaluating ...
        -> worse: (5360.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.0"], evaluating ...
982/100000000, 7287.940581999996/18000.0
        -> worse: (1337350.6697011453 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.05"], evaluating ...
        -> worse: (8814.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->1.950"], evaluating ...
        -> worse: (26800.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 8->10"], evaluating ...
        -> worse: (3875.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 0.5->1.2"], evaluating ...
        -> worse: (3902.6666666666665 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.15"], evaluating ...
987/100000000, 7390.205153999995/18000.0
        -> worse: (2003540.0045570268 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.025"], evaluating ...
        -> worse: (4968.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["iter: 8->12"], evaluating ...
        -> worse: (14178.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 3->1"], evaluating ...
990/100000000, 7403.403911999994/18000.0
        -> worse: (14674.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.05"], evaluating ...
        -> worse: (5498.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.15"], evaluating ...
        -> worse: (5818.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 8->5"], evaluating ...
993/100000000, 7442.013726999994/18000.0
        -> worse: (74497.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->1.975"], evaluating ...
        -> worse: (8256.0 [based on 2 runs with cutoff 1000000000.0])
          
============= Performing 25 bonus runs of state: c1=2.075 c2=2.1 iter=8 rad=3 step=0.5 (257659.6928676091 [based on 52 runs with cutoff 1000000000.0]) ============ 

998/100000000, 7452.685835999994/18000.0
1004/100000000, 7463.1657549999945/18000.0
1005/100000000, 7481.369228999994/18000.0
1006/100000000, 7537.334350999994/18000.0
1010/100000000, 7550.835349999994/18000.0
1013/100000000, 7587.575858999995/18000.0
1015/100000000, 7683.073485999995/18000.0
          -> After 25 bonus runs for LM: c1=2.075 c2=2.1 iter=8 rad=3 step=0.5 (284163.9486781896 [based on 77 runs with cutoff 1000000000.0])

   LM for iteration 9: c1=2.075 c2=2.1 iter=8 rad=3 step=0.5 (284163.9486781896 [based on 77 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 9): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 9): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 169091.60748947164, based on 84 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.075 c2=2.1 iter=8 rad=3 step=0.5 (284163.9486781896 [based on 77 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (169091.60748947164 [based on 84 runs with cutoff 1000000000.0])
Incumbent better, keeping it
rejecting worse c1=2.075 c2=2.1 iter=8 rad=3 step=0.5 (284163.9486781896 [based on 77 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (169091.60748947164 [based on 84 runs with cutoff 1000000000.0])
1019/100000000, 7690.849982999995/18000.0
iteration 10, flip 34, evaluation count 1019
    perturb to ---> c1=1.950 c2=2.15 iter=5 rad=3 step=0.8 (8865.0 [based on 1 runs with cutoff 1000000000.0])
    perturb to ---> c1=1.950 c2=2.125 iter=5 rad=3 step=0.8 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> c1=1.950 c2=2.125 iter=5 rad=1 step=0.8 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 10, start with c1=1.950 c2=2.125 iter=5 rad=1 step=0.8 (7300.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 1->4"], evaluating ...
1021/100000000, 7694.543514999995/18000.0
          -> Take improving step to neighbour c1=1.950 c2=2.125 iter=5 rad=4 step=0.8 (5160.0 [based on 1 runs with cutoff 1000000000.0]) with flip 34

          
============= Performing 1 bonus runs of state: c1=1.950 c2=2.125 iter=5 rad=4 step=0.8 (5160.0 [based on 1 runs with cutoff 1000000000.0]) ============ 

          -> After 1 bonus runs: c1=1.950 c2=2.125 iter=5 rad=4 step=0.8 (4685.0 [based on 2 runs with cutoff 1000000000.0])

    Changing ["step: 0.8->1.2"], evaluating ...
        -> worse: (13460.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->8"], evaluating ...
        -> worse: (7060.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.125->1.975"], evaluating ...
1025/100000000, 7766.082894999995/18000.0
        -> worse: (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 1.950->2.0"], evaluating ...
1027/100000000, 7781.861781999995/18000.0
        -> worse: (27700.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.125->2.075"], evaluating ...
        -> worse: (48310.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 1.950->2.025"], evaluating ...
1029/100000000, 7792.925693999995/18000.0
        -> worse: (7840.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 4->2"], evaluating ...
        -> worse: (9660.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 1.950->2.05"], evaluating ...
1032/100000000, 7900.858555999995/18000.0
        -> worse: (2001835.004552982 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 4->3"], evaluating ...
        -> worse: (12830.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 1.950->2.125"], evaluating ...
1035/100000000, 8010.001590999995/18000.0
        -> worse: (2001485.0045855572 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.125->2.05"], evaluating ...
1036/100000000, 8072.0134379999945/18000.0
        -> worse: (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 1.950->2.1"], evaluating ...
        -> worse: (5220.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->3"], evaluating ...
        -> worse: (9087.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
        -> worse: (8745.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.125->1.950"], evaluating ...
1040/100000000, 8141.2463569999945/18000.0
        -> worse: (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 1.950->2.15"], evaluating ...
1042/100000000, 8247.167582999995/18000.0
        -> worse: (2002387.5045516924 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.125->2.0"], evaluating ...
1043/100000000, 8311.157457999994/18000.0
        -> worse: (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.125->2.1"], evaluating ...
        -> worse: (13010.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->10"], evaluating ...
        -> worse: (8710.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 1.950->2.075"], evaluating ...
          -> Take improving step to neighbour c1=2.075 c2=2.125 iter=5 rad=4 step=0.8 (2832.5 [based on 2 runs with cutoff 1000000000.0]) with flip 35

          
============= Performing 20 bonus runs of state: c1=2.075 c2=2.125 iter=5 rad=4 step=0.8 (2832.5 [based on 2 runs with cutoff 1000000000.0]) ============ 

1048/100000000, 8322.188802999994/18000.0
1051/100000000, 8395.713883999993/18000.0
1056/100000000, 8426.389792999993/18000.0
1060/100000000, 8536.613100999994/18000.0
1065/100000000, 8546.809062999993/18000.0
          -> After 20 bonus runs: c1=2.075 c2=2.125 iter=5 rad=4 step=0.8 (373740.45541373244 [based on 22 runs with cutoff 1000000000.0])

    Changing ["c2: 2.125->2.1"], evaluating ...
        -> worse: (5920.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.125->2.05"], evaluating ...
        -> worse: (7060.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->12"], evaluating ...
        -> worse: (2748.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.125->2.075"], evaluating ...
1071/100000000, 8558.60351599999/18000.0
        -> worse: (7720.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 4->1"], evaluating ...
        -> worse: (7120.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->1.975"], evaluating ...
        -> worse: (8385.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.125->2.15"], evaluating ...
        -> worse: (5860.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->10"], evaluating ...
        -> worse: (3490.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->3"], evaluating ...
        -> worse: (3078.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.125->2.025"], evaluating ...
1077/100000000, 8570.166884999991/18000.0
        -> worse: (6040.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 4->3"], evaluating ...
        -> worse: (3540.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
        -> worse: (3697.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 5->8"], evaluating ...
        -> worse: (5932.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
1083/100000000, 8581.518547999993/18000.0
        -> worse: (3042.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 4->2"], evaluating ...
        -> worse: (9205.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 4->5"], evaluating ...
        -> worse: (5340.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.125->1.975"], evaluating ...
        -> worse: (12830.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.125->2.0"], evaluating ...
1087/100000000, 8592.140281999993/18000.0
        -> worse: (13640.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->0.5"], evaluating ...
        -> worse: (2720.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.125->1.950"], evaluating ...
1089/100000000, 8603.775910999993/18000.0
        -> worse: (57695.0 [based on 1 runs with cutoff 1000000000.0])
          
============= Performing 20 bonus runs of state: c1=2.075 c2=2.125 iter=5 rad=4 step=0.8 (373740.45541373244 [based on 22 runs with cutoff 1000000000.0]) ============ 

1093/100000000, 8615.656136999993/18000.0
1097/100000000, 8690.125817999993/18000.0
1101/100000000, 8701.436448999993/18000.0
1106/100000000, 8712.058983999994/18000.0
1107/100000000, 8781.633594999994/18000.0
          -> After 20 bonus runs for LM: c1=2.075 c2=2.125 iter=5 rad=4 step=0.8 (389002.2628357646 [based on 42 runs with cutoff 1000000000.0])

   LM for iteration 10: c1=2.075 c2=2.125 iter=5 rad=4 step=0.8 (389002.2628357646 [based on 42 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 10): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 10): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 169091.60748947164, based on 84 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.075 c2=2.125 iter=5 rad=4 step=0.8 (389002.2628357646 [based on 42 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (169091.60748947164 [based on 84 runs with cutoff 1000000000.0])
Incumbent better, keeping it
rejecting worse c1=2.075 c2=2.125 iter=5 rad=4 step=0.8 (389002.2628357646 [based on 42 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (169091.60748947164 [based on 84 runs with cutoff 1000000000.0])
1109/100000000, 8784.948033999994/18000.0
iteration 11, flip 37, evaluation count 1109
    perturb to ---> c1=2.05 c2=2.15 iter=3 rad=3 step=0.8 (4000410.01 [based on 1 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.05 c2=2.1 iter=3 rad=3 step=0.8 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> c1=2.05 c2=2.1 iter=3 rad=4 step=0.8 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 11, start with c1=2.05 c2=2.1 iter=3 rad=4 step=0.8 (3078.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.075"], evaluating ...
        -> worse: (4269.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.075"], evaluating ...
        -> worse: (8706.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 4->2"], evaluating ...
1113/100000000, 8792.522455999993/18000.0
        -> worse: (4269.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 4->5"], evaluating ...
1114/100000000, 8804.357329999993/18000.0
        -> worse: (58182.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 3->8"], evaluating ...
        -> worse: (3120.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.05"], evaluating ...
        -> worse: (10104.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.975"], evaluating ...
        -> worse: (6090.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 4->1"], evaluating ...
1119/100000000, 8843.618092999994/18000.0
        -> worse: (89041.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.0"], evaluating ...
        -> worse: (16830.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->1.975"], evaluating ...
        -> worse: (31581.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
1122/100000000, 8855.236749999993/18000.0
        -> worse: (4089.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.15"], evaluating ...
        -> worse: (4476.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 3->12"], evaluating ...
        -> worse: (5148.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
        -> worse: (3849.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.125"], evaluating ...
        -> worse: (4896.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 3->10"], evaluating ...
        -> worse: (7460.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.0"], evaluating ...
1128/100000000, 8867.621413999992/18000.0
        -> worse: (8646.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.025"], evaluating ...
        -> worse: (16212.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 3->5"], evaluating ...
        -> worse: (7060.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.125"], evaluating ...
          -> Take improving step to neighbour c1=2.125 c2=2.1 iter=3 rad=4 step=0.8 (2494.5 [based on 2 runs with cutoff 1000000000.0]) with flip 37

          
============= Performing 21 bonus runs of state: c1=2.125 c2=2.1 iter=3 rad=4 step=0.8 (2494.5 [based on 2 runs with cutoff 1000000000.0]) ============ 

1133/100000000, 8878.77908399999/18000.0
1139/100000000, 8889.762108999992/18000.0
1141/100000000, 8948.215010999991/18000.0
1143/100000000, 8988.91476999999/18000.0
1145/100000000, 9059.41922399999/18000.0
1146/100000000, 9074.91518999999/18000.0
1147/100000000, 9101.256614999991/18000.0
1153/100000000, 9181.26312899999/18000.0
          -> After 21 bonus runs: c1=2.125 c2=2.1 iter=3 rad=4 step=0.8 (218937.39173913043 [based on 23 runs with cutoff 1000000000.0])

    Changing ["rad: 4->2"], evaluating ...
        -> worse: (2838.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 3->8"], evaluating ...
        -> worse: (2539.0 [based on 4 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.1"], evaluating ...
1159/100000000, 9191.406230999988/18000.0
        -> worse: (6300.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->1.950"], evaluating ...
        -> worse: (11895.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 4->3"], evaluating ...
        -> worse: (2792.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.025"], evaluating ...
        -> worse: (5670.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.15"], evaluating ...
1165/100000000, 9203.30524399999/18000.0
        -> worse: (6540.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->0.5"], evaluating ...
        -> worse: (5040.0 [based on 5 runs with cutoff 1000000000.0])
    Changing ["rad: 4->1"], evaluating ...
1171/100000000, 9214.52136499999/18000.0
        -> worse: (3339.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->1.975"], evaluating ...
        -> worse: (8226.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.05"], evaluating ...
        -> worse: (5670.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
        -> worse: (2898.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.075"], evaluating ...
        -> worse: (6300.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.125"], evaluating ...
1176/100000000, 9224.844623999988/18000.0
        -> worse: (4896.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 3->5"], evaluating ...
        -> worse: (6280.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
        -> worse: (2898.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 3->12"], evaluating ...
        -> worse: (2496.0 [based on 4 runs with cutoff 1000000000.0])
    Changing ["rad: 4->5"], evaluating ...
        -> worse: (3199.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->1.950"], evaluating ...
1181/100000000, 9235.41226499999/18000.0
        -> worse: (15147.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.025"], evaluating ...
        -> worse: (3159.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 3->10"], evaluating ...
        -> worse: (4920.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.0"], evaluating ...
        -> worse: (6984.0 [based on 1 runs with cutoff 1000000000.0])
          
============= Performing 22 bonus runs of state: c1=2.125 c2=2.1 iter=3 rad=4 step=0.8 (218937.39173913043 [based on 23 runs with cutoff 1000000000.0]) ============ 

1187/100000000, 9246.671045999989/18000.0
1191/100000000, 9270.42563899999/18000.0
1192/100000000, 9375.50795299999/18000.0
1198/100000000, 9386.695280999988/18000.0
1201/100000000, 9408.188117999987/18000.0
1206/100000000, 9422.479799999986/18000.0
          -> After 22 bonus runs for LM: c1=2.125 c2=2.1 iter=3 rad=4 step=0.8 (207172.46709156834 [based on 45 runs with cutoff 1000000000.0])

   LM for iteration 11: c1=2.125 c2=2.1 iter=3 rad=4 step=0.8 (207172.46709156834 [based on 45 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 11): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 11): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 169091.60748947164, based on 84 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.125 c2=2.1 iter=3 rad=4 step=0.8 (207172.46709156834 [based on 45 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (169091.60748947164 [based on 84 runs with cutoff 1000000000.0])
Incumbent better, keeping it
rejecting worse c1=2.125 c2=2.1 iter=3 rad=4 step=0.8 (207172.46709156834 [based on 45 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (169091.60748947164 [based on 84 runs with cutoff 1000000000.0])
1206/100000000, 9422.479799999986/18000.0
iteration 12, flip 39, evaluation count 1206
    perturb to ---> c1=2.05 c2=2.15 iter=8 rad=3 step=0.8 (6588.0 [based on 2 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (169091.60748947164 [based on 84 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.05 c2=2.15 iter=5 rad=3 step=1.0 (4350.0 [based on 5 runs with cutoff 1000000000.0])
1207/100000000, 9434.558038999987/18000.0
   BLS in iteration 12, start with c1=2.05 c2=2.15 iter=5 rad=3 step=1.0 (16338.333333333334 [based on 6 runs with cutoff 1000000000.0])
    Changing ["rad: 3->4"], evaluating ...
        -> worse: (3465.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.1"], evaluating ...
        -> worse: (7840.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (10305.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
1212/100000000, 9445.670818999986/18000.0
        -> worse: (10920.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.0"], evaluating ...
        -> worse: (4295.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.975"], evaluating ...
        -> worse: (3875.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->0.8"], evaluating ...
          -> Take improving step to neighbour c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (169091.60748947164 [based on 84 runs with cutoff 1000000000.0]) with flip 39

          
============= Performing 7 bonus runs of state: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (169091.60748947164 [based on 84 runs with cutoff 1000000000.0]) ============ 

1216/100000000, 9543.814647999985/18000.0
 Same incumbent, new precision:
New Incumbent: 9543.814647999985, 214167.00044979554 [85, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1217/100000000, 9601.343527999985/18000.0
 Same incumbent, new precision:
New Incumbent: 9601.343527999985, 258193.54707247234 [86, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9603.064650999984, 255275.1154969267 [87, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9604.647594999984, 252409.88691173436 [88, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9606.558305999984, 249636.85447452386 [89, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9607.881439999985, 246881.2783136958 [90, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9609.407742999985, 244198.95657398485 [91, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
          -> After 7 bonus runs: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (244198.95657398485 [based on 91 runs with cutoff 1000000000.0])

    Changing ["c2: 2.15->2.125"], evaluating ...
1223/100000000, 9612.058069999985/18000.0
        -> worse: (7487.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.950"], evaluating ...
1224/100000000, 9704.395175999985/18000.0
        -> worse: (4000275.0095620565 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 3->2"], evaluating ...
        -> worse: (6615.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
        -> worse: (31660.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 3->5"], evaluating ...
        -> worse: (32811.25 [based on 4 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.0"], evaluating ...
1228/100000000, 9718.231954999987/18000.0
        -> worse: (20735.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 3->1"], evaluating ...
1229/100000000, 9729.359705999987/18000.0
        -> worse: (53838.181818181816 [based on 11 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (10145.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->0.5"], evaluating ...
        -> worse: (3302.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 5->10"], evaluating ...
        -> worse: (5480.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (5320.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
1234/100000000, 9740.608155999986/18000.0
        -> worse: (4457.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.15"], evaluating ...
        -> worse: (104248.33333333333 [based on 3 runs with cutoff 1000000000.0])
    Changing ["rad: 3->4"], evaluating ...
        -> worse: (574458.5728571428 [based on 7 runs with cutoff 1000000000.0])
    Changing ["iter: 5->12"], evaluating ...
        -> worse: (10182.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.075"], evaluating ...
        -> worse: (18185.714285714286 [based on 7 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.125"], evaluating ...
1239/100000000, 9751.673461999986/18000.0
        -> worse: (5965.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["iter: 5->3"], evaluating ...
        -> worse: (2004378.005 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
        -> worse: (5815.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
        -> worse: (5273.571428571428 [based on 7 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.025"], evaluating ...
        -> worse: (5317.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.950"], evaluating ...
1244/100000000, 9763.657171999985/18000.0
        -> worse: (8337.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 5->8"], evaluating ...
        -> worse: (5733.333333333333 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.0"], evaluating ...
        -> worse: (5502.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.1"], evaluating ...
        -> worse: (5362.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.975"], evaluating ...
        -> worse: (3793.75 [based on 4 runs with cutoff 1000000000.0])
          
============= Performing 26 bonus runs of state: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (244198.95657398485 [based on 91 runs with cutoff 1000000000.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 9772.960944999984, 241580.217915572 [92, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1250/100000000, 9775.237777999984/18000.0
 Same incumbent, new precision:
New Incumbent: 9775.237777999984, 239066.88223906045 [93, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9776.882404999984, 236566.2771088577 [94, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1252/100000000, 9788.549350999983/18000.0
 Same incumbent, new precision:
New Incumbent: 9788.549350999983, 234882.94787613288 [95, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9790.197491999983, 232471.0421690898 [96, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9792.310224999983, 230112.01080652187 [97, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9793.753368999984, 227782.5004921696 [98, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9795.948957999984, 225557.37422457195 [99, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1257/100000000, 9890.367858999984/18000.0
 Same incumbent, new precision:
New Incumbent: 9890.367858999984, 263305.80057358206 [100, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1258/100000000, 9941.782401999984/18000.0
 Same incumbent, new precision:
New Incumbent: 9941.782401999984, 264260.990666913 [101, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9943.392601999984, 261706.76526821774 [102, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9945.195251999983, 259210.6801685263 [103, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9946.725324999983, 256744.47170536738 [104, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9948.502397999982, 254347.14340341152 [105, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9950.719889999982, 252023.72695620952 [106, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1264/100000000, 9952.534047999981/18000.0
 Same incumbent, new precision:
New Incumbent: 9952.534047999981, 249711.77623699262 [107, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9954.187382999982, 247434.2134940575 [108, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9957.690447999983, 245331.7895170478 [109, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9959.783653999983, 243132.68233962008 [110, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1268/100000000, 9964.997526999983/18000.0
 Same incumbent, new precision:
New Incumbent: 9964.997526999983, 241213.82934556945 [111, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9966.415308999984, 239074.86658355544 [112, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 9967.783037999983, 236973.09785272751 [113, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1271/100000000, 10024.036353999983/18000.0
 Same incumbent, new precision:
New Incumbent: 10024.036353999983, 269984.29883647553 [114, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 10026.689386999984, 267730.87015094096 [115, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 10028.257627999985, 265456.8109255018 [116, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 10030.017806999986, 263225.34245605307 [117, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
          -> After 26 bonus runs for LM: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (263225.34245605307 [based on 117 runs with cutoff 1000000000.0])

   LM for iteration 12: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (263225.34245605307 [based on 117 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 12): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 12): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 263225.34245605307, based on 117 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (263225.34245605307 [based on 117 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (263225.34245605307 [based on 117 runs with cutoff 1000000000.0])
LM better, change incumbent
New Incumbent: 10030.017806999986, 263225.34245605307 [117, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
same state as last ILS: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (263225.34245605307 [based on 117 runs with cutoff 1000000000.0])
1274/100000000, 10030.017806999986/18000.0
iteration 13, flip 41, evaluation count 1274
    perturb to ---> c1=2.05 c2=2.15 iter=8 rad=3 step=0.8 (5733.333333333333 [based on 3 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.05 c2=2.1 iter=8 rad=3 step=0.8 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> c1=2.05 c2=2.05 iter=8 rad=3 step=0.8 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 13, start with c1=2.05 c2=2.05 iter=8 rad=3 step=0.8 (11460.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
1276/100000000, 10035.006824999986/18000.0
          -> Take improving step to neighbour c1=2.05 c2=2.05 iter=8 rad=3 step=1.0 (5428.0 [based on 2 runs with cutoff 1000000000.0]) with flip 41

          
============= Performing 2 bonus runs of state: c1=2.05 c2=2.05 iter=8 rad=3 step=1.0 (5428.0 [based on 2 runs with cutoff 1000000000.0]) ============ 

          -> After 2 bonus runs: c1=2.05 c2=2.05 iter=8 rad=3 step=1.0 (5132.0 [based on 4 runs with cutoff 1000000000.0])

    Changing ["iter: 8->10"], evaluating ...
1281/100000000, 10133.097295999985/18000.0
        -> worse: (2003150.0045640406 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 3->2"], evaluating ...
        -> worse: (10796.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.025"], evaluating ...
        -> worse: (15052.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->4"], evaluating ...
1286/100000000, 10144.752415999985/18000.0
          -> Take improving step to neighbour c1=2.05 c2=2.05 iter=8 rad=4 step=1.0 (4460.0 [based on 4 runs with cutoff 1000000000.0]) with flip 42

          
============= Performing 4 bonus runs of state: c1=2.05 c2=2.05 iter=8 rad=4 step=1.0 (4460.0 [based on 4 runs with cutoff 1000000000.0]) ============ 

1289/100000000, 10163.766647999984/18000.0
          -> After 4 bonus runs: c1=2.05 c2=2.05 iter=8 rad=4 step=1.0 (15821.5 [based on 8 runs with cutoff 1000000000.0])

    Changing ["c2: 2.05->1.975"], evaluating ...
        -> worse: (16364.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.05->2.15"], evaluating ...
1293/100000000, 10174.096489999984/18000.0
        -> worse: (4772.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.075"], evaluating ...
        -> worse: (7876.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.05->2.1"], evaluating ...
1299/100000000, 10186.009986999983/18000.0
          -> Take improving step to neighbour c1=2.05 c2=2.1 iter=8 rad=4 step=1.0 (4524.5 [based on 8 runs with cutoff 1000000000.0]) with flip 43

          
============= Performing 4 bonus runs of state: c1=2.05 c2=2.1 iter=8 rad=4 step=1.0 (4524.5 [based on 8 runs with cutoff 1000000000.0]) ============ 

1304/100000000, 10196.975276999983/18000.0
1305/100000000, 10264.510391999984/18000.0
          -> After 4 bonus runs: c1=2.05 c2=2.1 iter=8 rad=4 step=1.0 (338150.33416666667 [based on 12 runs with cutoff 1000000000.0])

    Changing ["c2: 2.1->2.025"], evaluating ...
        -> worse: (7236.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 4->1"], evaluating ...
        -> worse: (3544.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->0.8"], evaluating ...
        -> worse: (3272.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 8->10"], evaluating ...
1310/100000000, 10274.812921999985/18000.0
        -> worse: (10560.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->1.2"], evaluating ...
        -> worse: (3120.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.075"], evaluating ...
        -> worse: (8492.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.125"], evaluating ...
        -> worse: (3364.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.025"], evaluating ...
        -> worse: (3904.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.0"], evaluating ...
1315/100000000, 10286.164962999985/18000.0
        -> worse: (17684.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->2.125"], evaluating ...
        -> worse: (5608.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 4->3"], evaluating ...
        -> worse: (4692.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.15"], evaluating ...
        -> worse: (6700.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 8->12"], evaluating ...
        -> worse: (6804.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 4->2"], evaluating ...
1320/100000000, 10296.254604999984/18000.0
        -> worse: (5745.333333333333 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.950"], evaluating ...
        -> worse: (7236.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 8->5"], evaluating ...
        -> worse: (4522.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->0.5"], evaluating ...
        -> worse: (3120.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.1->1.950"], evaluating ...
1324/100000000, 10362.906022999985/18000.0
        -> worse: (4000160.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 4->5"], evaluating ...
        -> worse: (7236.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.0"], evaluating ...
        -> worse: (7876.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.1"], evaluating ...
        -> worse: (3060.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 8->3"], evaluating ...
        -> worse: (3339.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.075"], evaluating ...
1329/100000000, 10373.193069999985/18000.0
        -> worse: (5750.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.975"], evaluating ...
        -> worse: (12372.0 [based on 1 runs with cutoff 1000000000.0])
          
============= Performing 24 bonus runs of state: c1=2.05 c2=2.1 iter=8 rad=4 step=1.0 (338150.33416666667 [based on 12 runs with cutoff 1000000000.0]) ============ 

1331/100000000, 10477.032876999985/18000.0
1335/100000000, 10487.047474999983/18000.0
1341/100000000, 10512.559559999985/18000.0
1343/100000000, 10618.287969999985/18000.0
1348/100000000, 10648.450251999986/18000.0
1354/100000000, 10659.793708999987/18000.0
          -> After 24 bonus runs for LM: c1=2.05 c2=2.1 iter=8 rad=4 step=1.0 (344200.6674511386 [based on 36 runs with cutoff 1000000000.0])

   LM for iteration 13: c1=2.05 c2=2.1 iter=8 rad=4 step=1.0 (344200.6674511386 [based on 36 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 13): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 13): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 263225.34245605307, based on 117 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.05 c2=2.1 iter=8 rad=4 step=1.0 (344200.6674511386 [based on 36 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (263225.34245605307 [based on 117 runs with cutoff 1000000000.0])
Incumbent better, keeping it
rejecting worse c1=2.05 c2=2.1 iter=8 rad=4 step=1.0 (344200.6674511386 [based on 36 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (263225.34245605307 [based on 117 runs with cutoff 1000000000.0])
1354/100000000, 10659.793708999987/18000.0
iteration 14, flip 45, evaluation count 1354
    perturb to ---> c1=2.025 c2=2.15 iter=5 rad=3 step=0.8 (5317.5 [based on 2 runs with cutoff 1000000000.0])
    perturb to ---> c1=1.950 c2=2.15 iter=5 rad=3 step=0.8 (8337.5 [based on 2 runs with cutoff 1000000000.0])
    perturb to ---> c1=1.950 c2=2.15 iter=5 rad=3 step=0.5 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 14, start with c1=1.950 c2=2.15 iter=5 rad=3 step=0.5 (4885.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->8"], evaluating ...
        -> worse: (5308.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->5"], evaluating ...
        -> worse: (6100.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->3"], evaluating ...
        -> worse: (12990.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->2"], evaluating ...
1359/100000000, 10670.569143999986/18000.0
        -> worse: (6340.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 1.950->2.15"], evaluating ...
          -> Take improving step to neighbour c1=2.15 c2=2.15 iter=5 rad=3 step=0.5 (2720.0 [based on 1 runs with cutoff 1000000000.0]) with flip 45

          
============= Performing 5 bonus runs of state: c1=2.15 c2=2.15 iter=5 rad=3 step=0.5 (2720.0 [based on 1 runs with cutoff 1000000000.0]) ============ 

1361/100000000, 10766.049471999986/18000.0
1365/100000000, 10829.634388999986/18000.0
          -> After 5 bonus runs: c1=2.15 c2=2.15 iter=5 rad=3 step=0.5 (1335129.169853662 [based on 6 runs with cutoff 1000000000.0])

    Changing ["step: 0.5->1.2"], evaluating ...
1367/100000000, 10923.137706999985/18000.0
        -> worse: (802087.0018254045 [based on 5 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.0"], evaluating ...
        -> worse: (4885.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (5460.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
        -> worse: (3080.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.5->0.8"], evaluating ...
1374/100000000, 10934.182379999986/18000.0
1376/100000000, 10946.024338999987/18000.0
          -> Take improving step to neighbour c1=2.15 c2=2.15 iter=5 rad=3 step=0.8 (63945.833333333336 [based on 6 runs with cutoff 1000000000.0]) with flip 46

          
============= Performing 5 bonus runs of state: c1=2.15 c2=2.15 iter=5 rad=3 step=0.8 (63945.833333333336 [based on 6 runs with cutoff 1000000000.0]) ============ 

1381/100000000, 11009.993719999988/18000.0
          -> After 5 bonus runs: c1=2.15 c2=2.15 iter=5 rad=3 step=0.8 (400246.8190909091 [based on 11 runs with cutoff 1000000000.0])

    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (8625.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->1.950"], evaluating ...
1386/100000000, 11024.706057999989/18000.0
1391/100000000, 11089.728785999989/18000.0
          -> Take improving step to neighbour c1=1.950 c2=2.15 iter=5 rad=3 step=0.8 (44741.36363636364 [based on 11 runs with cutoff 1000000000.0]) with flip 47

          
============= Performing 2 bonus runs of state: c1=1.950 c2=2.15 iter=5 rad=3 step=0.8 (44741.36363636364 [based on 11 runs with cutoff 1000000000.0]) ============ 

1393/100000000, 11185.02876399999/18000.0
          -> After 2 bonus runs: c1=1.950 c2=2.15 iter=5 rad=3 step=0.8 (346096.1545463522 [based on 13 runs with cutoff 1000000000.0])

    Changing ["c2: 2.15->1.950"], evaluating ...
1394/100000000, 11239.47629099999/18000.0
        -> worse: (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
1395/100000000, 11292.57532999999/18000.0
        -> worse: (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
        -> worse: (9720.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 1.950->2.1"], evaluating ...
1400/100000000, 11356.733539999988/18000.0
        -> worse: (669919.1683333333 [based on 6 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.125"], evaluating ...
        -> worse: (12795.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 3->1"], evaluating ...
        -> worse: (15890.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->5"], evaluating ...
1404/100000000, 11431.51052799999/18000.0
        -> worse: (118175.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
1405/100000000, 11484.15525799999/18000.0
        -> worse: (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->10"], evaluating ...
1407/100000000, 11501.50874599999/18000.0
        -> worse: (34695.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 5->8"], evaluating ...
        -> worse: (10556.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 1.950->2.025"], evaluating ...
1412/100000000, 11538.23381499999/18000.0
        -> worse: (37628.333333333336 [based on 6 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
1413/100000000, 11592.13877299999/18000.0
        -> worse: (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 1.950->2.075"], evaluating ...
        -> worse: (16266.875 [based on 8 runs with cutoff 1000000000.0])
    Changing ["rad: 3->4"], evaluating ...
        -> worse: (10845.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 1.950->2.125"], evaluating ...
1418/100000000, 11607.72740999999/18000.0
1423/100000000, 11673.874722999988/18000.0
        -> worse: (372175.45545454544 [based on 11 runs with cutoff 1000000000.0])
    Changing ["iter: 5->12"], evaluating ...
1428/100000000, 11713.40009599999/18000.0
        -> worse: (44114.0 [based on 6 runs with cutoff 1000000000.0])
    Changing ["c1: 1.950->2.05"], evaluating ...
          -> Take improving step to neighbour c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (263225.34245605307 [based on 117 runs with cutoff 1000000000.0]) with flip 48

          
============= Performing 17 bonus runs of state: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (263225.34245605307 [based on 117 runs with cutoff 1000000000.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 11716.58246099999, 261013.51751998483 [118, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 11718.09383399999, 258842.64762485892 [119, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 11719.913589999991, 256725.12556131842 [120, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 11722.531663999991, 254691.94270543975 [121, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1434/100000000, 11724.163993999991/18000.0
 Same incumbent, new precision:
New Incumbent: 11724.163993999991, 252630.4513717886 [122, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 11725.46956599999, 250587.6428240505 [123, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 11727.06632299999, 248592.7828012759 [124, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 11733.90410699999, 246942.4805388657 [125, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1438/100000000, 11827.299743999989/18000.0
 Same incumbent, new precision:
New Incumbent: 11827.299743999989, 276731.82600372884 [126, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 11828.704632999988, 274565.0399722034 [127, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 11830.243377999988, 272432.69590992056 [128, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1441/100000000, 11888.461279999989/18000.0
 Same incumbent, new precision:
New Incumbent: 11888.461279999989, 273379.45795713045 [129, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 11890.257023999988, 271309.53904976795 [130, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 11896.450405999987, 269526.4891333575 [131, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 11898.437793999987, 267532.8036096199 [132, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1445/100000000, 11900.056458999987/18000.0
 Same incumbent, new precision:
New Incumbent: 11900.056458999987, 265546.57952232956 [133, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 11901.835156999987, 263596.455794551 [134, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
          -> After 17 bonus runs: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (263596.455794551 [based on 134 runs with cutoff 1000000000.0])

    Changing ["c2: 2.15->1.950"], evaluating ...
1447/100000000, 11954.692167999987/18000.0
        -> worse: (4000266.676374704 [based on 3 runs with cutoff 1000000000.0])
    Changing ["rad: 3->4"], evaluating ...
        -> worse: (503387.50125 [based on 8 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.0"], evaluating ...
        -> worse: (5435.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["rad: 3->5"], evaluating ...
        -> worse: (26854.0 [based on 5 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (5673.333333333333 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.0"], evaluating ...
1452/100000000, 11965.211283999986/18000.0
        -> worse: (18093.333333333332 [based on 3 runs with cutoff 1000000000.0])
    Changing ["rad: 3->1"], evaluating ...
        -> worse: (49727.916666666664 [based on 12 runs with cutoff 1000000000.0])
    Changing ["rad: 3->2"], evaluating ...
        -> worse: (5903.333333333333 [based on 3 runs with cutoff 1000000000.0])
    Changing ["iter: 5->10"], evaluating ...
        -> worse: (4562.5 [based on 4 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
        -> worse: (6821.666666666667 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (8858.333333333334 [based on 3 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
1458/100000000, 11976.163102999986/18000.0
        -> worse: (13482.5 [based on 8 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.975"], evaluating ...
        -> worse: (5485.0 [based on 5 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
        -> worse: (5026.666666666667 [based on 3 runs with cutoff 1000000000.0])
    Changing ["iter: 5->12"], evaluating ...
        -> worse: (8240.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["iter: 5->8"], evaluating ...
        -> worse: (4832.0 [based on 4 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.125"], evaluating ...
        -> worse: (6455.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["iter: 5->3"], evaluating ...
1464/100000000, 11987.680771999983/18000.0
        -> worse: (1337711.0033333332 [based on 3 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->0.5"], evaluating ...
        -> worse: (3525.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
1466/100000000, 11998.969984999983/18000.0
        -> worse: (42465.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
        -> worse: (5436.25 [based on 8 runs with cutoff 1000000000.0])
          
============= Performing 21 bonus runs of state: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (263596.455794551 [based on 134 runs with cutoff 1000000000.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 12004.839330999985, 261779.03760348022 [135, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 12006.525470999984, 259880.44173874875 [136, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 12008.078925999984, 258004.9640618236 [137, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1471/100000000, 12009.575077999983/18000.0
 Same incumbent, new precision:
New Incumbent: 12009.575077999983, 256147.9353367379 [138, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1472/100000000, 12066.181774999983/18000.0
 Same incumbent, new precision:
New Incumbent: 12066.181774999983, 283083.20206093404 [139, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 12067.804547999982, 281078.1434747845 [140, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 12069.230619999982, 279097.02188985696 [141, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 12070.943519999983, 277161.37384837907 [142, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 12073.861796999983, 275315.5950102785 [143, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1477/100000000, 12105.260677999982/18000.0
 Same incumbent, new precision:
New Incumbent: 12105.260677999982, 274308.68115604046 [144, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 12106.931057999982, 272441.8971480678 [145, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1479/100000000, 12164.898278999983/18000.0
 Same incumbent, new precision:
New Incumbent: 12164.898278999983, 297975.8568251358 [146, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 12166.716811999982, 295979.5244657811 [147, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 12168.143413999982, 293991.41957074206 [148, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 12170.576118999981, 292054.59796288476 [149, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 12172.21058999998, 290131.90064313216 [150, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 12174.194783999981, 288252.881433575 [151, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1485/100000000, 12175.91421999998/18000.0
 Same incumbent, new precision:
New Incumbent: 12175.91421999998, 286385.32958203834 [152, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1486/100000000, 12206.718758999981/18000.0
 Same incumbent, new precision:
New Incumbent: 12206.718758999981, 285877.6803690838 [153, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 12208.565497999982, 284053.66945759626 [154, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 12210.054509999982, 282235.32320303115 [155, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
          -> After 21 bonus runs for LM: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (282235.32320303115 [based on 155 runs with cutoff 1000000000.0])

   LM for iteration 14: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (282235.32320303115 [based on 155 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 14): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 14): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 282235.32320303115, based on 155 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (282235.32320303115 [based on 155 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (282235.32320303115 [based on 155 runs with cutoff 1000000000.0])
LM better, change incumbent
New Incumbent: 12210.054509999982, 282235.32320303115 [155, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
same state as last ILS: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (282235.32320303115 [based on 155 runs with cutoff 1000000000.0])
1488/100000000, 12210.054509999982/18000.0
iteration 15, flip 50, evaluation count 1488
    perturb to ---> c1=2.1 c2=2.15 iter=5 rad=3 step=0.8 (669919.1683333333 [based on 6 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.1 c2=2.15 iter=5 rad=3 step=0.5 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> c1=2.1 c2=2.15 iter=3 rad=3 step=0.5 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 15, start with c1=2.1 c2=2.15 iter=3 rad=3 step=0.5 (6780.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.1->2.075"], evaluating ...
          -> Take improving step to neighbour c1=2.075 c2=2.15 iter=3 rad=3 step=0.5 (3399.0 [based on 1 runs with cutoff 1000000000.0]) with flip 50

          
============= Performing 1 bonus runs of state: c1=2.075 c2=2.15 iter=3 rad=3 step=0.5 (3399.0 [based on 1 runs with cutoff 1000000000.0]) ============ 

          -> After 1 bonus runs: c1=2.075 c2=2.15 iter=3 rad=3 step=0.5 (2994.0 [based on 2 runs with cutoff 1000000000.0])

    Changing ["c1: 2.075->2.025"], evaluating ...
1492/100000000, 12217.798894999984/18000.0
        -> worse: (8166.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.125"], evaluating ...
        -> worse: (4596.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.125"], evaluating ...
        -> worse: (4596.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.05"], evaluating ...
        -> worse: (8166.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.950"], evaluating ...
1496/100000000, 12230.262294999986/18000.0
        -> worse: (41025.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->1.975"], evaluating ...
        -> worse: (3111.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.0"], evaluating ...
        -> worse: (6540.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
        -> worse: (18705.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.5->1.0"], evaluating ...
1501/100000000, 12241.231157999984/18000.0
        -> worse: (3579.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->4"], evaluating ...
        -> worse: (5670.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.5->0.8"], evaluating ...
1506/100000000, 12279.704817999986/18000.0
          -> Take improving step to neighbour c1=2.075 c2=2.15 iter=3 rad=3 step=0.8 (377200.91 [based on 11 runs with cutoff 1000000000.0]) with flip 51

          
============= Performing 11 bonus runs of state: c1=2.075 c2=2.15 iter=3 rad=3 step=0.8 (377200.91 [based on 11 runs with cutoff 1000000000.0]) ============ 

1510/100000000, 12291.855811999985/18000.0
1512/100000000, 12353.683669999984/18000.0
          -> After 11 bonus runs: c1=2.075 c2=2.15 iter=3 rad=3 step=0.8 (373177.5009090909 [based on 22 runs with cutoff 1000000000.0])

    Changing ["iter: 3->8"], evaluating ...
        -> worse: (4236.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.125"], evaluating ...
1519/100000000, 12365.637938999984/18000.0
        -> worse: (8706.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.15"], evaluating ...
        -> worse: (5670.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 3->12"], evaluating ...
        -> worse: (3108.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.0"], evaluating ...
        -> worse: (17514.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->1"], evaluating ...
1523/100000000, 12380.376727999983/18000.0
          -> Take improving step to neighbour c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (205446.2795348837 [based on 43 runs with cutoff 1000000000.0]) with flip 52

          
============= Performing 6 bonus runs of state: c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (205446.2795348837 [based on 43 runs with cutoff 1000000000.0]) ============ 

1529/100000000, 12426.260679999985/18000.0
          -> After 6 bonus runs: c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (262483.47 [based on 49 runs with cutoff 1000000000.0])

    Changing ["step: 0.8->0.5"], evaluating ...
        -> worse: (4816.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.1"], evaluating ...
1531/100000000, 12502.708668999985/18000.0
        -> worse: (2004553.5045526437 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
1532/100000000, 12559.105914999986/18000.0
        -> worse: (161089.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.025"], evaluating ...
        -> worse: (6990.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
        -> worse: (4007.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.05"], evaluating ...
        -> worse: (406746.001 [based on 10 runs with cutoff 1000000000.0])
    Changing ["iter: 3->10"], evaluating ...
        -> worse: (4110.0 [based on 4 runs with cutoff 1000000000.0])
    Changing ["rad: 1->5"], evaluating ...
1537/100000000, 12569.497687999989/18000.0
        -> worse: (3911.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (18373.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->1.950"], evaluating ...
        -> worse: (9690.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.950"], evaluating ...
1540/100000000, 12585.389589999988/18000.0
        -> worse: (26647.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.15"], evaluating ...
        -> worse: (4711.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.0"], evaluating ...
        -> worse: (8691.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.125"], evaluating ...
        -> worse: (4285.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->1.975"], evaluating ...
1544/100000000, 12638.298301999988/18000.0
        -> worse: (133921.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
        -> worse: (11035.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 1->4"], evaluating ...
        -> worse: (4966.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (5613.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
        -> worse: (575105.5728571428 [based on 7 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.0"], evaluating ...
1549/100000000, 12682.513252999988/18000.0
        -> worse: (99121.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
        -> worse: (3688.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 3->12"], evaluating ...
        -> worse: (7484.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["iter: 3->5"], evaluating ...
        -> worse: (5507.0 [based on 5 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.125"], evaluating ...
        -> worse: (20112.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["rad: 1->2"], evaluating ...
        -> worse: (39964.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["iter: 3->8"], evaluating ...
1555/100000000, 12692.889576999987/18000.0
        -> worse: (4309.333333333333 [based on 3 runs with cutoff 1000000000.0])
          
============= Performing 26 bonus runs of state: c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (262483.47 [based on 49 runs with cutoff 1000000000.0]) ============ 

1562/100000000, 12705.916653999986/18000.0
1567/100000000, 12747.801258999985/18000.0
1569/100000000, 12786.009550999985/18000.0
1570/100000000, 12824.341623999984/18000.0
1575/100000000, 12834.973026999984/18000.0
1581/100000000, 12845.564706999983/18000.0
          -> After 26 bonus runs for LM: c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (282715.28066666663 [based on 75 runs with cutoff 1000000000.0])

   LM for iteration 15: c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (282715.28066666663 [based on 75 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 15): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 15): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 282235.32320303115, based on 155 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (282715.28066666663 [based on 75 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (282235.32320303115 [based on 155 runs with cutoff 1000000000.0])
Incumbent better, keeping it
rejecting worse c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (282715.28066666663 [based on 75 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (282235.32320303115 [based on 155 runs with cutoff 1000000000.0])
1581/100000000, 12845.564706999983/18000.0
iteration 16, flip 54, evaluation count 1581
    perturb to ---> c1=2.05 c2=2.15 iter=5 rad=3 step=1.0 (13482.5 [based on 8 runs with cutoff 1000000000.0])
    perturb to ---> c1=1.950 c2=2.15 iter=5 rad=3 step=1.0 (12830.0 [based on 1 runs with cutoff 1000000000.0])
    perturb to ---> c1=1.950 c2=2.025 iter=5 rad=3 step=1.0 (100000000 [based on 0 runs with cutoff 0])
1582/100000000, 12898.968897999983/18000.0
   BLS in iteration 16, start with c1=1.950 c2=2.025 iter=5 rad=3 step=1.0 (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->4"], evaluating ...
1583/100000000, 12960.729016999983/18000.0
          -> Take improving step to neighbour c1=1.950 c2=2.025 iter=5 rad=4 step=1.0 (4000300.01 [based on 1 runs with cutoff 1000000000.0]) with flip 54

          
============= Performing 1 bonus runs of state: c1=1.950 c2=2.025 iter=5 rad=4 step=1.0 (4000300.01 [based on 1 runs with cutoff 1000000000.0]) ============ 

1584/100000000, 13063.266908999984/18000.0
          -> After 1 bonus runs: c1=1.950 c2=2.025 iter=5 rad=4 step=1.0 (4000275.009596281 [based on 2 runs with cutoff 1000000000.0])

    Changing ["c1: 1.950->2.15"], evaluating ...
          -> Take improving step to neighbour c1=2.15 c2=2.025 iter=5 rad=4 step=1.0 (4912.5 [based on 2 runs with cutoff 1000000000.0]) with flip 55

          
============= Performing 1 bonus runs of state: c1=2.15 c2=2.025 iter=5 rad=4 step=1.0 (4912.5 [based on 2 runs with cutoff 1000000000.0]) ============ 

          -> After 1 bonus runs: c1=2.15 c2=2.025 iter=5 rad=4 step=1.0 (4450.0 [based on 3 runs with cutoff 1000000000.0])

    Changing ["iter: 5->10"], evaluating ...
        -> worse: (7460.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->2.1"], evaluating ...
1589/100000000, 13073.847158999984/18000.0
        -> worse: (9660.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->0.5"], evaluating ...
        -> worse: (7780.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.025->2.05"], evaluating ...
        -> worse: (7980.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->2.0"], evaluating ...
1593/100000000, 13089.622079999985/18000.0
        -> worse: (40060.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->2.025"], evaluating ...
        -> worse: (15410.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 4->2"], evaluating ...
        -> worse: (8385.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->1.975"], evaluating ...
1596/100000000, 13156.707820999984/18000.0
        -> worse: (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->0.8"], evaluating ...
          -> Take improving step to neighbour c1=2.15 c2=2.025 iter=5 rad=4 step=0.8 (3605.0 [based on 3 runs with cutoff 1000000000.0]) with flip 56

          
============= Performing 9 bonus runs of state: c1=2.15 c2=2.025 iter=5 rad=4 step=0.8 (3605.0 [based on 3 runs with cutoff 1000000000.0]) ============ 

1602/100000000, 13237.791583999986/18000.0
1607/100000000, 13262.624085999987/18000.0
          -> After 9 bonus runs: c1=2.15 c2=2.025 iter=5 rad=4 step=0.8 (344721.6675 [based on 12 runs with cutoff 1000000000.0])

    Changing ["iter: 5->12"], evaluating ...
        -> worse: (4788.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.025->2.05"], evaluating ...
        -> worse: (7680.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.025->2.125"], evaluating ...
1612/100000000, 13274.138489999988/18000.0
        -> worse: (1335948.336367795 [based on 3 runs with cutoff 1000000000.0])
    Changing ["rad: 4->3"], evaluating ...
        -> worse: (3963.3333333333335 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->2.025"], evaluating ...
        -> worse: (10920.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 4->5"], evaluating ...
1617/100000000, 13284.560357999988/18000.0
        -> worse: (6220.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->2.1"], evaluating ...
        -> worse: (7420.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->2.125"], evaluating ...
        -> worse: (3705.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->2.075"], evaluating ...
1622/100000000, 13294.751030999989/18000.0
        -> worse: (5530.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 4->2"], evaluating ...
        -> worse: (7900.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.025->2.15"], evaluating ...
        -> worse: (6822.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 5->10"], evaluating ...
1627/100000000, 13306.532353999988/18000.0
        -> worse: (3915.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.025->1.975"], evaluating ...
        -> worse: (9660.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->8"], evaluating ...
1630/100000000, 13317.35851199999/18000.0
        -> worse: (12030.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->2.0"], evaluating ...
        -> worse: (42600.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.025->2.075"], evaluating ...
        -> worse: (6665.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.025->2.1"], evaluating ...
1633/100000000, 13328.87888399999/18000.0
1634/100000000, 13434.71879499999/18000.0
        -> worse: (2001605.0045618215 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 4->1"], evaluating ...
        -> worse: (8925.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->3"], evaluating ...
        -> worse: (6300.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.025->2.0"], evaluating ...
1638/100000000, 13445.08061299999/18000.0
        -> worse: (8360.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
1643/100000000, 13455.16901099999/18000.0
        -> worse: (5053.0 [based on 5 runs with cutoff 1000000000.0])
    Changing ["c2: 2.025->1.950"], evaluating ...
        -> worse: (9720.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->1.975"], evaluating ...
1645/100000000, 13520.84548899999/18000.0
        -> worse: (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->1.950"], evaluating ...
1646/100000000, 13583.84517799999/18000.0
        -> worse: (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->2.05"], evaluating ...
        -> worse: (10305.0 [based on 1 runs with cutoff 1000000000.0])
          
============= Performing 25 bonus runs of state: c1=2.15 c2=2.025 iter=5 rad=4 step=0.8 (344721.6675 [based on 12 runs with cutoff 1000000000.0]) ============ 

1652/100000000, 13662.075530999991/18000.0
1658/100000000, 13701.068015999992/18000.0
1664/100000000, 13711.591287999992/18000.0
1665/100000000, 13780.010345999992/18000.0
1671/100000000, 13791.550514999992/18000.0
1672/100000000, 13894.898064999992/18000.0
          -> After 25 bonus runs for LM: c1=2.15 c2=2.025 iter=5 rad=4 step=0.8 (442940.5415978883 [based on 37 runs with cutoff 1000000000.0])

   LM for iteration 16: c1=2.15 c2=2.025 iter=5 rad=4 step=0.8 (442940.5415978883 [based on 37 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 16): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 16): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 282235.32320303115, based on 155 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.15 c2=2.025 iter=5 rad=4 step=0.8 (442940.5415978883 [based on 37 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (282235.32320303115 [based on 155 runs with cutoff 1000000000.0])
Incumbent better, keeping it
rejecting worse c1=2.15 c2=2.025 iter=5 rad=4 step=0.8 (442940.5415978883 [based on 37 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (282235.32320303115 [based on 155 runs with cutoff 1000000000.0])
1672/100000000, 13894.898064999992/18000.0
iteration 17, flip 58, evaluation count 1672
    perturb to ---> c1=2.05 c2=2.125 iter=5 rad=3 step=0.8 (6455.0 [based on 3 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (282235.32320303115 [based on 155 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.025 c2=2.15 iter=5 rad=3 step=0.8 (37628.333333333336 [based on 6 runs with cutoff 1000000000.0])
   BLS in iteration 17, start with c1=2.025 c2=2.15 iter=5 rad=3 step=0.8 (32790.0 [based on 7 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
        -> worse: (8020.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.025->1.975"], evaluating ...
1675/100000000, 13955.413382999994/18000.0
        -> worse: (671312.5016666666 [based on 6 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
        -> worse: (6587.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.0"], evaluating ...
1678/100000000, 13966.525009999996/18000.0
        -> worse: (37130.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
1679/100000000, 14021.286107999997/18000.0
        -> worse: (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
        -> worse: (16805.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->2"], evaluating ...
1685/100000000, 14033.026603999995/18000.0
1686/100000000, 14055.426208999996/18000.0
          -> Take improving step to neighbour c1=2.025 c2=2.15 iter=5 rad=2 step=0.8 (29790.0 [based on 7 runs with cutoff 1000000000.0]) with flip 58

          
============= Performing 7 bonus runs of state: c1=2.025 c2=2.15 iter=5 rad=2 step=0.8 (29790.0 [based on 7 runs with cutoff 1000000000.0]) ============ 

1692/100000000, 14066.228824999997/18000.0
1693/100000000, 14149.900563999996/18000.0
          -> After 7 bonus runs: c1=2.025 c2=2.15 iter=5 rad=2 step=0.8 (303227.5006508883 [based on 14 runs with cutoff 1000000000.0])

    Changing ["step: 0.8->0.5"], evaluating ...
        -> worse: (3240.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (11340.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->3"], evaluating ...
        -> worse: (4716.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
        -> worse: (3420.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
1699/100000000, 14159.938460999996/18000.0
        -> worse: (3420.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.025->1.975"], evaluating ...
        -> worse: (7060.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 2->5"], evaluating ...
        -> worse: (1335651.6697019308 [based on 3 runs with cutoff 1000000000.0])
    Changing ["rad: 2->4"], evaluating ...
        -> worse: (3140.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.025->2.125"], evaluating ...
        -> worse: (7540.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
1704/100000000, 14171.462704999996/18000.0
        -> worse: (29030.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
        -> worse: (9660.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.025->2.075"], evaluating ...
        -> worse: (9145.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (10665.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.025->2.05"], evaluating ...
        -> worse: (4817.5 [based on 4 runs with cutoff 1000000000.0])
    Changing ["c1: 2.025->2.15"], evaluating ...
        -> worse: (3140.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.025->1.950"], evaluating ...
1710/100000000, 14183.218657999996/18000.0
        -> worse: (8445.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->8"], evaluating ...
        -> worse: (5168.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.950"], evaluating ...
1712/100000000, 14228.005662999996/18000.0
        -> worse: (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.025->2.0"], evaluating ...
        -> worse: (4585.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.0"], evaluating ...
        -> worse: (36890.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->10"], evaluating ...
        -> worse: (4740.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 5->12"], evaluating ...
1716/100000000, 14238.563997999996/18000.0
        -> worse: (10104.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.025->2.1"], evaluating ...
        -> worse: (2900.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 2->1"], evaluating ...
        -> worse: (8925.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
1719/100000000, 14285.254538999996/18000.0
        -> worse: (4000300.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.125"], evaluating ...
        -> worse: (5160.0 [based on 1 runs with cutoff 1000000000.0])
          
============= Performing 26 bonus runs of state: c1=2.025 c2=2.15 iter=5 rad=2 step=0.8 (303227.5006508883 [based on 14 runs with cutoff 1000000000.0]) ============ 

1723/100000000, 14339.263105999995/18000.0
1729/100000000, 14352.734844999995/18000.0
1735/100000000, 14363.918398999995/18000.0
1736/100000000, 14381.429899999996/18000.0
1742/100000000, 14391.596345999995/18000.0
1746/100000000, 14441.234581999995/18000.0
          -> After 26 bonus runs for LM: c1=2.025 c2=2.15 iter=5 rad=2 step=0.8 (223121.2504778109 [based on 40 runs with cutoff 1000000000.0])

   LM for iteration 17: c1=2.025 c2=2.15 iter=5 rad=2 step=0.8 (223121.2504778109 [based on 40 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 17): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 17): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 282235.32320303115, based on 155 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.025 c2=2.15 iter=5 rad=2 step=0.8 (223121.2504778109 [based on 40 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (282235.32320303115 [based on 155 runs with cutoff 1000000000.0])
Incumbent better, keeping it
rejecting worse c1=2.025 c2=2.15 iter=5 rad=2 step=0.8 (223121.2504778109 [based on 40 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (282235.32320303115 [based on 155 runs with cutoff 1000000000.0])
1746/100000000, 14441.234581999995/18000.0
iteration 18, flip 60, evaluation count 1746
    perturb to ---> c1=2.05 c2=2.025 iter=5 rad=3 step=0.8 (6821.666666666667 [based on 3 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.05 c2=2.025 iter=3 rad=3 step=0.8 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> c1=2.05 c2=2.025 iter=12 rad=3 step=0.8 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 18, start with c1=2.05 c2=2.025 iter=12 rad=3 step=0.8 (8796.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.025->2.15"], evaluating ...
          -> Take improving step to neighbour c1=2.05 c2=2.15 iter=12 rad=3 step=0.8 (8240.0 [based on 3 runs with cutoff 1000000000.0]) with flip 60

          
============= Performing 1 bonus runs of state: c1=2.05 c2=2.15 iter=12 rad=3 step=0.8 (8240.0 [based on 3 runs with cutoff 1000000000.0]) ============ 

          -> After 1 bonus runs: c1=2.05 c2=2.15 iter=12 rad=3 step=0.8 (6669.0 [based on 4 runs with cutoff 1000000000.0])

    Changing ["iter: 12->5"], evaluating ...
1751/100000000, 14452.282630999998/18000.0
          -> Take improving step to neighbour c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (282235.32320303115 [based on 155 runs with cutoff 1000000000.0]) with flip 61

          
============= Performing 1 bonus runs of state: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (282235.32320303115 [based on 155 runs with cutoff 1000000000.0]) ============ 

1752/100000000, 14463.248772999998/18000.0
 Same incumbent, new precision:
New Incumbent: 14463.248772999998, 280876.9877978835 [156, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
          -> After 1 bonus runs: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (280876.9877978835 [based on 156 runs with cutoff 1000000000.0])

    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (4705.0 [based on 4 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
        -> worse: (35512.5 [based on 4 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.950"], evaluating ...
        -> worse: (300451.0006068386 [based on 15 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->0.5"], evaluating ...
        -> worse: (3048.75 [based on 4 runs with cutoff 1000000000.0])
    Changing ["iter: 5->3"], evaluating ...
        -> worse: (1003745.2525 [based on 4 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.025"], evaluating ...
1758/100000000, 14474.916357999999/18000.0
        -> worse: (29199.375 [based on 8 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.0"], evaluating ...
        -> worse: (14591.25 [based on 4 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
        -> worse: (12456.111111111111 [based on 9 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.075"], evaluating ...
        -> worse: (14911.111111111111 [based on 9 runs with cutoff 1000000000.0])
    Changing ["rad: 3->2"], evaluating ...
1762/100000000, 14486.024425999998/18000.0
        -> worse: (12398.0 [based on 5 runs with cutoff 1000000000.0])
    Changing ["rad: 3->1"], evaluating ...
        -> worse: (46568.07692307692 [based on 13 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.1"], evaluating ...
        -> worse: (574638.5728571428 [based on 7 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.125"], evaluating ...
        -> worse: (341399.1675 [based on 12 runs with cutoff 1000000000.0])
    Changing ["rad: 3->5"], evaluating ...
1766/100000000, 14558.231265999999/18000.0
        -> worse: (80205.0 [based on 6 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.0"], evaluating ...
        -> worse: (4511.25 [based on 4 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
        -> worse: (4160.0 [based on 4 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
        -> worse: (5317.222222222223 [based on 9 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.125"], evaluating ...
        -> worse: (5261.25 [based on 4 runs with cutoff 1000000000.0])
    Changing ["rad: 3->4"], evaluating ...
        -> worse: (447871.66777777777 [based on 9 runs with cutoff 1000000000.0])
    Changing ["iter: 5->8"], evaluating ...
        -> worse: (5322.4 [based on 5 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
1773/100000000, 14569.719973/18000.0
        -> worse: (5723.75 [based on 4 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.15"], evaluating ...
        -> worse: (367131.2508333333 [based on 12 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.975"], evaluating ...
        -> worse: (576085.0014285714 [based on 7 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (7161.25 [based on 4 runs with cutoff 1000000000.0])
    Changing ["iter: 5->10"], evaluating ...
        -> worse: (5980.0 [based on 5 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.950"], evaluating ...
1778/100000000, 14636.853331999999/18000.0
        -> worse: (4000275.009781028 [based on 4 runs with cutoff 1000000000.0])
          
============= Performing 26 bonus runs of state: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (280876.9877978835 [based on 156 runs with cutoff 1000000000.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 14638.432207999998, 279108.6630348397 [157, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14640.034878999999, 277361.6778257584 [158, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1781/100000000, 14733.428426999999/18000.0
 Same incumbent, new precision:
New Incumbent: 14733.428426999999, 300774.81198480347 [159, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14735.180988999999, 298922.50065989845 [160, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14737.775985999999, 297132.7025191537 [161, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14739.089885999998, 295309.3833678009 [162, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1785/100000000, 14797.720254999998/18000.0
 Same incumbent, new precision:
New Incumbent: 14797.720254999998, 318038.46696677146 [163, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14799.304559999999, 316121.70802185213 [164, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14801.004989, 314231.0310035379 [165, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14804.267485999999, 312433.9765999021 [166, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14805.900123, 310573.98272804637 [167, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14807.677361, 308753.5721165699 [168, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1791/100000000, 14809.405865/18000.0
 Same incumbent, new precision:
New Incumbent: 14809.405865, 306948.46222238906 [169, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14810.853627, 305153.41244461027 [170, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14812.678905, 303400.9071086769 [171, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14814.603434, 301670.756485952 [172, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1795/100000000, 14857.413737/18000.0
 Same incumbent, new precision:
New Incumbent: 14857.413737, 301556.8214773627 [173, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14859.514437000002, 299847.58687117096 [174, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14861.268393000002, 298156.20066047856 [175, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14863.011469000003, 296486.506338544 [176, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14864.476139000002, 294823.1079976483 [177, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14866.668176000003, 293212.0793010323 [178, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
1801/100000000, 14902.651182000003/18000.0
 Same incumbent, new precision:
New Incumbent: 14902.651182000003, 292943.15707030025 [179, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14904.730535000002, 291354.00064213196 [180, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14906.425962000003, 289766.43710267264 [181, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
 Same incumbent, new precision:
New Incumbent: 14908.204782000003, 288188.6544812294 [182, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
          -> After 26 bonus runs for LM: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (288188.6544812294 [based on 182 runs with cutoff 1000000000.0])

   LM for iteration 18: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (288188.6544812294 [based on 182 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 18): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 18): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 288188.6544812294, based on 182 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (288188.6544812294 [based on 182 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (288188.6544812294 [based on 182 runs with cutoff 1000000000.0])
LM better, change incumbent
New Incumbent: 14908.204782000003, 288188.6544812294 [182, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
same state as last ILS: c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (288188.6544812294 [based on 182 runs with cutoff 1000000000.0])
1804/100000000, 14908.204782000003/18000.0
iteration 19, flip 63, evaluation count 1804
    perturb to ---> c1=2.05 c2=2.15 iter=5 rad=3 step=0.5 (3048.75 [based on 4 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.05 c2=2.15 iter=12 rad=3 step=0.5 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> c1=2.05 c2=2.15 iter=12 rad=2 step=0.5 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 19, start with c1=2.05 c2=2.15 iter=12 rad=2 step=0.5 (4188.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.075"], evaluating ...
          -> Take improving step to neighbour c1=2.075 c2=2.15 iter=12 rad=2 step=0.5 (3720.0 [based on 1 runs with cutoff 1000000000.0]) with flip 63

          
============= Performing 1 bonus runs of state: c1=2.075 c2=2.15 iter=12 rad=2 step=0.5 (3720.0 [based on 1 runs with cutoff 1000000000.0]) ============ 

1807/100000000, 14913.292159000002/18000.0
          -> After 1 bonus runs: c1=2.075 c2=2.15 iter=12 rad=2 step=0.5 (3774.0 [based on 2 runs with cutoff 1000000000.0])

    Changing ["rad: 2->1"], evaluating ...
        -> worse: (4188.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (4788.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.0"], evaluating ...
        -> worse: (4788.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 2->5"], evaluating ...
          -> Take improving step to neighbour c1=2.075 c2=2.15 iter=12 rad=5 step=0.5 (2556.0 [based on 2 runs with cutoff 1000000000.0]) with flip 64

          
============= Performing 4 bonus runs of state: c1=2.075 c2=2.15 iter=12 rad=5 step=0.5 (2556.0 [based on 2 runs with cutoff 1000000000.0]) ============ 

1814/100000000, 14924.752243000003/18000.0
1816/100000000, 14955.362468000003/18000.0
          -> After 4 bonus runs: c1=2.075 c2=2.15 iter=12 rad=5 step=0.5 (28606.0 [based on 6 runs with cutoff 1000000000.0])

    Changing ["c2: 2.15->2.0"], evaluating ...
        -> worse: (13572.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 5->3"], evaluating ...
        -> worse: (3228.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 12->3"], evaluating ...
        -> worse: (4209.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.125"], evaluating ...
        -> worse: (3420.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.05"], evaluating ...
1821/100000000, 14966.046656000002/18000.0
        -> worse: (5784.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 5->4"], evaluating ...
        -> worse: (7452.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->1.975"], evaluating ...
        -> worse: (4608.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
        -> worse: (8676.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.025"], evaluating ...
        -> worse: (7452.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.15"], evaluating ...
1826/100000000, 14977.368199000002/18000.0
        -> worse: (4428.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 12->8"], evaluating ...
        -> worse: (6820.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->1.950"], evaluating ...
        -> worse: (6084.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.125"], evaluating ...
        -> worse: (4548.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
        -> worse: (8616.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.5->1.2"], evaluating ...
1831/100000000, 14988.740447000004/18000.0
        -> worse: (5424.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (8136.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 12->5"], evaluating ...
        -> worse: (6040.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.0"], evaluating ...
        -> worse: (19872.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.1"], evaluating ...
1835/100000000, 15000.135521000004/18000.0
        -> worse: (6084.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
        -> worse: (6744.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 12->10"], evaluating ...
        -> worse: (3260.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.5->1.0"], evaluating ...
        -> worse: (4668.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (3420.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.950"], evaluating ...
1840/100000000, 15016.591578000001/18000.0
        -> worse: (43584.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.5->0.8"], evaluating ...
1844/100000000, 15095.797179000003/18000.0
        -> worse: (669520.0016666666 [based on 6 runs with cutoff 1000000000.0])
          
============= Performing 25 bonus runs of state: c1=2.075 c2=2.15 iter=12 rad=5 step=0.5 (28606.0 [based on 6 runs with cutoff 1000000000.0]) ============ 

1849/100000000, 15168.986468000003/18000.0
1851/100000000, 15281.294222000002/18000.0
1855/100000000, 15363.638879000002/18000.0
1861/100000000, 15373.83011/18000.0
1864/100000000, 15384.841966/18000.0
          -> After 25 bonus runs for LM: c1=2.075 c2=2.15 iter=12 rad=5 step=0.5 (278153.41997173376 [based on 31 runs with cutoff 1000000000.0])

   LM for iteration 19: c1=2.075 c2=2.15 iter=12 rad=5 step=0.5 (278153.41997173376 [based on 31 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 19): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 19): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 288188.6544812294, based on 182 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.075 c2=2.15 iter=12 rad=5 step=0.5 (278153.41997173376 [based on 31 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (288188.6544812294 [based on 182 runs with cutoff 1000000000.0])
Incumbent better, keeping it
rejecting worse c1=2.075 c2=2.15 iter=12 rad=5 step=0.5 (278153.41997173376 [based on 31 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (288188.6544812294 [based on 182 runs with cutoff 1000000000.0])
1869/100000000, 15392.895444/18000.0
iteration 20, flip 66, evaluation count 1869
    perturb to ---> c1=2.1 c2=2.15 iter=5 rad=3 step=0.8 (574638.5728571428 [based on 7 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.1 c2=2.15 iter=12 rad=3 step=0.8 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> c1=2.1 c2=2.15 iter=10 rad=3 step=0.8 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 20, start with c1=2.1 c2=2.15 iter=10 rad=3 step=0.8 (4860.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
1871/100000000, 15396.405090999999/18000.0
        -> worse: (5280.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.1->2.05"], evaluating ...
1872/100000000, 15425.222337/18000.0
          -> Take improving step to neighbour c1=2.05 c2=2.15 iter=10 rad=3 step=0.8 (5980.0 [based on 5 runs with cutoff 1000000000.0]) with flip 66

          
============= Performing 2 bonus runs of state: c1=2.05 c2=2.15 iter=10 rad=3 step=0.8 (5980.0 [based on 5 runs with cutoff 1000000000.0]) ============ 

1873/100000000, 15479.677685999999/18000.0
          -> After 2 bonus runs: c1=2.05 c2=2.15 iter=10 rad=3 step=0.8 (576234.2871428571 [based on 7 runs with cutoff 1000000000.0])

    Changing ["c1: 2.05->2.125"], evaluating ...
1879/100000000, 15489.815402999999/18000.0
1880/100000000, 15535.885131/18000.0
          -> Take improving step to neighbour c1=2.125 c2=2.15 iter=10 rad=3 step=0.8 (49937.142857142855 [based on 7 runs with cutoff 1000000000.0]) with flip 67

          
============= Performing 1 bonus runs of state: c1=2.125 c2=2.15 iter=10 rad=3 step=0.8 (49937.142857142855 [based on 7 runs with cutoff 1000000000.0]) ============ 

          -> After 1 bonus runs: c1=2.125 c2=2.15 iter=10 rad=3 step=0.8 (44087.5 [based on 8 runs with cutoff 1000000000.0])

    Changing ["step: 0.8->0.5"], evaluating ...
1884/100000000, 15598.614133/18000.0
        -> worse: (127945.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 10->12"], evaluating ...
        -> worse: (6156.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 3->1"], evaluating ...
        -> worse: (86646.66666666667 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (7580.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 10->8"], evaluating ...
1889/100000000, 15609.223918999998/18000.0
        -> worse: (6820.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.15"], evaluating ...
1891/100000000, 15623.676661999998/18000.0
        -> worse: (27090.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.0"], evaluating ...
        -> worse: (5200.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.125"], evaluating ...
1895/100000000, 15720.882042999998/18000.0
        -> worse: (2001775.0045506288 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (9190.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.075"], evaluating ...
        -> worse: (6730.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
        -> worse: (4710.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.0"], evaluating ...
1900/100000000, 15731.119919999997/18000.0
        -> worse: (6730.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->1.950"], evaluating ...
        -> worse: (26416.666666666668 [based on 3 runs with cutoff 1000000000.0])
    Changing ["rad: 3->4"], evaluating ...
1906/100000000, 15742.013296999996/18000.0
1907/100000000, 15764.539542999995/18000.0
          -> Take improving step to neighbour c1=2.125 c2=2.15 iter=10 rad=4 step=0.8 (19778.75 [based on 8 runs with cutoff 1000000000.0]) with flip 68

          
============= Performing 14 bonus runs of state: c1=2.125 c2=2.15 iter=10 rad=4 step=0.8 (19778.75 [based on 8 runs with cutoff 1000000000.0]) ============ 

1912/100000000, 15817.362145999994/18000.0
1916/100000000, 15862.564416999994/18000.0
1918/100000000, 15933.366505999995/18000.0
          -> After 14 bonus runs: c1=2.125 c2=2.15 iter=10 rad=4 step=0.8 (210564.09136363634 [based on 22 runs with cutoff 1000000000.0])

    Changing ["c1: 2.125->2.025"], evaluating ...
1925/100000000, 15945.815606999997/18000.0
        -> worse: (4495.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.075"], evaluating ...
        -> worse: (3550.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (7210.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 4->2"], evaluating ...
        -> worse: (6360.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
        -> worse: (4080.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 10->5"], evaluating ...
1931/100000000, 15956.590917999996/18000.0
1935/100000000, 16029.512378999998/18000.0
        -> worse: (669441.6683333333 [based on 6 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->0.5"], evaluating ...
        -> worse: (5630.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.125"], evaluating ...
        -> worse: (6970.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.0"], evaluating ...
        -> worse: (4380.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.1"], evaluating ...
        -> worse: (3135.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->1.950"], evaluating ...
1941/100000000, 16042.214345/18000.0
        -> worse: (11330.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->1.975"], evaluating ...
        -> worse: (6420.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
        -> worse: (3365.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 10->3"], evaluating ...
        -> worse: (4902.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 10->12"], evaluating ...
        -> worse: (3216.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 10->8"], evaluating ...
        -> worse: (5728.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 4->5"], evaluating ...
1947/100000000, 16053.535801/18000.0
        -> worse: (3535.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.950"], evaluating ...
        -> worse: (8770.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.05"], evaluating ...
        -> worse: (4650.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
        -> worse: (6060.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.0"], evaluating ...
        -> worse: (4080.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
        -> worse: (6240.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
1953/100000000, 16065.538255000001/18000.0
        -> worse: (6060.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
        -> worse: (5690.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.15"], evaluating ...
        -> worse: (6180.0 [based on 1 runs with cutoff 1000000000.0])
          
============= Performing 25 bonus runs of state: c1=2.125 c2=2.15 iter=10 rad=4 step=0.8 (210564.09136363634 [based on 22 runs with cutoff 1000000000.0]) ============ 

1956/100000000, 16090.886639/18000.0
1958/100000000, 16172.937571/18000.0
1963/100000000, 16244.512554/18000.0
1969/100000000, 16254.907345000001/18000.0
1970/100000000, 16286.373975000002/18000.0
1973/100000000, 16299.309564000001/18000.0
1979/100000000, 16310.178638000001/18000.0
          -> After 25 bonus runs for LM: c1=2.125 c2=2.15 iter=10 rad=4 step=0.8 (198200.63872340423 [based on 47 runs with cutoff 1000000000.0])

   LM for iteration 20: c1=2.125 c2=2.15 iter=10 rad=4 step=0.8 (198200.63872340423 [based on 47 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 20): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 20): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 288188.6544812294, based on 182 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.125 c2=2.15 iter=10 rad=4 step=0.8 (198200.63872340423 [based on 47 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (288188.6544812294 [based on 182 runs with cutoff 1000000000.0])
Incumbent better, keeping it
rejecting worse c1=2.125 c2=2.15 iter=10 rad=4 step=0.8 (198200.63872340423 [based on 47 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (288188.6544812294 [based on 182 runs with cutoff 1000000000.0])
1980/100000000, 16311.69058/18000.0
iteration 21, flip 70, evaluation count 1980
    perturb to ---> c1=2.125 c2=2.15 iter=5 rad=3 step=0.8 (341399.1675 [based on 12 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.125 c2=2.15 iter=12 rad=3 step=0.8 (6156.0 [based on 2 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.125 c2=1.950 iter=12 rad=3 step=0.8 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 21, start with c1=2.125 c2=1.950 iter=12 rad=3 step=0.8 (5904.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 1.950->2.05"], evaluating ...
          -> Take improving step to neighbour c1=2.125 c2=2.05 iter=12 rad=3 step=0.8 (4908.0 [based on 1 runs with cutoff 1000000000.0]) with flip 70

          
============= Performing 1 bonus runs of state: c1=2.125 c2=2.05 iter=12 rad=3 step=0.8 (4908.0 [based on 1 runs with cutoff 1000000000.0]) ============ 

          -> After 1 bonus runs: c1=2.125 c2=2.05 iter=12 rad=3 step=0.8 (3972.0 [based on 2 runs with cutoff 1000000000.0])

    Changing ["rad: 3->1"], evaluating ...
          -> Take improving step to neighbour c1=2.125 c2=2.05 iter=12 rad=1 step=0.8 (2430.0 [based on 2 runs with cutoff 1000000000.0]) with flip 71

          
============= Performing 1 bonus runs of state: c1=2.125 c2=2.05 iter=12 rad=1 step=0.8 (2430.0 [based on 2 runs with cutoff 1000000000.0]) ============ 

1986/100000000, 16321.403123/18000.0
          -> After 1 bonus runs: c1=2.125 c2=2.05 iter=12 rad=1 step=0.8 (3924.0 [based on 3 runs with cutoff 1000000000.0])

    Changing ["step: 0.8->1.0"], evaluating ...
          -> Take improving step to neighbour c1=2.125 c2=2.05 iter=12 rad=1 step=1.0 (3712.0 [based on 3 runs with cutoff 1000000000.0]) with flip 72

          
============= Performing 1 bonus runs of state: c1=2.125 c2=2.05 iter=12 rad=1 step=1.0 (3712.0 [based on 3 runs with cutoff 1000000000.0]) ============ 

          -> After 1 bonus runs: c1=2.125 c2=2.05 iter=12 rad=1 step=1.0 (3603.0 [based on 4 runs with cutoff 1000000000.0])

    Changing ["c2: 2.05->1.975"], evaluating ...
        -> worse: (15528.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 1->5"], evaluating ...
1992/100000000, 16331.639915/18000.0
        -> worse: (4788.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.15"], evaluating ...
1994/100000000, 16353.269259/18000.0
        -> worse: (54804.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 12->3"], evaluating ...
        -> worse: (5670.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.05->2.025"], evaluating ...
        -> worse: (4488.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.0"], evaluating ...
        -> worse: (10788.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.05->2.15"], evaluating ...
        -> worse: (4428.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->1.2"], evaluating ...
2001/100000000, 16364.563798000001/18000.0
          -> Take improving step to neighbour c1=2.125 c2=2.05 iter=12 rad=1 step=1.2 (3381.0 [based on 4 runs with cutoff 1000000000.0]) with flip 73

          
============= Performing 8 bonus runs of state: c1=2.125 c2=2.05 iter=12 rad=1 step=1.2 (3381.0 [based on 4 runs with cutoff 1000000000.0]) ============ 

2006/100000000, 16375.319259000002/18000.0
          -> After 8 bonus runs: c1=2.125 c2=2.05 iter=12 rad=1 step=1.2 (10301.0 [based on 12 runs with cutoff 1000000000.0])

    Changing ["c2: 2.05->2.1"], evaluating ...
2011/100000000, 16386.248761000003/18000.0
        -> worse: (8136.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.1"], evaluating ...
        -> worse: (5724.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.05->2.025"], evaluating ...
        -> worse: (6144.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.05"], evaluating ...
        -> worse: (7872.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.15"], evaluating ...
        -> worse: (4788.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 12->10"], evaluating ...
        -> worse: (4380.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.05->2.125"], evaluating ...
2018/100000000, 16463.811773000005/18000.0
        -> worse: (192774.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->1.975"], evaluating ...
        -> worse: (24540.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 1->5"], evaluating ...
2021/100000000, 16579.140911000006/18000.0
        -> worse: (2002230.0045554738 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 1.2->0.5"], evaluating ...
        -> worse: (4204.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["iter: 12->5"], evaluating ...
        -> worse: (4415.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->1.950"], evaluating ...
2026/100000000, 16618.413156000002/18000.0
        -> worse: (4000320.01 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 1->4"], evaluating ...
        -> worse: (3444.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.05->2.075"], evaluating ...
        -> worse: (3960.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.05->1.950"], evaluating ...
        -> worse: (6144.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.05->1.975"], evaluating ...
        -> worse: (8556.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.05->2.15"], evaluating ...
2032/100000000, 16628.491794000005/18000.0
        -> worse: (4428.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.025"], evaluating ...
        -> worse: (8196.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.0"], evaluating ...
        -> worse: (14220.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 1->3"], evaluating ...
        -> worse: (3900.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 12->3"], evaluating ...
        -> worse: (15147.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.125->2.075"], evaluating ...
2037/100000000, 16638.88804300001/18000.0
        -> worse: (10104.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 12->8"], evaluating ...
        -> worse: (4808.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 1->2"], evaluating ...
        -> worse: (4368.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.05->2.0"], evaluating ...
        -> worse: (5844.0 [based on 1 runs with cutoff 1000000000.0])
          
============= Performing 25 bonus runs of state: c1=2.125 c2=2.05 iter=12 rad=1 step=1.2 (10301.0 [based on 12 runs with cutoff 1000000000.0]) ============ 

2043/100000000, 16650.43635600001/18000.0
2045/100000000, 16679.140271000007/18000.0
2051/100000000, 16722.743873000007/18000.0
2056/100000000, 16733.12159300001/18000.0
2058/100000000, 16756.45446300001/18000.0
2064/100000000, 16767.72317100001/18000.0
          -> After 25 bonus runs for LM: c1=2.125 c2=2.05 iter=12 rad=1 step=1.2 (130946.91918918918 [based on 37 runs with cutoff 1000000000.0])

   LM for iteration 21: c1=2.125 c2=2.05 iter=12 rad=1 step=1.2 (130946.91918918918 [based on 37 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 21): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 21): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 288188.6544812294, based on 182 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.125 c2=2.05 iter=12 rad=1 step=1.2 (130946.91918918918 [based on 37 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (288188.6544812294 [based on 182 runs with cutoff 1000000000.0])
Incumbent better, keeping it
rejecting worse c1=2.125 c2=2.05 iter=12 rad=1 step=1.2 (130946.91918918918 [based on 37 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (288188.6544812294 [based on 182 runs with cutoff 1000000000.0])
2065/100000000, 16769.60724400001/18000.0
iteration 22, flip 75, evaluation count 2065
    perturb to ---> c1=2.05 c2=2.15 iter=3 rad=3 step=0.8 (1003745.2525 [based on 4 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.05 c2=2.15 iter=12 rad=3 step=0.8 (6674.4 [based on 5 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.05 c2=2.15 iter=12 rad=3 step=1.0 (27689.14285714286 [based on 7 runs with cutoff 1000000000.0])
   BLS in iteration 22, start with c1=2.05 c2=2.15 iter=12 rad=3 step=1.0 (24679.5 [based on 8 runs with cutoff 1000000000.0])
    Changing ["iter: 12->3"], evaluating ...
        -> worse: (9654.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.125"], evaluating ...
2069/100000000, 16781.04849300001/18000.0
        -> worse: (10668.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.15"], evaluating ...
2071/100000000, 16794.37782500001/18000.0
        -> worse: (25434.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
        -> worse: (32760.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->4"], evaluating ...
        -> worse: (6744.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->5"], evaluating ...
2075/100000000, 16825.66274100001/18000.0
        -> worse: (41610.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 3->2"], evaluating ...
        -> worse: (1336584.0030406138 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
        -> worse: (7872.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.950"], evaluating ...
        -> worse: (5904.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (8094.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["iter: 12->8"], evaluating ...
          -> Take improving step to neighbour c1=2.05 c2=2.15 iter=8 rad=3 step=1.0 (120825.905 [based on 42 runs with cutoff 1000000000.0]) with flip 75

          
============= Performing 11 bonus runs of state: c1=2.05 c2=2.15 iter=8 rad=3 step=1.0 (120825.905 [based on 42 runs with cutoff 1000000000.0]) ============ 

2081/100000000, 16837.13899100001/18000.0
2087/100000000, 16896.05317400001/18000.0
          -> After 11 bonus runs: c1=2.05 c2=2.15 iter=8 rad=3 step=1.0 (103254.33981132075 [based on 53 runs with cutoff 1000000000.0])

    Changing ["step: 1.0->1.2"], evaluating ...
        -> worse: (7442.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
2093/100000000, 16907.380765000013/18000.0
        -> worse: (3971.0 [based on 4 runs with cutoff 1000000000.0])
    Changing ["iter: 8->5"], evaluating ...
        -> worse: (11879.0 [based on 10 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
        -> worse: (14616.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->0.5"], evaluating ...
2096/100000000, 17008.561712000013/18000.0
        -> worse: (2003778.0045564543 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.025"], evaluating ...
        -> worse: (9036.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (7510.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["rad: 3->5"], evaluating ...
        -> worse: (6050.666666666667 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.15"], evaluating ...
        -> worse: (574799.4299999999 [based on 7 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.950"], evaluating ...
2101/100000000, 17108.98130700001/18000.0
        -> worse: (4000240.0095666004 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->0.8"], evaluating ...
2102/100000000, 17148.85320500001/18000.0
        -> worse: (52264.0 [based on 6 runs with cutoff 1000000000.0])
    Changing ["rad: 3->2"], evaluating ...
        -> worse: (4126.666666666667 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.975"], evaluating ...
        -> worse: (4388.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["iter: 8->10"], evaluating ...
        -> worse: (5675.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
2108/100000000, 17160.888724000008/18000.0
        -> worse: (8254.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.1"], evaluating ...
2109/100000000, 17190.113338000006/18000.0
        -> worse: (65168.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->1.950"], evaluating ...
        -> worse: (10382.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (7600.8 [based on 5 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.075"], evaluating ...
        -> worse: (13041.714285714286 [based on 7 runs with cutoff 1000000000.0])
    Changing ["rad: 3->1"], evaluating ...
        -> worse: (3714.0 [based on 4 runs with cutoff 1000000000.0])
    Changing ["rad: 3->4"], evaluating ...
2114/100000000, 17200.852032000006/18000.0
        -> worse: (4380.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.0"], evaluating ...
        -> worse: (15330.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.125"], evaluating ...
        -> worse: (52156.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.125"], evaluating ...
        -> worse: (4116.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.05->2.0"], evaluating ...
2118/100000000, 17211.117405000008/18000.0
        -> worse: (8332.0 [based on 2 runs with cutoff 1000000000.0])
          
============= Performing 25 bonus runs of state: c1=2.05 c2=2.15 iter=8 rad=3 step=1.0 (103254.33981132075 [based on 53 runs with cutoff 1000000000.0]) ============ 

2121/100000000, 17224.954315000006/18000.0
2126/100000000, 17248.452401000006/18000.0
2129/100000000, 17311.659324000007/18000.0
2133/100000000, 17326.554972000005/18000.0
2136/100000000, 17336.580179000004/18000.0
2138/100000000, 17388.446394000006/18000.0
          -> After 25 bonus runs for LM: c1=2.05 c2=2.15 iter=8 rad=3 step=1.0 (128648.76948717948 [based on 78 runs with cutoff 1000000000.0])

   LM for iteration 22: c1=2.05 c2=2.15 iter=8 rad=3 step=1.0 (128648.76948717948 [based on 78 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 22): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 22): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 288188.6544812294, based on 182 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.05 c2=2.15 iter=8 rad=3 step=1.0 (128648.76948717948 [based on 78 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (288188.6544812294 [based on 182 runs with cutoff 1000000000.0])
2144/100000000, 17399.29127100001/18000.0
2146/100000000, 17491.558055000012/18000.0
Incumbent better, keeping it
rejecting worse c1=2.05 c2=2.15 iter=8 rad=3 step=1.0 (173349.3830754141 [based on 81 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (288188.6544812294 [based on 182 runs with cutoff 1000000000.0])
2146/100000000, 17491.558055000012/18000.0
iteration 23, flip 77, evaluation count 2146
    perturb to ---> c1=2.05 c2=2.15 iter=5 rad=3 step=1.0 (11879.0 [based on 10 runs with cutoff 1000000000.0])
    perturb to ---> c1=2.15 c2=2.15 iter=5 rad=3 step=1.0 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> c1=2.15 c2=2.15 iter=3 rad=3 step=1.0 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 23, start with c1=2.15 c2=2.15 iter=3 rad=3 step=1.0 (3909.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.15->2.075"], evaluating ...
          -> Take improving step to neighbour c1=2.075 c2=2.15 iter=3 rad=3 step=1.0 (3084.0 [based on 2 runs with cutoff 1000000000.0]) with flip 77

          
============= Performing 2 bonus runs of state: c1=2.075 c2=2.15 iter=3 rad=3 step=1.0 (3084.0 [based on 2 runs with cutoff 1000000000.0]) ============ 

          -> After 2 bonus runs: c1=2.075 c2=2.15 iter=3 rad=3 step=1.0 (2679.75 [based on 4 runs with cutoff 1000000000.0])

    Changing ["c1: 2.075->2.025"], evaluating ...
2152/100000000, 17503.84791400001/18000.0
        -> worse: (9786.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["step: 1.0->0.8"], evaluating ...
          -> Take improving step to neighbour c1=2.075 c2=2.15 iter=3 rad=3 step=0.8 (358997.47913043475 [based on 23 runs with cutoff 1000000000.0]) with flip 78

          
============= Performing 2 bonus runs of state: c1=2.075 c2=2.15 iter=3 rad=3 step=0.8 (358997.47913043475 [based on 23 runs with cutoff 1000000000.0]) ============ 

          -> After 2 bonus runs: c1=2.075 c2=2.15 iter=3 rad=3 step=0.8 (330527.6408 [based on 25 runs with cutoff 1000000000.0])

    Changing ["c1: 2.075->1.975"], evaluating ...
        -> worse: (2983.5 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->0.5"], evaluating ...
2158/100000000, 17514.57451300001/18000.0
        -> worse: (33522.857142857145 [based on 7 runs with cutoff 1000000000.0])
    Changing ["iter: 3->8"], evaluating ...
        -> worse: (3290.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
        -> worse: (3399.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 3->5"], evaluating ...
        -> worse: (15011.0 [based on 10 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
        -> worse: (5466.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.025"], evaluating ...
2163/100000000, 17525.453493000008/18000.0
        -> worse: (10584.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (7905.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->5"], evaluating ...
        -> worse: (3275.25 [based on 4 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
        -> worse: (24108.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["iter: 3->12"], evaluating ...
        -> worse: (2952.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.125"], evaluating ...
2168/100000000, 17536.96110700001/18000.0
        -> worse: (5925.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.15"], evaluating ...
2169/100000000, 17557.65346900001/18000.0
        -> worse: (45192.0 [based on 2 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.125"], evaluating ...
        -> worse: (3459.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->1.950"], evaluating ...
        -> worse: (11271.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->4"], evaluating ...
        -> worse: (4380.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.05"], evaluating ...
        -> worse: (804008.402 [based on 5 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.1"], evaluating ...
        -> worse: (3849.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->2"], evaluating ...
2175/100000000, 17568.32543400001/18000.0
        -> worse: (30375.0 [based on 4 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.0"], evaluating ...
        -> worse: (10344.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (10464.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
        -> worse: (3459.0 [based on 1 runs with cutoff 1000000000.0])
    Changing ["rad: 3->1"], evaluating ...
          -> Take improving step to neighbour c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (282715.28066666663 [based on 75 runs with cutoff 1000000000.0]) with flip 79

          
============= Performing 23 bonus runs of state: c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (282715.28066666663 [based on 75 runs with cutoff 1000000000.0]) ============ 

2181/100000000, 17579.742288000012/18000.0
2188/100000000, 17591.817361000012/18000.0
2190/100000000, 17607.466734000012/18000.0
2196/100000000, 17618.059501000018/18000.0
2199/100000000, 17661.37806600002/18000.0
          -> After 23 bonus runs: c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (260238.85775510198 [based on 98 runs with cutoff 1000000000.0])

    Changing ["c2: 2.15->2.075"], evaluating ...
        -> worse: (15420.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.125"], evaluating ...
        -> worse: (5018.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.975"], evaluating ...
2205/100000000, 17672.588222000024/18000.0
        -> worse: (15044.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.0"], evaluating ...
        -> worse: (10134.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["iter: 3->10"], evaluating ...
        -> worse: (7080.0 [based on 5 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->0.5"], evaluating ...
        -> worse: (5452.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.0"], evaluating ...
        -> worse: (504706.50125 [based on 8 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->1.950"], evaluating ...
2210/100000000, 17691.569069000027/18000.0
        -> worse: (53690.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.05"], evaluating ...
        -> worse: (6273.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["iter: 3->12"], evaluating ...
        -> worse: (6207.0 [based on 4 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->1.950"], evaluating ...
        -> worse: (10103.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.025"], evaluating ...
        -> worse: (110416.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.025"], evaluating ...
        -> worse: (7127.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["step: 0.8->1.2"], evaluating ...
2216/100000000, 17702.093365000022/18000.0
        -> worse: (4390.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.125"], evaluating ...
        -> worse: (15567.75 [based on 4 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.05"], evaluating ...
2218/100000000, 17723.776843000025/18000.0
        -> worse: (389880.0009090909 [based on 11 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.0"], evaluating ...
        -> worse: (68572.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["iter: 3->8"], evaluating ...
        -> worse: (3794.0 [based on 4 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->1.975"], evaluating ...
        -> worse: (91668.0 [based on 3 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.15"], evaluating ...
        -> worse: (3965.25 [based on 4 runs with cutoff 1000000000.0])
    Changing ["c1: 2.075->2.1"], evaluating ...
        -> worse: (1338111.0030350958 [based on 3 runs with cutoff 1000000000.0])
    Changing ["iter: 3->5"], evaluating ...
2224/100000000, 17767.569858000024/18000.0
        -> worse: (671330.835 [based on 6 runs with cutoff 1000000000.0])
    Changing ["c2: 2.15->2.1"], evaluating ...
        -> worse: (3624.0 [based on 4 runs with cutoff 1000000000.0])
          
============= Performing 23 bonus runs of state: c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (260238.85775510198 [based on 98 runs with cutoff 1000000000.0]) ============ 

2228/100000000, 17811.761043000024/18000.0
2235/100000000, 17822.668705000022/18000.0
2237/100000000, 17893.501405000025/18000.0
2238/100000000, 17923.497088000026/18000.0
2241/100000000, 17945.325897000024/18000.0
2245/100000000, 17971.582565000022/18000.0
          -> After 23 bonus runs for LM: c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (253410.84355371894 [based on 121 runs with cutoff 1000000000.0])

   LM for iteration 23: c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (253410.84355371894 [based on 121 runs with cutoff 1000000000.0])

========== DETAILED RESULTS (iteration 23): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 23): c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Training quality of this incumbent parameter configuration: 288188.6544812294, based on 182 runs with cutoff 1000000000.0
==================================================================

Comparing LM against incumbent:
c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (253410.84355371894 [based on 121 runs with cutoff 1000000000.0])
c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (288188.6544812294 [based on 182 runs with cutoff 1000000000.0])
2251/100000000, 17982.786635000015/18000.0
2252/100000000, 18020.185446000014/18000.0
Incumbent better, keeping it
rejecting worse c1=2.075 c2=2.15 iter=3 rad=1 step=0.8 (277389.2406399999 [based on 125 runs with cutoff 1000000000.0]), going back to c1=2.05 c2=2.15 iter=5 rad=3 step=0.8 (288188.6544812294 [based on 182 runs with cutoff 1000000000.0])
ParamILS has reached the specified CPU time limit of 18000.0 seconds => stopping the search now.
Final solution for depth 1 with limit N=2000, and cutoff time=1000000000.0.
New Incumbent: 18020.185446000014, 288188.6544812294 [182, 1000000000.0]. With state c1=2.05, c2=2.15, iter=5, rad=3, step=0.8

==================================================================
ParamILS is finished.
==================================================================

Final best parameter configuration found: c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Active parameters: c1=2.05, c2=2.15, iter=5, rad=3, step=0.8

==================================================================
Training quality of this final best found parameter configuration: 288188.6544812294, based on 182 runs with cutoff 1000000000.0
==================================================================


==================================================================
Computing validation result on independent data -- 100 runs with cutoff time 1000000000.0...
==================================================================
SchwefelS3: 4605
GriewankG2: 1795
RastriginR2: 6005
WeierstrassW2: 18365
SphereS2: 3145
SphereS3: 400025.001
Ackley: 5095
RosenbrockR2: 4110
RosenbrockR3: 4495
WeierstrassW3: 173620
RastriginR3: 20715
RastriginS2: 400030.0004269805
RastriginS3: 400015.001
SchwefelS2: 4345
GriewankG3: 1630
RosenbrockR2: 6835
Ackley: 5185
RastriginS2: 400045.0004298992
SphereS2: 3605
SphereS3: 3930
WeierstrassW2: 3040
RastriginR2: 4885
RastriginS3: 400015.001
GriewankG2: 1770
SchwefelS3: 3760
GriewankG3: 1450
RosenbrockR3: 5575
WeierstrassW3: 3065
RastriginR3: 4880
SchwefelS2: 4410
SphereS3: 3925
Ackley: 4975
GriewankG3: 1750
RastriginS3: 400050.001
RastriginR2: 8055
SchwefelS3: 4580
SphereS2: 3675
WeierstrassW2: 2860
GriewankG2: 1790
WeierstrassW3: 5220
RastriginR3: 5035
RosenbrockR3: 8055
SchwefelS2: 3970
RastriginS2: 400025.0004298992
RosenbrockR2: 3090
RosenbrockR3: 8680
SphereS2: 3410
WeierstrassW2: 3850
RastriginS2: 3570
GriewankG3: 1565
SchwefelS2: 4150
Ackley: 5425
SchwefelS3: 4125
RastriginS3: 400020.0009997114
GriewankG2: 1335
RastriginR2: 400050.001
WeierstrassW3: 3370
RastriginR3: 6600
RosenbrockR2: 3395
SphereS3: 400000.001
SphereS2: 3760
WeierstrassW3: 4595
RosenbrockR2: 4875
SphereS3: 4535
GriewankG3: 1405
SchwefelS3: 4185
RosenbrockR3: 4675
RastriginR2: 9610
Ackley: 4855
RastriginR3: 8645
WeierstrassW2: 2075
RastriginS3: 10030
GriewankG2: 1630
RastriginS2: 205840
SchwefelS2: 4875
RastriginS2: 366820
SphereS2: 3405
RastriginS3: 122730
RosenbrockR3: 2940
SphereS3: 3640
SchwefelS3: 4525
GriewankG2: 1940
RastriginR2: 13435
Ackley: 4675
GriewankG3: 1935
WeierstrassW3: 2355
WeierstrassW2: 1775
RastriginR3: 9065
SchwefelS2: 3485
RosenbrockR2: 4070
RastriginS3: 400045.0009998992
RosenbrockR3: 3875
RastriginR2: 17070
Ackley: 5275
SphereS2: 3605
SchwefelS2: 4565
SchwefelS3: 3860
WeierstrassW2: 400030.0008176506
RastriginS2: 400015.0004298992
RastriginR3: 10430
Combined result: 532814.8510533939

================================================================
Final best parameter configuration: c1=2.05, c2=2.15, iter=5, rad=3, step=0.8
==================================================================
Active parameters: c1=2.05, c2=2.15, iter=5, rad=3, step=0.8

================================================================
Training quality of this final best found parameter configuration: 288188.6544812294, based on 182 runs with cutoff 1000000000.0
Test quality of this final best found parameter configuration: 532814.8510533939, based on 100 independent runs with cutoff 1000000000.0
==================================================================
