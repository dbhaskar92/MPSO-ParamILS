Call: /usr/bin/ruby ../scripts/param_ils_2_3_run.rb "-numRun" "0" "-scenariofile" "MPSO_scenario_run0.txt" "-validN" "100" "-pruning" "0"


seed: 1234
algo: python mpso_wrapper_run0.py
tunerTimeout (CPU time): 21600.0
maxWallTime: 8640000.0
maxEvals: 100000000
run_obj: runtime
overall_obj: mean10
instance_file: mpso-instances.txt
test_instance_file: mpso-test-instances.txt
N: 2000
cutoff_time: 60.0
cutoff_length: 2147483647
R: 10
pertubation_strength_basic: 
pertubation_strength_scaling: false
p_restart: 0.01
Run 1
Level 
========================================================
Starting ILS for level 1, i.e. a limit of N=2000, and cutoff time=60.0.
Current CPU time = 0, this run goes until 21600.0 
========================================================
New Incumbent: 0, 100000000 [0, 0]. With state N=30, eps=0.1, freq=10, iter=5, rad=1, step=1.0
1/100000000, 60.00000000000001/21600.0
 Same incumbent, new precision:
New Incumbent: 60.00000000000001, 600.0092157007001 [1, 60.0]. With state N=30, eps=0.1, freq=10, iter=5, rad=1, step=1.0
New inc: 2.942219
New Incumbent: 62.94221900000001, 2.942219 [1, 60.0]. With state N=45, eps=1, freq=20, iter=3, rad=2, step=1.0
          -> Take improving step to random N=45 eps=1 freq=20 iter=3 rad=2 step=1.0 (2.942219 [based on 1 runs with cutoff 60.0])

        -> Worse random: N=15 eps=0.5 freq=100 iter=8 rad=1 step=0.5 (3.877397 [based on 1 runs with cutoff 60.0])
4/100000000, 126.81961600000002/21600.0
        -> Worse random: N=60 eps=0.1 freq=100 iter=8 rad=1 step=8.0 (600.0092276843001 [based on 1 runs with cutoff 60.0])
New inc: 2.24774
New Incumbent: 129.06735600000002, 2.24774 [1, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=8.0
          -> Take improving step to random N=60 eps=0.5 freq=100 iter=8 rad=4 step=8.0 (2.24774 [based on 1 runs with cutoff 60.0])

6/100000000, 189.06735600000002/21600.0
        -> Worse random: N=10 eps=0.25 freq=1 iter=10 rad=3 step=8.0 (600.0092225213001 [based on 1 runs with cutoff 60.0])
        -> Worse random: N=60 eps=0.25 freq=10 iter=10 rad=3 step=1.0 (6.571374 [based on 1 runs with cutoff 60.0])
8/100000000, 209.594052/21600.0
        -> Worse random: N=120 eps=0.75 freq=200 iter=12 rad=3 step=8.0 (13.955322 [based on 1 runs with cutoff 60.0])
9/100000000, 269.59405200000003/21600.0
        -> Worse random: N=120 eps=1 freq=2 iter=12 rad=1 step=10.0 (600.0092740650001 [based on 1 runs with cutoff 60.0])
        -> Worse random: N=90 eps=0.25 freq=50 iter=5 rad=5 step=1.0 (3.847313 [based on 1 runs with cutoff 60.0])
        -> Worse random: N=60 eps=0.1 freq=500 iter=3 rad=5 step=0.5 (2.391759 [based on 1 runs with cutoff 60.0])
   BLS in iteration 1, start with N=60 eps=0.5 freq=100 iter=8 rad=4 step=8.0 (2.24774 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->1"], evaluating ...
12/100000000, 335.833124/21600.0
        -> worse: (600.0092413779 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->5"], evaluating ...
        -> worse: (3.222431 [based on 1 runs with cutoff 60.0])
    Changing ["step: 8.0->4.0"], evaluating ...
New inc: 2.216082
New Incumbent: 341.27163699999994, 2.216082 [1, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=4.0
          -> Take improving step to neighbour N=60 eps=0.5 freq=100 iter=8 rad=4 step=4.0 (2.216082 [based on 1 runs with cutoff 60.0]) with flip 1

          
============= Performing 3 bonus runs of state: N=60 eps=0.5 freq=100 iter=8 rad=4 step=4.0 (2.216082 [based on 1 runs with cutoff 60.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 343.37361599999997, 2.1590305 [2, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=4.0
16/100000000, 348.660625/21600.0
 Same incumbent, new precision:
New Incumbent: 348.660625, 3.2016900000000006 [3, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 350.56543, 2.8774687500000002 [4, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=4.0
          -> After 3 bonus runs: N=60 eps=0.5 freq=100 iter=8 rad=4 step=4.0 (2.8774687500000002 [based on 4 runs with cutoff 60.0])

    Changing ["iter: 8->5"], evaluating ...
20/100000000, 360.10784/21600.0
New inc: 2.8660602500000003
New Incumbent: 362.029671, 2.8660602500000003 [4, 60.0]. With state N=60, eps=0.5, freq=100, iter=5, rad=4, step=4.0
          -> Take improving step to neighbour N=60 eps=0.5 freq=100 iter=5 rad=4 step=4.0 (2.8660602500000003 [based on 4 runs with cutoff 60.0]) with flip 2

          
============= Performing 1 bonus runs of state: N=60 eps=0.5 freq=100 iter=5 rad=4 step=4.0 (2.8660602500000003 [based on 4 runs with cutoff 60.0]) ============ 

22/100000000, 375.419201/21600.0
 Same incumbent, new precision:
New Incumbent: 375.419201, 4.9707542 [5, 60.0]. With state N=60, eps=0.5, freq=100, iter=5, rad=4, step=4.0
          -> After 1 bonus runs: N=60 eps=0.5 freq=100 iter=5 rad=4 step=4.0 (4.9707542 [based on 5 runs with cutoff 60.0])

    Changing ["freq: 100->50"], evaluating ...
        -> worse: (2.458727 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->3"], evaluating ...
        -> worse: (2.258812 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->10"], evaluating ...
        -> worse: (2.224166 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->3"], evaluating ...
        -> worse: (2.334636 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->20"], evaluating ...
27/100000000, 386.848619/21600.0
        -> worse: (2.416281 [based on 2 runs with cutoff 60.0])
    Changing ["N: 60->30"], evaluating ...
29/100000000, 449.528104/21600.0
        -> worse: (600.0092578230001 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.1"], evaluating ...
33/100000000, 460.93900499999995/21600.0
New inc: 3.875985200000001
New Incumbent: 468.90802999999994, 3.875985200000001 [5, 60.0]. With state N=60, eps=0.1, freq=100, iter=5, rad=4, step=4.0
          -> Take improving step to neighbour N=60 eps=0.1 freq=100 iter=5 rad=4 step=4.0 (3.875985200000001 [based on 5 runs with cutoff 60.0]) with flip 3

          
============= Performing 7 bonus runs of state: N=60 eps=0.1 freq=100 iter=5 rad=4 step=4.0 (3.875985200000001 [based on 5 runs with cutoff 60.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 470.7414569999999, 3.5355588333333343 [6, 60.0]. With state N=60, eps=0.1, freq=100, iter=5, rad=4, step=4.0
36/100000000, 530.741457/21600.0
 Same incumbent, new precision:
New Incumbent: 530.741457, 88.74620757142858 [7, 60.0]. With state N=60, eps=0.1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 533.745403, 78.02842487500001 [8, 60.0]. With state N=60, eps=0.1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 538.781186, 69.91813133333335 [9, 60.0]. With state N=60, eps=0.1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 540.699158, 63.11811540000001 [10, 60.0]. With state N=60, eps=0.1, freq=100, iter=5, rad=4, step=4.0
40/100000000, 544.460411/21600.0
 Same incumbent, new precision:
New Incumbent: 544.460411, 57.72203700000001 [11, 60.0]. With state N=60, eps=0.1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 546.510485, 53.08270675000001 [12, 60.0]. With state N=60, eps=0.1, freq=100, iter=5, rad=4, step=4.0
          -> After 7 bonus runs: N=60 eps=0.1 freq=100 iter=5 rad=4 step=4.0 (53.08270675000001 [based on 12 runs with cutoff 60.0])

    Changing ["freq: 100->10"], evaluating ...
        -> worse: (2.842256 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.1->0.25"], evaluating ...
        -> worse: (2.280609 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.1->0.75"], evaluating ...
        -> worse: (2.24323 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->90"], evaluating ...
45/100000000, 557.3937990000001/21600.0
        -> worse: (3.517219 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->45"], evaluating ...
        -> worse: (2.250758 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.1->1"], evaluating ...
49/100000000, 567.675597/21600.0
53/100000000, 636.406844/21600.0
56/100000000, 647.025401/21600.0
New inc: 52.929041583333344
New Incumbent: 654.782956, 52.929041583333344 [12, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
          -> Take improving step to neighbour N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (52.929041583333344 [based on 12 runs with cutoff 60.0]) with flip 4

          
============= Performing 6 bonus runs of state: N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (52.929041583333344 [based on 12 runs with cutoff 60.0]) ============ 

59/100000000, 698.232903/21600.0
 Same incumbent, new precision:
New Incumbent: 698.232903, 52.19988046153847 [13, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 700.150585, 48.608294857142866 [14, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
61/100000000, 760.150585/21600.0
 Same incumbent, new precision:
New Incumbent: 760.150585, 85.36841520000002 [15, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 762.914413, 80.20562850000002 [16, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 764.540748, 75.58331711764707 [17, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 766.395357, 71.48727777777779 [18, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
          -> After 6 bonus runs: N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (71.48727777777779 [based on 18 runs with cutoff 60.0])

    Changing ["freq: 100->20"], evaluating ...
        -> worse: (2.926464 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->200"], evaluating ...
66/100000000, 771.598335/21600.0
        -> worse: (2.276514 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->3"], evaluating ...
        -> worse: (2.284494 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->1"], evaluating ...
        -> worse: (5.656568 [based on 1 runs with cutoff 60.0])
    Changing ["step: 4.0->0.5"], evaluating ...
69/100000000, 781.741765/21600.0
        -> worse: (2.202368 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->500"], evaluating ...
        -> worse: (2.154764 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->3"], evaluating ...
        -> worse: (2.258456 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->30"], evaluating ...
72/100000000, 846.154985/21600.0
        -> worse: (600.0092147208001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->2"], evaluating ...
73/100000000, 906.154985/21600.0
        -> worse: (600.0093395189001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->120"], evaluating ...
        -> worse: (6.075898 [based on 1 runs with cutoff 60.0])
    Changing ["step: 4.0->8.0"], evaluating ...
        -> worse: (2.135932 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->8"], evaluating ...
76/100000000, 916.607103/21600.0
        -> worse: (2.240288 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->5"], evaluating ...
        -> worse: (2.330647 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->1"], evaluating ...
78/100000000, 978.93775/21600.0
        -> worse: (600.0093267620001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->45"], evaluating ...
        -> worse: (2.249208 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->10"], evaluating ...
        -> worse: (2.21388 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->10"], evaluating ...
        -> worse: (2.675567 [based on 1 runs with cutoff 60.0])
    Changing ["step: 4.0->1.0"], evaluating ...
        -> worse: (2.151672 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->10"], evaluating ...
83/100000000, 1048.228077/21600.0
        -> worse: (600.0092880819001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->90"], evaluating ...
        -> worse: (3.54653 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->5"], evaluating ...
        -> worse: (2.998804 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->12"], evaluating ...
        -> worse: (2.318395 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->50"], evaluating ...
87/100000000, 1059.6734440000002/21600.0
        -> worse: (2.581638 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->2"], evaluating ...
        -> worse: (2.167129 [based on 1 runs with cutoff 60.0])
    Changing ["step: 4.0->10.0"], evaluating ...
        -> worse: (2.237785 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->15"], evaluating ...
90/100000000, 1091.4051860000002/21600.0
        -> worse: (27.326828 [based on 1 runs with cutoff 60.0])
          
============= Performing 26 bonus runs of state: N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (71.48727777777779 [based on 18 runs with cutoff 60.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 1094.3541380000001, 67.87999747368421 [19, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 1099.200831, 64.72833225000001 [20, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 1101.2161050000002, 61.741996142857154 [21, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
94/100000000, 1102.825606/21600.0
 Same incumbent, new precision:
New Incumbent: 1102.825606, 59.00870090909091 [22, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
95/100000000, 1130.110576/21600.0
 Same incumbent, new precision:
New Incumbent: 1130.110576, 57.62940826086957 [23, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
96/100000000, 1165.052404/21600.0
 Same incumbent, new precision:
New Incumbent: 1165.052404, 56.684092416666665 [24, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 1166.867659, 54.48933892 [25, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
98/100000000, 1202.811981/21600.0
 Same incumbent, new precision:
New Incumbent: 1202.811981, 53.77606903846154 [26, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 1206.751497, 51.93027077777778 [27, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 1209.4930279999999, 50.173530071428566 [28, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
101/100000000, 1269.4930279999999/21600.0
 Same incumbent, new precision:
New Incumbent: 1269.4930279999999, 69.13341179310345 [29, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 1271.2783579999998, 66.88847573333334 [30, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 1273.844874, 64.81357380645161 [31, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 1278.8988339999999, 62.946085875 [32, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
105/100000000, 1338.8988339999999/21600.0
 Same incumbent, new precision:
New Incumbent: 1338.8988339999999, 79.22075296969697 [33, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 1340.969846, 76.95164294117647 [34, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 1342.739864, 74.80359651428573 [35, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 1345.391005, 72.7993616388889 [36, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 1347.016073, 70.87573208108108 [37, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
110/100000000, 1351.052828/21600.0
 Same incumbent, new precision:
New Incumbent: 1351.052828, 69.11681163157895 [38, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 1353.630122, 67.41067015384616 [39, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 1355.518616, 65.77261575 [40, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 1357.3229680000002, 64.21241419512195 [41, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
114/100000000, 1417.3229680000002/21600.0
 Same incumbent, new precision:
New Incumbent: 1417.3229680000002, 76.96950195238095 [42, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 1420.0846980000001, 75.2437398139535 [43, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
 Same incumbent, new precision:
New Incumbent: 1421.6943620000002, 73.5702380909091 [44, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
          -> After 26 bonus runs for LM: N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (73.5702380909091 [based on 44 runs with cutoff 60.0])

   LM for iteration 1: N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (73.5702380909091 [based on 44 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 1): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 1): N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
==================================================================
Training quality of this incumbent parameter configuration: 73.5702380909091, based on 44 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (73.5702380909091 [based on 44 runs with cutoff 60.0])
N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (73.5702380909091 [based on 44 runs with cutoff 60.0])
LM better, change incumbent
New Incumbent: 1421.6943620000002, 73.5702380909091 [44, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
116/100000000, 1421.6943620000002/21600.0
iteration 2, flip 6, evaluation count 116
    perturb to ---> N=60 eps=0.25 freq=100 iter=5 rad=4 step=4.0 (2.280609 [based on 1 runs with cutoff 60.0])
    perturb to ---> N=90 eps=0.25 freq=100 iter=5 rad=4 step=4.0 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> N=90 eps=0.25 freq=100 iter=5 rad=2 step=4.0 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 2, start with N=90 eps=0.25 freq=100 iter=5 rad=2 step=4.0 (3.074429 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.25->0.5"], evaluating ...
118/100000000, 1427.7326840000003/21600.0
          -> Take improving step to neighbour N=90 eps=0.5 freq=100 iter=5 rad=2 step=4.0 (2.963893 [based on 1 runs with cutoff 60.0]) with flip 6

          
============= Performing 1 bonus runs of state: N=90 eps=0.5 freq=100 iter=5 rad=2 step=4.0 (2.963893 [based on 1 runs with cutoff 60.0]) ============ 

          -> After 1 bonus runs: N=90 eps=0.5 freq=100 iter=5 rad=2 step=4.0 (3.2169725 [based on 2 runs with cutoff 60.0])

    Changing ["freq: 100->500"], evaluating ...
        -> worse: (3.008251 [based on 1 runs with cutoff 60.0])
    Changing ["step: 4.0->1.0"], evaluating ...
        -> worse: (3.00314 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->12"], evaluating ...
122/100000000, 1440.1731640000003/21600.0
        -> worse: (3.300186 [based on 2 runs with cutoff 60.0])
    Changing ["N: 90->10"], evaluating ...
124/100000000, 1503.8144990000003/21600.0
        -> worse: (600.0092880542 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 2->4"], evaluating ...
        -> worse: (3.490174 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 2->3"], evaluating ...
        -> worse: (4.111006 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->1"], evaluating ...
127/100000000, 1571.4156790000004/21600.0
        -> worse: (600.0093184237 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 2->1"], evaluating ...
          -> Take improving step to neighbour N=90 eps=0.5 freq=100 iter=5 rad=1 step=4.0 (3.165721 [based on 2 runs with cutoff 60.0]) with flip 7

          
============= Performing 8 bonus runs of state: N=90 eps=0.5 freq=100 iter=5 rad=1 step=4.0 (3.165721 [based on 2 runs with cutoff 60.0]) ============ 

131/100000000, 1582.8776960000002/21600.0
132/100000000, 1642.8776960000002/21600.0
134/100000000, 1704.8919800000003/21600.0
136/100000000, 1715.4381880000005/21600.0
          -> After 8 bonus runs: N=90 eps=0.5 freq=100 iter=5 rad=1 step=4.0 (122.60898550000005 [based on 10 runs with cutoff 60.0])

    Changing ["eps: 0.5->1"], evaluating ...
        -> worse: (3.1715980000000004 [based on 2 runs with cutoff 60.0])
    Changing ["N: 90->15"], evaluating ...
140/100000000, 1783.8385300000007/21600.0
        -> worse: (600.0092867135002 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->200"], evaluating ...
        -> worse: (2.569824 [based on 1 runs with cutoff 60.0])
    Changing ["N: 90->60"], evaluating ...
142/100000000, 1794.6716270000006/21600.0
        -> worse: (8.263273 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->50"], evaluating ...
        -> worse: (3.253362 [based on 1 runs with cutoff 60.0])
    Changing ["step: 4.0->0.5"], evaluating ...
        -> worse: (3.2519545 [based on 2 runs with cutoff 60.0])
    Changing ["freq: 100->5"], evaluating ...
146/100000000, 1811.0586350000005/21600.0
        -> worse: (6.629737 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->8"], evaluating ...
        -> worse: (2.549289 [based on 1 runs with cutoff 60.0])
    Changing ["step: 4.0->1.0"], evaluating ...
        -> worse: (3.1980625 [based on 2 runs with cutoff 60.0])
    Changing ["N: 90->10"], evaluating ...
150/100000000, 1880.0040490000006/21600.0
        -> worse: (600.0092460700001 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.25"], evaluating ...
154/100000000, 1891.1701840000005/21600.0
155/100000000, 1951.1701840000005/21600.0
157/100000000, 2013.1451030000005/21600.0
        -> worse: (152.58916412500005 [based on 8 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.75"], evaluating ...
159/100000000, 2023.3906070000005/21600.0
        -> worse: (2.683445 [based on 1 runs with cutoff 60.0])
    Changing ["N: 90->30"], evaluating ...
        -> worse: (2.910628 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->3"], evaluating ...
        -> worse: (2.594783 [based on 1 runs with cutoff 60.0])
    Changing ["N: 90->120"], evaluating ...
        -> worse: (4.37038 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->12"], evaluating ...
163/100000000, 2035.8905610000006/21600.0
        -> worse: (2.624163 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->1"], evaluating ...
164/100000000, 2095.8905610000006/21600.0
        -> worse: (600.0092572407001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 90->45"], evaluating ...
        -> worse: (2.846186 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->10"], evaluating ...
        -> worse: (3.538034 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->20"], evaluating ...
167/100000000, 2106.984626000001/21600.0
        -> worse: (4.709845 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->10"], evaluating ...
        -> worse: (2.543893 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->500"], evaluating ...
172/100000000, 2119.282256000001/21600.0
173/100000000, 2161.417669000001/21600.0
175/100000000, 2223.3952760000006/21600.0
178/100000000, 2233.7580830000006/21600.0
          -> Take improving step to neighbour N=90 eps=0.5 freq=500 iter=5 rad=1 step=4.0 (66.42396640000001 [based on 10 runs with cutoff 60.0]) with flip 8

          
============= Performing 22 bonus runs of state: N=90 eps=0.5 freq=500 iter=5 rad=1 step=4.0 (66.42396640000001 [based on 10 runs with cutoff 60.0]) ============ 

181/100000000, 2279.7558630000008/21600.0
183/100000000, 2342.5499690000006/21600.0
187/100000000, 2352.7790970000005/21600.0
190/100000000, 2363.2148170000005/21600.0
191/100000000, 2423.2148170000005/21600.0
192/100000000, 2483.2148170000005/21600.0
194/100000000, 2501.0349330000004/21600.0
197/100000000, 2570.0375360000003/21600.0
          -> After 22 bonus runs: N=90 eps=0.5 freq=500 iter=5 rad=1 step=4.0 (99.07548484374999 [based on 32 runs with cutoff 60.0])

    Changing ["rad: 1->5"], evaluating ...
201/100000000, 2584.359245/21600.0
        -> worse: (4.455711 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 1->3"], evaluating ...
        -> worse: (4.195597 [based on 1 runs with cutoff 60.0])
    Changing ["N: 90->60"], evaluating ...
203/100000000, 2648.554842/21600.0
        -> worse: (600.0092332277002 [based on 1 runs with cutoff 60.0])
    Changing ["step: 4.0->1.0"], evaluating ...
        -> worse: (2.559999 [based on 1 runs with cutoff 60.0])
    Changing ["N: 90->15"], evaluating ...
205/100000000, 2711.114841/21600.0
        -> worse: (600.0092849988001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 90->45"], evaluating ...
        -> worse: (2.826036 [based on 1 runs with cutoff 60.0])
    Changing ["step: 4.0->8.0"], evaluating ...
        -> worse: (2.533149 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.1"], evaluating ...
209/100000000, 2721.8119939999997/21600.0
212/100000000, 2786.1629419999995/21600.0
        -> worse: (121.9378032 [based on 5 runs with cutoff 60.0])
    Changing ["step: 4.0->0.5"], evaluating ...
        -> worse: (2.59303 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->3"], evaluating ...
        -> worse: (2.7572485 [based on 2 runs with cutoff 60.0])
    Changing ["eps: 0.5->1"], evaluating ...
216/100000000, 2796.8641859999993/21600.0
        -> worse: (2.593717 [based on 1 runs with cutoff 60.0])
    Changing ["step: 4.0->10.0"], evaluating ...
        -> worse: (2.540497 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->10"], evaluating ...
        -> worse: (2.566343 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.75"], evaluating ...
220/100000000, 2807.269146999999/21600.0
223/100000000, 2871.622976999999/21600.0
        -> worse: (121.93041020000003 [based on 5 runs with cutoff 60.0])
    Changing ["N: 90->10"], evaluating ...
224/100000000, 2931.622976999999/21600.0
        -> worse: (600.0092153068001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 90->30"], evaluating ...
        -> worse: (2.583239 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.25"], evaluating ...
        -> worse: (2.553599 [based on 1 runs with cutoff 60.0])
    Changing ["N: 90->120"], evaluating ...
        -> worse: (4.286498 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->12"], evaluating ...
228/100000000, 2943.588977999999/21600.0
        -> worse: (2.542665 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 500->2"], evaluating ...
229/100000000, 3003.588977999999/21600.0
        -> worse: (600.0093276156001 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->8"], evaluating ...
        -> worse: (2.568716 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 1->4"], evaluating ...
        -> worse: (3.657999 [based on 1 runs with cutoff 60.0])
          
============= Performing 22 bonus runs of state: N=90 eps=0.5 freq=500 iter=5 rad=1 step=4.0 (99.07548484374999 [based on 32 runs with cutoff 60.0]) ============ 

232/100000000, 3069.815692999999/21600.0
235/100000000, 3079.950299999999/21600.0
238/100000000, 3091.5460739999994/21600.0
241/100000000, 3155.8091509999995/21600.0
State wants more detail (44+1) than incumbent (44), doing incumbent first:
N=90 eps=0.5 freq=500 iter=5 rad=1 step=4.0 (100.03324313636367 [based on 44 runs with cutoff 60.0])
N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (73.5702380909091 [based on 44 runs with cutoff 60.0])
 Same incumbent, new precision:
New Incumbent: 3165.0405459999993, 72.02862991111111 [45, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
245/100000000, 3169.8214539999994/21600.0
State wants more detail (45+1) than incumbent (45), doing incumbent first:
N=90 eps=0.5 freq=500 iter=5 rad=1 step=4.0 (97.91652457777779 [based on 45 runs with cutoff 60.0])
N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (72.02862991111111 [based on 45 runs with cutoff 60.0])
246/100000000, 3229.8214539999994/21600.0
 Same incumbent, new precision:
New Incumbent: 3229.8214539999994, 83.5062705652174 [46, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
State wants more detail (46+1) than incumbent (46), doing incumbent first:
N=90 eps=0.5 freq=500 iter=5 rad=1 step=4.0 (95.8497140652174 [based on 46 runs with cutoff 60.0])
N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (83.5062705652174 [based on 46 runs with cutoff 60.0])
 Same incumbent, new precision:
New Incumbent: 3235.8492259999994, 81.79729738297873 [47, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
249/100000000, 3268.903752999999/21600.0
State wants more detail (47+1) than incumbent (47), doing incumbent first:
N=90 eps=0.5 freq=500 iter=5 rad=1 step=4.0 (94.51364625531916 [based on 47 runs with cutoff 60.0])
N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (81.79729738297873 [based on 47 runs with cutoff 60.0])
 Same incumbent, new precision:
New Incumbent: 3274.181759999999, 80.2031455 [48, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
State wants more detail (48+1) than incumbent (48), doing incumbent first:
N=90 eps=0.5 freq=500 iter=5 rad=1 step=4.0 (92.61708085416667 [based on 48 runs with cutoff 60.0])
N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (80.2031455 [based on 48 runs with cutoff 60.0])
252/100000000, 3337.660266999999/21600.0
 Same incumbent, new precision:
New Incumbent: 3337.660266999999, 90.8112466122449 [49, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
253/100000000, 3397.660266999999/21600.0
State wants more detail (49+1) than incumbent (49), doing incumbent first:
N=90 eps=0.5 freq=500 iter=5 rad=1 step=4.0 (102.97183634693879 [based on 49 runs with cutoff 60.0])
N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (90.8112466122449 [based on 49 runs with cutoff 60.0])
 Same incumbent, new precision:
New Incumbent: 3400.765258999999, 89.05712152 [50, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
State wants more detail (50+1) than incumbent (50), doing incumbent first:
N=90 eps=0.5 freq=500 iter=5 rad=1 step=4.0 (100.96331732000003 [based on 50 runs with cutoff 60.0])
N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (89.05712152 [based on 50 runs with cutoff 60.0])
 Same incumbent, new precision:
New Incumbent: 3407.4000279999987, 87.39107764705882 [51, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
257/100000000, 3413.3693059999987/21600.0
State wants more detail (51+1) than incumbent (51), doing incumbent first:
N=90 eps=0.5 freq=500 iter=5 rad=1 step=4.0 (99.10068909803923 [based on 51 runs with cutoff 60.0])
N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (87.39107764705882 [based on 51 runs with cutoff 60.0])
 Same incumbent, new precision:
New Incumbent: 3415.5307019999987, 85.75204530769231 [52, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
State wants more detail (52+1) than incumbent (52), doing incumbent first:
N=90 eps=0.5 freq=500 iter=5 rad=1 step=4.0 (97.24704605769232 [based on 52 runs with cutoff 60.0])
N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (85.75204530769231 [based on 52 runs with cutoff 60.0])
 Same incumbent, new precision:
New Incumbent: 3422.022105999999, 84.20540583018868 [53, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
261/100000000, 3427.433733999999/21600.0
State wants more detail (53+1) than incumbent (53), doing incumbent first:
N=90 eps=0.5 freq=500 iter=5 rad=1 step=4.0 (95.51430232075472 [based on 53 runs with cutoff 60.0])
N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (84.20540583018868 [based on 53 runs with cutoff 60.0])
 Same incumbent, new precision:
New Incumbent: 3429.296852999999, 82.68054866666665 [54, 60.0]. With state N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
          -> After 22 bonus runs for LM: N=90 eps=0.5 freq=500 iter=5 rad=1 step=4.0 (93.78328400000001 [based on 54 runs with cutoff 60.0])

   LM for iteration 2: N=90 eps=0.5 freq=500 iter=5 rad=1 step=4.0 (93.78328400000001 [based on 54 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 2): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 2): N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
==================================================================
Training quality of this incumbent parameter configuration: 82.68054866666665, based on 54 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
N=90 eps=0.5 freq=500 iter=5 rad=1 step=4.0 (93.78328400000001 [based on 54 runs with cutoff 60.0])
N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (82.68054866666665 [based on 54 runs with cutoff 60.0])
Incumbent better, keeping it
rejecting worse N=90 eps=0.5 freq=500 iter=5 rad=1 step=4.0 (93.78328400000001 [based on 54 runs with cutoff 60.0]), going back to N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (82.68054866666665 [based on 54 runs with cutoff 60.0])
263/100000000, 3431.336165999999/21600.0
iteration 3, flip 10, evaluation count 263
    perturb to ---> N=60 eps=1 freq=100 iter=5 rad=2 step=4.0 (2.167129 [based on 1 runs with cutoff 60.0])
    perturb to ---> N=60 eps=0.75 freq=100 iter=5 rad=2 step=4.0 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> N=45 eps=0.75 freq=100 iter=5 rad=2 step=4.0 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 3, start with N=45 eps=0.75 freq=100 iter=5 rad=2 step=4.0 (4.95898 [based on 1 runs with cutoff 60.0])
    Changing ["N: 45->90"], evaluating ...
265/100000000, 3439.323605999999/21600.0
          -> Take improving step to neighbour N=90 eps=0.75 freq=100 iter=5 rad=2 step=4.0 (3.02846 [based on 1 runs with cutoff 60.0]) with flip 10

          
============= Performing 1 bonus runs of state: N=90 eps=0.75 freq=100 iter=5 rad=2 step=4.0 (3.02846 [based on 1 runs with cutoff 60.0]) ============ 

          -> After 1 bonus runs: N=90 eps=0.75 freq=100 iter=5 rad=2 step=4.0 (3.1890140000000002 [based on 2 runs with cutoff 60.0])

    Changing ["iter: 5->10"], evaluating ...
        -> worse: (3.157289 [based on 1 runs with cutoff 60.0])
    Changing ["step: 4.0->10.0"], evaluating ...
        -> worse: (3.043181 [based on 1 runs with cutoff 60.0])
    Changing ["N: 90->15"], evaluating ...
269/100000000, 3508.8736439999993/21600.0
        -> worse: (600.0092921325001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->5"], evaluating ...
270/100000000, 3560.6570929999993/21600.0
        -> worse: (51.783449 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->8"], evaluating ...
        -> worse: (3.1953625 [based on 2 runs with cutoff 60.0])
    Changing ["eps: 0.75->0.25"], evaluating ...
          -> Take improving step to neighbour N=90 eps=0.25 freq=100 iter=5 rad=2 step=4.0 (3.1634089999999997 [based on 2 runs with cutoff 60.0]) with flip 11

          
============= Performing 6 bonus runs of state: N=90 eps=0.25 freq=100 iter=5 rad=2 step=4.0 (3.1634089999999997 [based on 2 runs with cutoff 60.0]) ============ 

274/100000000, 3574.523784/21600.0
276/100000000, 3592.224675/21600.0
278/100000000, 3653.864457/21600.0
          -> After 6 bonus runs: N=90 eps=0.25 freq=100 iter=5 rad=2 step=4.0 (79.26486050000001 [based on 8 runs with cutoff 60.0])

    Changing ["N: 90->30"], evaluating ...
        -> worse: (4.404126 [based on 1 runs with cutoff 60.0])
    Changing ["step: 4.0->0.5"], evaluating ...
281/100000000, 3665.4007340000003/21600.0
        -> worse: (3.192043 [based on 2 runs with cutoff 60.0])
    Changing ["rad: 2->5"], evaluating ...
        -> worse: (4.342779 [based on 1 runs with cutoff 60.0])
    Changing ["step: 4.0->8.0"], evaluating ...
284/100000000, 3676.058367/21600.0
288/100000000, 3712.2318490000002/21600.0
        -> worse: (7.803737 [based on 5 runs with cutoff 60.0])
    Changing ["freq: 100->20"], evaluating ...
        -> worse: (3.286217 [based on 2 runs with cutoff 60.0])
    Changing ["freq: 100->50"], evaluating ...
292/100000000, 3724.9768100000006/21600.0
        -> worse: (3.8305176666666667 [based on 3 runs with cutoff 60.0])
    Changing ["N: 90->10"], evaluating ...
294/100000000, 3790.2958360000007/21600.0
        -> worse: (600.0092839626001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->2"], evaluating ...
        -> worse: (4.965075 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->12"], evaluating ...
297/100000000, 3801.671864000001/21600.0
        -> worse: (3.2054765 [based on 2 runs with cutoff 60.0])
    Changing ["iter: 5->8"], evaluating ...
        -> worse: (3.365463 [based on 2 runs with cutoff 60.0])
    Changing ["iter: 5->10"], evaluating ...
301/100000000, 3814.6366200000007/21600.0
        -> worse: (3.708512666666667 [based on 3 runs with cutoff 60.0])
    Changing ["freq: 100->10"], evaluating ...
303/100000000, 3826.9704930000007/21600.0
        -> worse: (7.442165 [based on 1 runs with cutoff 60.0])
    Changing ["step: 4.0->1.0"], evaluating ...
        -> worse: (3.2659789999999997 [based on 2 runs with cutoff 60.0])
    Changing ["eps: 0.25->0.1"], evaluating ...
307/100000000, 3840.1611270000008/21600.0
        -> worse: (3.329338 [based on 2 runs with cutoff 60.0])
    Changing ["freq: 100->5"], evaluating ...
        -> worse: (3.959606 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->200"], evaluating ...
311/100000000, 3854.7817980000004/21600.0
        -> worse: (3.5536883333333336 [based on 3 runs with cutoff 60.0])
    Changing ["N: 90->45"], evaluating ...
        -> worse: (4.45266 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->3"], evaluating ...
314/100000000, 3865.631311/21600.0
        -> worse: (3.1984265 [based on 2 runs with cutoff 60.0])
    Changing ["N: 90->120"], evaluating ...
        -> worse: (7.792948 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->500"], evaluating ...
316/100000000, 3876.366829/21600.0
320/100000000, 3945.761122/21600.0
        -> worse: (122.46739260000001 [based on 5 runs with cutoff 60.0])
    Changing ["eps: 0.25->0.5"], evaluating ...
        -> worse: (3.925140666666666 [based on 3 runs with cutoff 60.0])
    Changing ["step: 4.0->10.0"], evaluating ...
323/100000000, 3957.4608569999996/21600.0
        -> worse: (3.1791289999999996 [based on 2 runs with cutoff 60.0])
    Changing ["eps: 0.25->1"], evaluating ...
        -> worse: (3.109568 [based on 1 runs with cutoff 60.0])
    Changing ["N: 90->15"], evaluating ...
        -> worse: (4.399348 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->1"], evaluating ...
326/100000000, 4024.9697729999993/21600.0
        -> worse: (600.0093665058001 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 2->1"], evaluating ...
        -> worse: (136.37285788888892 [based on 9 runs with cutoff 60.0])
    Changing ["N: 90->60"], evaluating ...
329/100000000, 4035.9344309999997/21600.0
333/100000000, 4100.520049/21600.0
        -> worse: (13.342106000000001 [based on 5 runs with cutoff 60.0])
    Changing ["rad: 2->4"], evaluating ...
        -> worse: (3.516103 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 2->3"], evaluating ...
        -> worse: (4.019944 [based on 1 runs with cutoff 60.0])
          
============= Performing 30 bonus runs of state: N=90 eps=0.25 freq=100 iter=5 rad=2 step=4.0 (70.70180244444445 [based on 9 runs with cutoff 60.0]) ============ 

337/100000000, 4113.869873/21600.0
339/100000000, 4176.967932/21600.0
341/100000000, 4239.262876/21600.0
345/100000000, 4258.308977/21600.0
348/100000000, 4269.001553/21600.0
349/100000000, 4329.001553/21600.0
350/100000000, 4389.001553/21600.0
352/100000000, 4451.293927/21600.0
355/100000000, 4517.996496/21600.0
359/100000000, 4587.278768/21600.0
363/100000000, 4602.037432/21600.0
364/100000000, 4650.391783/21600.0
          -> After 30 bonus runs for LM: N=90 eps=0.25 freq=100 iter=5 rad=2 step=4.0 (127.23284612820517 [based on 39 runs with cutoff 60.0])

   LM for iteration 3: N=90 eps=0.25 freq=100 iter=5 rad=2 step=4.0 (127.23284612820517 [based on 39 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 3): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 3): N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
==================================================================
Training quality of this incumbent parameter configuration: 82.68054866666665, based on 54 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
N=90 eps=0.25 freq=100 iter=5 rad=2 step=4.0 (127.23284612820517 [based on 39 runs with cutoff 60.0])
N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (82.68054866666665 [based on 54 runs with cutoff 60.0])
Incumbent better, keeping it
rejecting worse N=90 eps=0.25 freq=100 iter=5 rad=2 step=4.0 (127.23284612820517 [based on 39 runs with cutoff 60.0]), going back to N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (82.68054866666665 [based on 54 runs with cutoff 60.0])
365/100000000, 4653.780173/21600.0
iteration 4, flip 13, evaluation count 365
    perturb to ---> N=60 eps=1 freq=100 iter=10 rad=4 step=4.0 (2.21388 [based on 1 runs with cutoff 60.0])
    perturb to ---> N=60 eps=1 freq=100 iter=10 rad=4 step=0.5 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> N=60 eps=1 freq=100 iter=10 rad=5 step=0.5 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 4, start with N=60 eps=1 freq=100 iter=10 rad=5 step=0.5 (2.398782 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->2"], evaluating ...
367/100000000, 4716.178955/21600.0
        -> worse: (600.0092126872001 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 5->3"], evaluating ...
          -> Take improving step to neighbour N=60 eps=1 freq=100 iter=10 rad=3 step=0.5 (2.3254 [based on 1 runs with cutoff 60.0]) with flip 13

          
============= Performing 2 bonus runs of state: N=60 eps=1 freq=100 iter=10 rad=3 step=0.5 (2.3254 [based on 1 runs with cutoff 60.0]) ============ 

          -> After 2 bonus runs: N=60 eps=1 freq=100 iter=10 rad=3 step=0.5 (2.035299333333333 [based on 3 runs with cutoff 60.0])

    Changing ["N: 60->30"], evaluating ...
373/100000000, 4727.773542999999/21600.0
          -> Take improving step to neighbour N=30 eps=1 freq=100 iter=10 rad=3 step=0.5 (1.8295633333333334 [based on 3 runs with cutoff 60.0]) with flip 14

          
============= Performing 1 bonus runs of state: N=30 eps=1 freq=100 iter=10 rad=3 step=0.5 (1.8295633333333334 [based on 3 runs with cutoff 60.0]) ============ 

          -> After 1 bonus runs: N=30 eps=1 freq=100 iter=10 rad=3 step=0.5 (1.66555925 [based on 4 runs with cutoff 60.0])

    Changing ["eps: 1->0.5"], evaluating ...
        -> worse: (1.81795 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->15"], evaluating ...
376/100000000, 4750.705359/21600.0
        -> worse: (19.940319 [based on 1 runs with cutoff 60.0])
    Changing ["step: 0.5->4.0"], evaluating ...
        -> worse: (1.727379 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->200"], evaluating ...
        -> worse: (1.723916 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->120"], evaluating ...
        -> worse: (6.369739 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->10"], evaluating ...
380/100000000, 4820.526392999999/21600.0
        -> worse: (600.0092154178001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->90"], evaluating ...
        -> worse: (4.0084 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 3->2"], evaluating ...
382/100000000, 4884.534792999999/21600.0
        -> worse: (600.0092138833002 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 10->12"], evaluating ...
        -> worse: (2.096005 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->10"], evaluating ...
384/100000000, 4946.630797999999/21600.0
        -> worse: (600.0092898783 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 10->8"], evaluating ...
        -> worse: (1.776123 [based on 1 runs with cutoff 60.0])
    Changing ["step: 0.5->1.0"], evaluating ...
        -> worse: (1.733112 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->50"], evaluating ...
        -> worse: (1.717384 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 1->0.25"], evaluating ...
        -> worse: (1.779317 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 10->3"], evaluating ...
        -> worse: (1.779486 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 3->5"], evaluating ...
390/100000000, 5015.416219999999/21600.0
        -> worse: (600.0092733897001 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 1->0.75"], evaluating ...
        -> worse: (1.846039 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 3->1"], evaluating ...
        -> worse: (2.286339 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->45"], evaluating ...
393/100000000, 5079.548597999999/21600.0
        -> worse: (600.0092130854001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->20"], evaluating ...
394/100000000, 5139.548597999999/21600.0
        -> worse: (600.0092128248001 [based on 1 runs with cutoff 60.0])
    Changing ["step: 0.5->10.0"], evaluating ...
        -> worse: (2.241418 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->1"], evaluating ...
396/100000000, 5201.790015999999/21600.0
        -> worse: (600.0092166554001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->5"], evaluating ...
397/100000000, 5215.003018999999/21600.0
        -> worse: (13.213003 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 1->0.1"], evaluating ...
        -> worse: (1.8388573333333333 [based on 3 runs with cutoff 60.0])
    Changing ["freq: 100->500"], evaluating ...
        -> worse: (1.790249 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->2"], evaluating ...
402/100000000, 5250.602285999999/21600.0
        -> worse: (28.292446 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 10->5"], evaluating ...
        -> worse: (1.812905 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 3->4"], evaluating ...
404/100000000, 5312.415190999999/21600.0
        -> worse: (600.0092579186002 [based on 1 runs with cutoff 60.0])
    Changing ["step: 0.5->8.0"], evaluating ...
        -> worse: (1.813086 [based on 1 runs with cutoff 60.0])
          
============= Performing 29 bonus runs of state: N=30 eps=1 freq=100 iter=10 rad=3 step=0.5 (1.66555925 [based on 4 runs with cutoff 60.0]) ============ 

406/100000000, 5374.228276999999/21600.0
408/100000000, 5435.688490999999/21600.0
414/100000000, 5447.26282/21600.0
416/100000000, 5509.491241/21600.0
421/100000000, 5519.988641/21600.0
424/100000000, 5583.232626/21600.0
425/100000000, 5643.232626/21600.0
427/100000000, 5704.618634/21600.0
430/100000000, 5736.759769/21600.0
432/100000000, 5798.572065/21600.0
434/100000000, 5861.308564/21600.0
          -> After 29 bonus runs for LM: N=30 eps=1 freq=100 iter=10 rad=3 step=0.5 (147.69068038560306 [based on 33 runs with cutoff 60.0])

   LM for iteration 4: N=30 eps=1 freq=100 iter=10 rad=3 step=0.5 (147.69068038560306 [based on 33 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 4): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 4): N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
==================================================================
Training quality of this incumbent parameter configuration: 82.68054866666665, based on 54 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
N=30 eps=1 freq=100 iter=10 rad=3 step=0.5 (147.69068038560306 [based on 33 runs with cutoff 60.0])
N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (82.68054866666665 [based on 54 runs with cutoff 60.0])
Incumbent better, keeping it
rejecting worse N=30 eps=1 freq=100 iter=10 rad=3 step=0.5 (147.69068038560306 [based on 33 runs with cutoff 60.0]), going back to N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (82.68054866666665 [based on 54 runs with cutoff 60.0])
434/100000000, 5861.308564/21600.0
iteration 5, flip 16, evaluation count 434
    perturb to ---> N=60 eps=1 freq=100 iter=5 rad=4 step=10.0 (2.237785 [based on 1 runs with cutoff 60.0])
    perturb to ---> N=60 eps=1 freq=50 iter=5 rad=4 step=10.0 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> N=60 eps=1 freq=50 iter=10 rad=4 step=10.0 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 5, start with N=60 eps=1 freq=50 iter=10 rad=4 step=10.0 (3.007854 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->120"], evaluating ...
        -> worse: (6.93858 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 10->8"], evaluating ...
437/100000000, 5873.950721/21600.0
          -> Take improving step to neighbour N=60 eps=1 freq=50 iter=8 rad=4 step=10.0 (2.695723 [based on 1 runs with cutoff 60.0]) with flip 16

          
============= Performing 2 bonus runs of state: N=60 eps=1 freq=50 iter=8 rad=4 step=10.0 (2.695723 [based on 1 runs with cutoff 60.0]) ============ 

          -> After 2 bonus runs: N=60 eps=1 freq=50 iter=8 rad=4 step=10.0 (3.054987333333333 [based on 3 runs with cutoff 60.0])

    Changing ["step: 10.0->4.0"], evaluating ...
441/100000000, 5886.054934000001/21600.0
        -> worse: (2.817487 [based on 2 runs with cutoff 60.0])
    Changing ["eps: 1->0.5"], evaluating ...
          -> Take improving step to neighbour N=60 eps=0.5 freq=50 iter=8 rad=4 step=10.0 (3.028746333333333 [based on 3 runs with cutoff 60.0]) with flip 17

          
============= Performing 2 bonus runs of state: N=60 eps=0.5 freq=50 iter=8 rad=4 step=10.0 (3.028746333333333 [based on 3 runs with cutoff 60.0]) ============ 

445/100000000, 5897.609888000001/21600.0
446/100000000, 5957.609888000001/21600.0
          -> After 2 bonus runs: N=60 eps=0.5 freq=50 iter=8 rad=4 step=10.0 (122.3110108 [based on 5 runs with cutoff 60.0])

    Changing ["eps: 0.5->0.75"], evaluating ...
        -> worse: (2.768274 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->5"], evaluating ...
        -> worse: (2.550846 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 50->100"], evaluating ...
451/100000000, 5971.971201000001/21600.0
          -> Take improving step to neighbour N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (3.1201996000000003 [based on 5 runs with cutoff 60.0]) with flip 18

          
============= Performing 3 bonus runs of state: N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (3.1201996000000003 [based on 5 runs with cutoff 60.0]) ============ 

455/100000000, 6026.018340000001/21600.0
          -> After 3 bonus runs: N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (8.367249625 [based on 8 runs with cutoff 60.0])

    Changing ["freq: 100->500"], evaluating ...
        -> worse: (2.293295 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->45"], evaluating ...
        -> worse: (2.239264 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.25"], evaluating ...
459/100000000, 6036.630356000002/21600.0
        -> worse: (2.230792 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->1"], evaluating ...
460/100000000, 6096.630356000002/21600.0
        -> worse: (600.0092924246001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->5"], evaluating ...
        -> worse: (2.926968 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->15"], evaluating ...
466/100000000, 6166.092112000003/21600.0
        -> worse: (121.30697760000002 [based on 5 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.75"], evaluating ...
        -> worse: (2.296056 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->10"], evaluating ...
        -> worse: (2.269568 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->4.0"], evaluating ...
470/100000000, 6176.604045000003/21600.0
471/100000000, 6236.604045000003/21600.0
        -> worse: (88.20946914285716 [based on 7 runs with cutoff 60.0])
    Changing ["rad: 4->5"], evaluating ...
        -> worse: (2.370816 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->30"], evaluating ...
473/100000000, 6298.974861000002/21600.0
        -> worse: (600.0092578446001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->90"], evaluating ...
        -> worse: (3.544813 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.1"], evaluating ...
        -> worse: (2.168123 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->3"], evaluating ...
        -> worse: (2.288319 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->0.5"], evaluating ...
477/100000000, 6309.487912000003/21600.0
        -> worse: (2.511796 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->10"], evaluating ...
478/100000000, 6366.851977000003/21600.0
        -> worse: (57.364065 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->1"], evaluating ...
        -> worse: (2.241163 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->1.0"], evaluating ...
        -> worse: (2.250591 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->120"], evaluating ...
481/100000000, 6377.715227000002/21600.0
        -> worse: (6.371496 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->2"], evaluating ...
        -> worse: (2.140899 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->200"], evaluating ...
        -> worse: (2.265659 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->10"], evaluating ...
484/100000000, 6442.121785000002/21600.0
        -> worse: (600.0092880726002 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->2"], evaluating ...
485/100000000, 6502.121785000002/21600.0
        -> worse: (600.0092807238001 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->3"], evaluating ...
        -> worse: (2.290046 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->8.0"], evaluating ...
        -> worse: (2.140099 [based on 2 runs with cutoff 60.0])
    Changing ["rad: 4->1"], evaluating ...
488/100000000, 6554.615845000002/21600.0
        -> worse: (48.171556 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->5"], evaluating ...
        -> worse: (2.277462 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->20"], evaluating ...
        -> worse: (3.712657 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->12"], evaluating ...
        -> worse: (2.299296 [based on 1 runs with cutoff 60.0])
          
============= Performing 29 bonus runs of state: N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (8.367249625 [based on 8 runs with cutoff 60.0]) ============ 

492/100000000, 6566.864904000002/21600.0
496/100000000, 6591.849158000002/21600.0
498/100000000, 6653.729878000002/21600.0
503/100000000, 6667.814429000003/21600.0
506/100000000, 6731.539055000003/21600.0
507/100000000, 6765.235103000003/21600.0
509/100000000, 6782.959539000003/21600.0
512/100000000, 6850.156057000003/21600.0
515/100000000, 6860.4907390000035/21600.0
516/100000000, 6920.4907390000035/21600.0
          -> After 29 bonus runs for LM: N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (70.07667662162162 [based on 37 runs with cutoff 60.0])

   LM for iteration 5: N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (70.07667662162162 [based on 37 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 5): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 5): N=60, eps=1, freq=100, iter=5, rad=4, step=4.0
==================================================================
Training quality of this incumbent parameter configuration: 82.68054866666665, based on 54 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (70.07667662162162 [based on 37 runs with cutoff 60.0])
N=60 eps=1 freq=100 iter=5 rad=4 step=4.0 (82.68054866666665 [based on 54 runs with cutoff 60.0])
521/100000000, 6932.653261000004/21600.0
525/100000000, 6998.994662000005/21600.0
529/100000000, 7067.640916000005/21600.0
532/100000000, 7080.373671000005/21600.0
536/100000000, 7093.343209000006/21600.0
New inc: 71.09752716666667
New Incumbent: 7095.193130000006, 71.09752716666667 [54, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
LM better, change incumbent
New Incumbent: 7095.193130000006, 71.09752716666667 [54, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
   Accepting new better local optimum: N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (71.09752716666667 [based on 54 runs with cutoff 60.0])
537/100000000, 7095.193130000006/21600.0
iteration 6, flip 20, evaluation count 537
    perturb to ---> N=30 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (600.0092578446001 [based on 1 runs with cutoff 60.0])
    perturb to ---> N=30 eps=0.5 freq=100 iter=12 rad=4 step=10.0 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> N=30 eps=0.5 freq=100 iter=12 rad=5 step=10.0 (100000000 [based on 0 runs with cutoff 0])
538/100000000, 7155.193130000006/21600.0
   BLS in iteration 6, start with N=30 eps=0.5 freq=100 iter=12 rad=5 step=10.0 (600.0092145749 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 5->3"], evaluating ...
          -> Take improving step to neighbour N=30 eps=0.5 freq=100 iter=12 rad=3 step=10.0 (1.762826 [based on 1 runs with cutoff 60.0]) with flip 20

          
============= Performing 1 bonus runs of state: N=30 eps=0.5 freq=100 iter=12 rad=3 step=10.0 (1.762826 [based on 1 runs with cutoff 60.0]) ============ 

          -> After 1 bonus runs: N=30 eps=0.5 freq=100 iter=12 rad=3 step=10.0 (1.8216255000000001 [based on 2 runs with cutoff 60.0])

    Changing ["rad: 3->4"], evaluating ...
541/100000000, 7218.836381000006/21600.0
        -> worse: (600.0092087242001 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 3->2"], evaluating ...
        -> worse: (3.979611 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 12->10"], evaluating ...
        -> worse: (1.829104 [based on 2 runs with cutoff 60.0])
    Changing ["step: 10.0->0.5"], evaluating ...
546/100000000, 7230.045731000006/21600.0
          -> Take improving step to neighbour N=30 eps=0.5 freq=100 iter=12 rad=3 step=0.5 (1.7857655000000001 [based on 2 runs with cutoff 60.0]) with flip 21

          
============= Performing 4 bonus runs of state: N=30 eps=0.5 freq=100 iter=12 rad=3 step=0.5 (1.7857655000000001 [based on 2 runs with cutoff 60.0]) ============ 

549/100000000, 7293.119014000006/21600.0
          -> After 4 bonus runs: N=30 eps=0.5 freq=100 iter=12 rad=3 step=0.5 (101.34880450000001 [based on 6 runs with cutoff 60.0])

    Changing ["step: 0.5->1.0"], evaluating ...
        -> worse: (1.743348 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->10"], evaluating ...
552/100000000, 7356.310275000006/21600.0
        -> worse: (600.0092883272 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->500"], evaluating ...
        -> worse: (1.820751 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 3->4"], evaluating ...
554/100000000, 7373.532655000006/21600.0
        -> worse: (15.401629 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.25"], evaluating ...
        -> worse: (1.76272 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 12->8"], evaluating ...
        -> worse: (1.744229 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->200"], evaluating ...
        -> worse: (1.732569 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->120"], evaluating ...
558/100000000, 7384.372874000006/21600.0
        -> worse: (5.600701 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 12->5"], evaluating ...
        -> worse: (1.730763 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->20"], evaluating ...
        -> worse: (3.198246 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->1"], evaluating ...
        -> worse: (1.9693575 [based on 2 runs with cutoff 60.0])
    Changing ["step: 0.5->4.0"], evaluating ...
        -> worse: (1.740744 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->2"], evaluating ...
563/100000000, 7452.885337000005/21600.0
        -> worse: (600.0092175046001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->15"], evaluating ...
564/100000000, 7512.885337000005/21600.0
        -> worse: (600.0092041552001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->90"], evaluating ...
        -> worse: (3.976102 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 12->3"], evaluating ...
        -> worse: (2.035186 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->1"], evaluating ...
567/100000000, 7566.601244000005/21600.0
        -> worse: (47.704619 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 3->1"], evaluating ...
        -> worse: (2.437583 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.75"], evaluating ...
        -> worse: (1.733434 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.1"], evaluating ...
        -> worse: (1.8327969999999998 [based on 2 runs with cutoff 60.0])
    Changing ["freq: 100->50"], evaluating ...
        -> worse: (1.791389 [based on 1 runs with cutoff 60.0])
    Changing ["step: 0.5->8.0"], evaluating ...
573/100000000, 7577.954334000005/21600.0
        -> worse: (1.72509 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->5"], evaluating ...
574/100000000, 7637.954334000005/21600.0
        -> worse: (600.0092323084001 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 12->10"], evaluating ...
        -> worse: (1.8742305 [based on 2 runs with cutoff 60.0])
    Changing ["rad: 3->5"], evaluating ...
576/100000000, 7699.884845000004/21600.0
        -> worse: (600.0092554702001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->10"], evaluating ...
577/100000000, 7759.884845000004/21600.0
        -> worse: (600.0092142889001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->45"], evaluating ...
578/100000000, 7819.884845000004/21600.0
        -> worse: (600.0092150370001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->60"], evaluating ...
        -> worse: (2.221009 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 3->2"], evaluating ...
        -> worse: (2.623058 [based on 1 runs with cutoff 60.0])
          
============= Performing 29 bonus runs of state: N=30 eps=0.5 freq=100 iter=12 rad=3 step=0.5 (101.34880450000001 [based on 6 runs with cutoff 60.0]) ============ 

581/100000000, 7884.728912000004/21600.0
587/100000000, 7896.155000000004/21600.0
589/100000000, 7958.190949000004/21600.0
590/100000000, 7977.013977000004/21600.0
595/100000000, 7987.015135000003/21600.0
597/100000000, 8048.168394000003/21600.0
598/100000000, 8108.168394000003/21600.0
600/100000000, 8169.608391000003/21600.0
603/100000000, 8234.124329000004/21600.0
605/100000000, 8296.000477000003/21600.0
607/100000000, 8358.803186000003/21600.0
          -> After 29 bonus runs for LM: N=30 eps=0.5 freq=100 iter=12 rad=3 step=0.5 (156.15645120999716 [based on 35 runs with cutoff 60.0])

   LM for iteration 6: N=30 eps=0.5 freq=100 iter=12 rad=3 step=0.5 (156.15645120999716 [based on 35 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 6): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 6): N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
==================================================================
Training quality of this incumbent parameter configuration: 71.09752716666667, based on 54 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
N=30 eps=0.5 freq=100 iter=12 rad=3 step=0.5 (156.15645120999716 [based on 35 runs with cutoff 60.0])
N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (71.09752716666667 [based on 54 runs with cutoff 60.0])
Incumbent better, keeping it
rejecting worse N=30 eps=0.5 freq=100 iter=12 rad=3 step=0.5 (156.15645120999716 [based on 35 runs with cutoff 60.0]), going back to N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (71.09752716666667 [based on 54 runs with cutoff 60.0])
609/100000000, 8362.051935000003/21600.0
iteration 7, flip 23, evaluation count 609
    perturb to ---> N=60 eps=0.5 freq=500 iter=8 rad=4 step=10.0 (2.293295 [based on 1 runs with cutoff 60.0])
    perturb to ---> N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (71.09752716666667 [based on 54 runs with cutoff 60.0])
    perturb to ---> N=60 eps=0.5 freq=200 iter=8 rad=4 step=10.0 (2.265659 [based on 1 runs with cutoff 60.0])
   BLS in iteration 7, start with N=60 eps=0.5 freq=200 iter=8 rad=4 step=10.0 (2.12262 [based on 2 runs with cutoff 60.0])
    Changing ["freq: 200->100"], evaluating ...
611/100000000, 8370.651060000002/21600.0
          -> Take improving step to neighbour N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (71.09752716666667 [based on 54 runs with cutoff 60.0]) with flip 23

          
============= Performing 1 bonus runs of state: N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (71.09752716666667 [based on 54 runs with cutoff 60.0]) ============ 

 Same incumbent, new precision:
New Incumbent: 8372.460435000003, 69.83774258181818 [55, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
          -> After 1 bonus runs: N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (69.83774258181818 [based on 55 runs with cutoff 60.0])

    Changing ["freq: 100->500"], evaluating ...
        -> worse: (2.1378115 [based on 2 runs with cutoff 60.0])
    Changing ["freq: 100->5"], evaluating ...
        -> worse: (2.7830915000000003 [based on 2 runs with cutoff 60.0])
    Changing ["freq: 100->1"], evaluating ...
615/100000000, 8380.851193000002/21600.0
        -> worse: (301.88925371230005 [based on 2 runs with cutoff 60.0])
    Changing ["iter: 8->10"], evaluating ...
        -> worse: (2.1498025 [based on 2 runs with cutoff 60.0])
    Changing ["iter: 8->3"], evaluating ...
        -> worse: (2.1329149999999997 [based on 2 runs with cutoff 60.0])
    Changing ["rad: 4->5"], evaluating ...
        -> worse: (2.1430825000000002 [based on 2 runs with cutoff 60.0])
    Changing ["eps: 0.5->1"], evaluating ...
        -> worse: (2.147119 [based on 2 runs with cutoff 60.0])
    Changing ["N: 60->120"], evaluating ...
620/100000000, 8393.062274000004/21600.0
        -> worse: (5.304166 [based on 2 runs with cutoff 60.0])
    Changing ["step: 10.0->0.5"], evaluating ...
        -> worse: (2.258693 [based on 2 runs with cutoff 60.0])
    Changing ["iter: 8->12"], evaluating ...
        -> worse: (2.1606085 [based on 2 runs with cutoff 60.0])
    Changing ["rad: 4->2"], evaluating ...
626/100000000, 8457.638498000004/21600.0
        -> worse: (12.537922400000001 [based on 5 runs with cutoff 60.0])
    Changing ["iter: 8->5"], evaluating ...
        -> worse: (2.156575 [based on 2 runs with cutoff 60.0])
    Changing ["rad: 4->3"], evaluating ...
631/100000000, 8525.774709000005/21600.0
        -> worse: (121.67778840000001 [based on 5 runs with cutoff 60.0])
    Changing ["N: 60->10"], evaluating ...
        -> worse: (300.76210403630006 [based on 2 runs with cutoff 60.0])
    Changing ["N: 60->90"], evaluating ...
        -> worse: (3.53008 [based on 2 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.75"], evaluating ...
        -> worse: (2.145364 [based on 2 runs with cutoff 60.0])
    Changing ["N: 60->45"], evaluating ...
        -> worse: (2.3488759999999997 [based on 2 runs with cutoff 60.0])
    Changing ["step: 10.0->1.0"], evaluating ...
636/100000000, 8537.312978000005/21600.0
        -> worse: (2.1527165 [based on 2 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.25"], evaluating ...
        -> worse: (2.1132145 [based on 2 runs with cutoff 60.0])
    Changing ["freq: 100->2"], evaluating ...
        -> worse: (301.49189486190005 [based on 2 runs with cutoff 60.0])
    Changing ["freq: 100->50"], evaluating ...
        -> worse: (102.24510950000001 [based on 6 runs with cutoff 60.0])
    Changing ["freq: 100->20"], evaluating ...
        -> worse: (3.2350155000000003 [based on 2 runs with cutoff 60.0])
    Changing ["rad: 4->1"], evaluating ...
641/100000000, 8549.544753000006/21600.0
        -> worse: (25.380104000000003 [based on 2 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.1"], evaluating ...
        -> worse: (2.0967705 [based on 2 runs with cutoff 60.0])
    Changing ["step: 10.0->8.0"], evaluating ...
        -> worse: (3.0871123333333337 [based on 3 runs with cutoff 60.0])
    Changing ["N: 60->15"], evaluating ...
644/100000000, 8616.551310000004/21600.0
        -> worse: (201.08916466666673 [based on 6 runs with cutoff 60.0])
    Changing ["freq: 100->10"], evaluating ...
        -> worse: (30.005863499999997 [based on 2 runs with cutoff 60.0])
    Changing ["N: 60->30"], evaluating ...
        -> worse: (300.97117692230006 [based on 2 runs with cutoff 60.0])
    Changing ["step: 10.0->4.0"], evaluating ...
        -> worse: (77.66710150000002 [based on 8 runs with cutoff 60.0])
          
============= Performing 29 bonus runs of state: N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (69.83774258181818 [based on 55 runs with cutoff 60.0]) ============ 

648/100000000, 8685.002596000004/21600.0
 Same incumbent, new precision:
New Incumbent: 8685.002596000004, 79.30510610714285 [56, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 8687.723172000004, 77.9615178596491 [57, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 8689.624918000003, 76.6501424827586 [58, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 8691.404428000003, 75.3811487118644 [59, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 8693.461284000003, 74.15907716666666 [60, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
653/100000000, 8695.447822000002/21600.0
 Same incumbent, new precision:
New Incumbent: 8695.447822000002, 72.97592078688524 [61, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
654/100000000, 8712.350987000002/21600.0
 Same incumbent, new precision:
New Incumbent: 8712.350987000002, 72.07152149999999 [62, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
655/100000000, 8772.350987000002/21600.0
 Same incumbent, new precision:
New Incumbent: 8772.350987000002, 80.45149893650793 [63, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 8776.631550000002, 79.2613280625 [64, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
657/100000000, 8836.631550000002/21600.0
 Same incumbent, new precision:
New Incumbent: 8836.631550000002, 87.27284763076923 [65, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 8839.325789000002, 85.99135356060607 [66, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
659/100000000, 8899.325789000002/21600.0
 Same incumbent, new precision:
New Incumbent: 8899.325789000002, 93.6631258955224 [67, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 8900.949319000003, 92.3096024264706 [68, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 8902.779978000002, 90.99831339130436 [69, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 8906.766972000003, 89.75529454285716 [70, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
663/100000000, 8910.701548000003/21600.0
 Same incumbent, new precision:
New Incumbent: 8910.701548000003, 88.54655202816902 [71, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 8913.435157000004, 87.35470559722222 [72, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
665/100000000, 8973.435157000004/21600.0
 Same incumbent, new precision:
New Incumbent: 8973.435157000004, 94.37738223287673 [73, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 8976.837057000004, 93.14798382432433 [74, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 8979.505903000005, 91.94159532 [75, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 8981.332254000004, 90.75586842105263 [76, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
669/100000000, 8984.054176000005/21600.0
 Same incumbent, new precision:
New Incumbent: 8984.054176000005, 89.61257041558441 [77, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 8985.887927000005, 88.48720093589743 [78, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 8988.497561000006, 87.40014312658228 [79, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 8990.174509000006, 86.32860318750001 [80, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 8992.265175000006, 85.28862865432099 [81, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
674/100000000, 8995.011156000006/21600.0
 Same incumbent, new precision:
New Incumbent: 8995.011156000006, 84.28201100000001 [82, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 8998.588144000007, 83.3096613253012 [83, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
 Same incumbent, new precision:
New Incumbent: 9000.553686000007, 82.34127895238096 [84, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
          -> After 29 bonus runs for LM: N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])

   LM for iteration 7: N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 7): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 7): N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
==================================================================
Training quality of this incumbent parameter configuration: 82.34127895238096, based on 84 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
LM better, change incumbent
New Incumbent: 9000.553686000007, 82.34127895238096 [84, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
same state as last ILS: N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
676/100000000, 9000.553686000007/21600.0
iteration 8, flip 25, evaluation count 676
    perturb to ---> N=60 eps=0.5 freq=100 iter=5 rad=4 step=10.0 (2.156575 [based on 2 runs with cutoff 60.0])
    perturb to ---> N=60 eps=0.5 freq=50 iter=5 rad=4 step=10.0 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> N=60 eps=0.5 freq=5 iter=5 rad=4 step=10.0 (100000000 [based on 0 runs with cutoff 0])
677/100000000, 9060.553686000007/21600.0
   BLS in iteration 8, start with N=60 eps=0.5 freq=5 iter=5 rad=4 step=10.0 (600.0092626955001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 5->10"], evaluating ...
          -> Take improving step to neighbour N=60 eps=0.5 freq=10 iter=5 rad=4 step=10.0 (6.199228 [based on 1 runs with cutoff 60.0]) with flip 25

          
============= Performing 1 bonus runs of state: N=60 eps=0.5 freq=10 iter=5 rad=4 step=10.0 (6.199228 [based on 1 runs with cutoff 60.0]) ============ 

          -> After 1 bonus runs: N=60 eps=0.5 freq=10 iter=5 rad=4 step=10.0 (4.441227 [based on 2 runs with cutoff 60.0])

    Changing ["N: 60->15"], evaluating ...
680/100000000, 9114.668812000005/21600.0
        -> worse: (45.232672 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->1"], evaluating ...
          -> Take improving step to neighbour N=60 eps=0.5 freq=10 iter=5 rad=1 step=10.0 (3.631802 [based on 2 runs with cutoff 60.0]) with flip 26

          
============= Performing 2 bonus runs of state: N=60 eps=0.5 freq=10 iter=5 rad=1 step=10.0 (3.631802 [based on 2 runs with cutoff 60.0]) ============ 

684/100000000, 9126.496285000005/21600.0
          -> After 2 bonus runs: N=60 eps=0.5 freq=10 iter=5 rad=1 step=10.0 (2.9568682500000003 [based on 4 runs with cutoff 60.0])

    Changing ["N: 60->90"], evaluating ...
        -> worse: (4.022549 [based on 2 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.1"], evaluating ...
687/100000000, 9137.262265000005/21600.0
        -> worse: (3.8238529999999997 [based on 3 runs with cutoff 60.0])
    Changing ["freq: 10->2"], evaluating ...
690/100000000, 9206.012942000005/21600.0
        -> worse: (600.0092912560001 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 5->10"], evaluating ...
          -> Take improving step to neighbour N=60 eps=0.5 freq=10 iter=10 rad=1 step=10.0 (2.46481525 [based on 4 runs with cutoff 60.0]) with flip 27

          
============= Performing 4 bonus runs of state: N=60 eps=0.5 freq=10 iter=10 rad=1 step=10.0 (2.46481525 [based on 4 runs with cutoff 60.0]) ============ 

695/100000000, 9225.928617000005/21600.0
697/100000000, 9287.806867000005/21600.0
          -> After 4 bonus runs: N=60 eps=0.5 freq=10 iter=10 rad=1 step=10.0 (78.22046287500002 [based on 8 runs with cutoff 60.0])

    Changing ["freq: 10->50"], evaluating ...
        -> worse: (4.414859 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 1->4"], evaluating ...
700/100000000, 9298.697187000005/21600.0
        -> worse: (2.515783 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.1"], evaluating ...
        -> worse: (2.578676 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->45"], evaluating ...
        -> worse: (2.36828 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 1->2"], evaluating ...
        -> worse: (3.139986 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 10->3"], evaluating ...
704/100000000, 9309.609316000005/21600.0
        -> worse: (2.825187 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 10->100"], evaluating ...
705/100000000, 9326.082847000005/21600.0
        -> worse: (16.473531 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 10->5"], evaluating ...
710/100000000, 9372.174984000007/21600.0
        -> worse: (9.2184274 [based on 5 runs with cutoff 60.0])
    Changing ["iter: 10->8"], evaluating ...
        -> worse: (2.6278633333333334 [based on 3 runs with cutoff 60.0])
    Changing ["rad: 1->5"], evaluating ...
714/100000000, 9382.585154000008/21600.0
        -> worse: (2.52658 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 10->500"], evaluating ...
715/100000000, 9405.892338000007/21600.0
        -> worse: (23.307184 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->1.0"], evaluating ...
        -> worse: (2.913289 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->30"], evaluating ...
717/100000000, 9468.805627000007/21600.0
        -> worse: (600.0092776022001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->120"], evaluating ...
718/100000000, 9518.993468000008/21600.0
        -> worse: (50.187841 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->4.0"], evaluating ...
        -> worse: (2.558566 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->15"], evaluating ...
724/100000000, 9588.067698000008/21600.0
        -> worse: (121.30315280000002 [based on 5 runs with cutoff 60.0])
    Changing ["step: 10.0->0.5"], evaluating ...
        -> worse: (3.552217 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 10->2"], evaluating ...
726/100000000, 9651.619915000008/21600.0
        -> worse: (600.0092581305001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->90"], evaluating ...
        -> worse: (4.045699 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->1"], evaluating ...
        -> worse: (3.378506 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 10->200"], evaluating ...
729/100000000, 9669.386091000008/21600.0
        -> worse: (10.341971 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 10->12"], evaluating ...
        -> worse: (2.48522875 [based on 4 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.25"], evaluating ...
734/100000000, 9682.23738400001/21600.0
        -> worse: (2.910378 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 10->1"], evaluating ...
735/100000000, 9742.23738400001/21600.0
        -> worse: (600.0092587636001 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.75"], evaluating ...
740/100000000, 9811.673606000008/21600.0
        -> worse: (121.88726440000002 [based on 5 runs with cutoff 60.0])
    Changing ["rad: 1->3"], evaluating ...
        -> worse: (4.676609 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->10"], evaluating ...
745/100000000, 9822.317954000006/21600.0
746/100000000, 9882.317954000006/21600.0
        -> worse: (121.19356780000003 [based on 5 runs with cutoff 60.0])
    Changing ["step: 10.0->8.0"], evaluating ...
        -> worse: (3.191742 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 10->20"], evaluating ...
        -> worse: (3.749408 [based on 1 runs with cutoff 60.0])
          
============= Performing 29 bonus runs of state: N=60 eps=0.5 freq=10 iter=10 rad=1 step=10.0 (78.22046287500002 [based on 8 runs with cutoff 60.0]) ============ 

750/100000000, 9893.208666000006/21600.0
752/100000000, 9903.542015000006/21600.0
753/100000000, 9963.542015000006/21600.0
755/100000000, 10026.130349000006/21600.0
759/100000000, 10093.360563000006/21600.0
763/100000000, 10161.880933000006/21600.0
764/100000000, 10221.880933000006/21600.0
766/100000000, 10234.219940000006/21600.0
769/100000000, 10299.685097000005/21600.0
772/100000000, 10313.276927000004/21600.0
773/100000000, 10373.276927000004/21600.0
          -> After 29 bonus runs for LM: N=60 eps=0.5 freq=10 iter=10 rad=1 step=10.0 (132.41153434472434 [based on 37 runs with cutoff 60.0])

   LM for iteration 8: N=60 eps=0.5 freq=10 iter=10 rad=1 step=10.0 (132.41153434472434 [based on 37 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 8): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 8): N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
==================================================================
Training quality of this incumbent parameter configuration: 82.34127895238096, based on 84 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
N=60 eps=0.5 freq=10 iter=10 rad=1 step=10.0 (132.41153434472434 [based on 37 runs with cutoff 60.0])
N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
Incumbent better, keeping it
rejecting worse N=60 eps=0.5 freq=10 iter=10 rad=1 step=10.0 (132.41153434472434 [based on 37 runs with cutoff 60.0]), going back to N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
777/100000000, 10382.672360000004/21600.0
iteration 9, flip 29, evaluation count 777
    perturb to ---> N=60 eps=0.5 freq=100 iter=8 rad=4 step=4.0 (77.66710150000002 [based on 8 runs with cutoff 60.0])
    perturb to ---> N=15 eps=0.5 freq=100 iter=8 rad=4 step=4.0 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> N=15 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (201.08916466666673 [based on 6 runs with cutoff 60.0])
778/100000000, 10442.672360000004/21600.0
   BLS in iteration 9, start with N=15 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (258.0778697142858 [based on 7 runs with cutoff 60.0])
    Changing ["iter: 8->5"], evaluating ...
        -> worse: (2.151594 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->2"], evaluating ...
780/100000000, 10488.842484000004/21600.0
        -> worse: (44.01853 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.1"], evaluating ...
        -> worse: (2.161162 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->10"], evaluating ...
        -> worse: (3.09439 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->12"], evaluating ...
        -> worse: (2.54388 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->20"], evaluating ...
785/100000000, 10499.941819000005/21600.0
788/100000000, 10563.140389000006/21600.0
789/100000000, 10623.140389000006/21600.0
790/100000000, 10683.140389000006/21600.0
          -> Take improving step to neighbour N=15 eps=0.5 freq=20 iter=8 rad=4 step=10.0 (258.07268185714287 [based on 7 runs with cutoff 60.0]) with flip 29

          
============= Performing 6 bonus runs of state: N=15 eps=0.5 freq=20 iter=8 rad=4 step=10.0 (258.07268185714287 [based on 7 runs with cutoff 60.0]) ============ 

796/100000000, 10752.471762000006/21600.0
          -> After 6 bonus runs: N=15 eps=0.5 freq=20 iter=8 rad=4 step=10.0 (185.8338650769231 [based on 13 runs with cutoff 60.0])

    Changing ["N: 15->90"], evaluating ...
797/100000000, 10765.652557000007/21600.0
        -> worse: (13.180795 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->1.0"], evaluating ...
        -> worse: (1.717736 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->0.5"], evaluating ...
        -> worse: (1.6530703333333332 [based on 3 runs with cutoff 60.0])
    Changing ["iter: 8->10"], evaluating ...
        -> worse: (1.65318 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->5"], evaluating ...
803/100000000, 10777.056077000007/21600.0
        -> worse: (3.073393 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->200"], evaluating ...
        -> worse: (2.348067 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->1"], evaluating ...
805/100000000, 10796.453237000007/21600.0
        -> worse: (17.049093 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->8.0"], evaluating ...
        -> worse: (1.683991 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->5"], evaluating ...
        -> worse: (2.391532 [based on 1 runs with cutoff 60.0])
    Changing ["N: 15->30"], evaluating ...
808/100000000, 10860.528760000007/21600.0
        -> worse: (600.0092542325001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 15->120"], evaluating ...
        -> worse: (3.968444 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->4.0"], evaluating ...
        -> worse: (3.987001 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->5"], evaluating ...
811/100000000, 10928.484205000006/21600.0
        -> worse: (600.0092404490001 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->2"], evaluating ...
812/100000000, 10988.484205000006/21600.0
        -> worse: (600.0092127672001 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->3"], evaluating ...
        -> worse: (1.703765 [based on 1 runs with cutoff 60.0])
    Changing ["N: 15->60"], evaluating ...
        -> worse: (3.2811540000000003 [based on 3 runs with cutoff 60.0])
    Changing ["N: 15->10"], evaluating ...
815/100000000, 11053.561401000006/21600.0
        -> worse: (600.0092352325 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.75"], evaluating ...
818/100000000, 11116.532881000006/21600.0
        -> worse: (200.99386000000004 [based on 3 runs with cutoff 60.0])
    Changing ["freq: 20->10"], evaluating ...
        -> worse: (1.605071 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.25"], evaluating ...
        -> worse: (1.673695 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->3"], evaluating ...
        -> worse: (1.686292 [based on 3 runs with cutoff 60.0])
    Changing ["rad: 4->1"], evaluating ...
825/100000000, 11127.854919000007/21600.0
826/100000000, 11187.854919000007/21600.0
        -> worse: (200.99816533333333 [based on 3 runs with cutoff 60.0])
    Changing ["freq: 20->2"], evaluating ...
827/100000000, 11247.854919000007/21600.0
        -> worse: (600.0093100732001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->500"], evaluating ...
        -> worse: (2.332523 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.1"], evaluating ...
829/100000000, 11272.749983000005/21600.0
        -> worse: (22.562541 [based on 1 runs with cutoff 60.0])
    Changing ["N: 15->45"], evaluating ...
        -> worse: (2.037304 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->1"], evaluating ...
831/100000000, 11334.787287000005/21600.0
        -> worse: (600.0092115311002 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->50"], evaluating ...
        -> worse: (1.611497 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->12"], evaluating ...
833/100000000, 11346.130985000005/21600.0
        -> worse: (9.732201 [based on 1 runs with cutoff 60.0])
          
============= Performing 29 bonus runs of state: N=15 eps=0.5 freq=20 iter=8 rad=4 step=10.0 (185.8338650769231 [based on 13 runs with cutoff 60.0]) ============ 

835/100000000, 11407.776861000006/21600.0
839/100000000, 11472.510763000006/21600.0
840/100000000, 11532.510763000006/21600.0
843/100000000, 11595.654836000005/21600.0
844/100000000, 11655.654836000005/21600.0
845/100000000, 11715.654836000005/21600.0
846/100000000, 11775.654836000005/21600.0
847/100000000, 11786.167753000005/21600.0
849/100000000, 11847.668114000006/21600.0
852/100000000, 11910.987257000004/21600.0
853/100000000, 11970.987257000004/21600.0
856/100000000, 12034.243296000004/21600.0
858/100000000, 12095.812702000005/21600.0
862/100000000, 12163.480855000003/21600.0
          -> After 29 bonus runs for LM: N=15 eps=0.5 freq=20 iter=8 rad=4 step=10.0 (244.1250153293047 [based on 42 runs with cutoff 60.0])

   LM for iteration 9: N=15 eps=0.5 freq=20 iter=8 rad=4 step=10.0 (244.1250153293047 [based on 42 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 9): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 9): N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
==================================================================
Training quality of this incumbent parameter configuration: 82.34127895238096, based on 84 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
N=15 eps=0.5 freq=20 iter=8 rad=4 step=10.0 (244.1250153293047 [based on 42 runs with cutoff 60.0])
N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
Incumbent better, keeping it
rejecting worse N=15 eps=0.5 freq=20 iter=8 rad=4 step=10.0 (244.1250153293047 [based on 42 runs with cutoff 60.0]), going back to N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
862/100000000, 12163.480855000003/21600.0
iteration 10, flip 31, evaluation count 862
    perturb to ---> N=60 eps=0.5 freq=100 iter=8 rad=4 step=1.0 (2.1527165 [based on 2 runs with cutoff 60.0])
    perturb to ---> N=15 eps=0.5 freq=100 iter=8 rad=4 step=1.0 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> N=15 eps=0.5 freq=100 iter=8 rad=3 step=1.0 (100000000 [based on 0 runs with cutoff 0])
863/100000000, 12223.480855000003/21600.0
   BLS in iteration 10, start with N=15 eps=0.5 freq=100 iter=8 rad=3 step=1.0 (600.0092078170001 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->12"], evaluating ...
864/100000000, 12283.480855000003/21600.0
          -> Take improving step to neighbour N=15 eps=0.5 freq=100 iter=12 rad=3 step=1.0 (600.0092150468001 [based on 1 runs with cutoff 60.0]) with flip 31

          
============= Performing 1 bonus runs of state: N=15 eps=0.5 freq=100 iter=12 rad=3 step=1.0 (600.0092150468001 [based on 1 runs with cutoff 60.0]) ============ 

          -> After 1 bonus runs: N=15 eps=0.5 freq=100 iter=12 rad=3 step=1.0 (300.8293270234001 [based on 2 runs with cutoff 60.0])

    Changing ["freq: 100->20"], evaluating ...
          -> Take improving step to neighbour N=15 eps=0.5 freq=20 iter=12 rad=3 step=1.0 (2.2339375 [based on 2 runs with cutoff 60.0]) with flip 32

          
============= Performing 1 bonus runs of state: N=15 eps=0.5 freq=20 iter=12 rad=3 step=1.0 (2.2339375 [based on 2 runs with cutoff 60.0]) ============ 

          -> After 1 bonus runs: N=15 eps=0.5 freq=20 iter=12 rad=3 step=1.0 (1.9527776666666667 [based on 3 runs with cutoff 60.0])

    Changing ["rad: 3->5"], evaluating ...
869/100000000, 12350.988627000002/21600.0
        -> worse: (600.0092394149001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->5"], evaluating ...
        -> worse: (4.230802 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->50"], evaluating ...
871/100000000, 12386.241807000002/21600.0
        -> worse: (31.022378 [based on 1 runs with cutoff 60.0])
    Changing ["step: 1.0->0.5"], evaluating ...
872/100000000, 12446.241807000002/21600.0
        -> worse: (600.0092716336001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->2"], evaluating ...
873/100000000, 12506.241807000002/21600.0
        -> worse: (600.0092533917001 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 3->1"], evaluating ...
          -> Take improving step to neighbour N=15 eps=0.5 freq=20 iter=12 rad=1 step=1.0 (1.6574710000000001 [based on 3 runs with cutoff 60.0]) with flip 33

          
============= Performing 6 bonus runs of state: N=15 eps=0.5 freq=20 iter=12 rad=1 step=1.0 (1.6574710000000001 [based on 3 runs with cutoff 60.0]) ============ 

878/100000000, 12572.726363000003/21600.0
880/100000000, 12634.090923000003/21600.0
          -> After 6 bonus runs: N=15 eps=0.5 freq=20 iter=12 rad=1 step=1.0 (134.75731866666666 [based on 9 runs with cutoff 60.0])

    Changing ["freq: 20->5"], evaluating ...
        -> worse: (1.552257 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->1"], evaluating ...
884/100000000, 12700.599732000002/21600.0
        -> worse: (600.0092933220001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->50"], evaluating ...
885/100000000, 12760.599732000002/21600.0
        -> worse: (600.0092537528001 [based on 1 runs with cutoff 60.0])
    Changing ["step: 1.0->4.0"], evaluating ...
        -> worse: (1.609285 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->1"], evaluating ...
        -> worse: (1.589522 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->10"], evaluating ...
        -> worse: (1.437232 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 1->4"], evaluating ...
        -> worse: (3.212555 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 12->8"], evaluating ...
        -> worse: (1.463199 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.1"], evaluating ...
891/100000000, 12771.708297000003/21600.0
        -> worse: (1.796772 [based on 1 runs with cutoff 60.0])
    Changing ["N: 15->120"], evaluating ...
        -> worse: (8.033312 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 12->3"], evaluating ...
893/100000000, 12839.741609000002/21600.0
        -> worse: (600.0092824395001 [based on 1 runs with cutoff 60.0])
    Changing ["step: 1.0->0.5"], evaluating ...
        -> worse: (1.748924 [based on 1 runs with cutoff 60.0])
    Changing ["step: 1.0->8.0"], evaluating ...
        -> worse: (4.358913 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->100"], evaluating ...
        -> worse: (1.972045 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.75"], evaluating ...
        -> worse: (1.462972 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.25"], evaluating ...
898/100000000, 12852.734323000002/21600.0
        -> worse: (3.44986 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 12->10"], evaluating ...
        -> worse: (1.7081290000000002 [based on 3 runs with cutoff 60.0])
    Changing ["N: 15->30"], evaluating ...
        -> worse: (2.700185 [based on 1 runs with cutoff 60.0])
    Changing ["N: 15->60"], evaluating ...
903/100000000, 12863.213878000004/21600.0
        -> worse: (2.654983 [based on 1 runs with cutoff 60.0])
    Changing ["N: 15->45"], evaluating ...
904/100000000, 12923.213878000004/21600.0
        -> worse: (600.0092068363001 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 1->2"], evaluating ...
        -> worse: (2.127555 [based on 1 runs with cutoff 60.0])
    Changing ["N: 15->90"], evaluating ...
906/100000000, 12963.409289000003/21600.0
        -> worse: (38.067856 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->2"], evaluating ...
907/100000000, 13023.409289000003/21600.0
        -> worse: (600.0092339144 [based on 1 runs with cutoff 60.0])
    Changing ["N: 15->10"], evaluating ...
        -> worse: (1.430217 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 12->5"], evaluating ...
        -> worse: (1.488718 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->200"], evaluating ...
910/100000000, 13086.328224000003/21600.0
        -> worse: (600.0092123270001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->500"], evaluating ...
911/100000000, 13146.328224000003/21600.0
        -> worse: (600.0092604284 [based on 1 runs with cutoff 60.0])
    Changing ["step: 1.0->10.0"], evaluating ...
912/100000000, 13206.328224000003/21600.0
        -> worse: (600.0092555441001 [based on 1 runs with cutoff 60.0])
          
============= Performing 28 bonus runs of state: N=15 eps=0.5 freq=20 iter=12 rad=1 step=1.0 (134.75731866666666 [based on 9 runs with cutoff 60.0]) ============ 

916/100000000, 13275.692027000003/21600.0
918/100000000, 13313.977039000003/21600.0
923/100000000, 13325.816873000003/21600.0
926/100000000, 13388.870942000003/21600.0
927/100000000, 13448.870942000003/21600.0
929/100000000, 13510.204171000003/21600.0
932/100000000, 13573.609262000002/21600.0
936/100000000, 13639.417956000003/21600.0
          -> After 28 bonus runs for LM: N=15 eps=0.5 freq=20 iter=12 rad=1 step=1.0 (132.27060745945948 [based on 37 runs with cutoff 60.0])

   LM for iteration 10: N=15 eps=0.5 freq=20 iter=12 rad=1 step=1.0 (132.27060745945948 [based on 37 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 10): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 10): N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
==================================================================
Training quality of this incumbent parameter configuration: 82.34127895238096, based on 84 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
N=15 eps=0.5 freq=20 iter=12 rad=1 step=1.0 (132.27060745945948 [based on 37 runs with cutoff 60.0])
N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
Incumbent better, keeping it
rejecting worse N=15 eps=0.5 freq=20 iter=12 rad=1 step=1.0 (132.27060745945948 [based on 37 runs with cutoff 60.0]), going back to N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
940/100000000, 13647.494232000003/21600.0
iteration 11, flip 35, evaluation count 940
    perturb to ---> N=60 eps=0.5 freq=100 iter=8 rad=4 step=8.0 (3.0871123333333337 [based on 3 runs with cutoff 60.0])
    perturb to ---> N=45 eps=0.5 freq=100 iter=8 rad=4 step=8.0 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> N=45 eps=0.25 freq=100 iter=8 rad=4 step=8.0 (100000000 [based on 0 runs with cutoff 0])
941/100000000, 13649.732795000004/21600.0
   BLS in iteration 11, start with N=45 eps=0.25 freq=100 iter=8 rad=4 step=8.0 (2.238563 [based on 1 runs with cutoff 60.0])
    Changing ["N: 45->60"], evaluating ...
        -> worse: (2.255674 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->20"], evaluating ...
        -> worse: (2.401396 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.25->0.1"], evaluating ...
          -> Take improving step to neighbour N=45 eps=0.1 freq=100 iter=8 rad=4 step=8.0 (2.150634 [based on 1 runs with cutoff 60.0]) with flip 35

          
============= Performing 3 bonus runs of state: N=45 eps=0.1 freq=100 iter=8 rad=4 step=8.0 (2.150634 [based on 1 runs with cutoff 60.0]) ============ 

946/100000000, 13662.679462000002/21600.0
          -> After 3 bonus runs: N=45 eps=0.1 freq=100 iter=8 rad=4 step=8.0 (2.46380275 [based on 4 runs with cutoff 60.0])

    Changing ["N: 45->15"], evaluating ...
          -> Take improving step to neighbour N=15 eps=0.1 freq=100 iter=8 rad=4 step=8.0 (1.67694275 [based on 4 runs with cutoff 60.0]) with flip 36

          
============= Performing 1 bonus runs of state: N=15 eps=0.1 freq=100 iter=8 rad=4 step=8.0 (1.67694275 [based on 4 runs with cutoff 60.0]) ============ 

952/100000000, 13730.952847000002/21600.0
          -> After 1 bonus runs: N=15 eps=0.1 freq=100 iter=8 rad=4 step=8.0 (121.34157420000001 [based on 5 runs with cutoff 60.0])

    Changing ["N: 15->120"], evaluating ...
953/100000000, 13743.277009000003/21600.0
        -> worse: (12.324162 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->2"], evaluating ...
        -> worse: (4.645391 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->20"], evaluating ...
955/100000000, 13763.585997000004/21600.0
        -> worse: (15.663597 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->5"], evaluating ...
956/100000000, 13823.585997000004/21600.0
        -> worse: (600.0092707984002 [based on 1 runs with cutoff 60.0])
    Changing ["step: 8.0->10.0"], evaluating ...
960/100000000, 13887.922930000004/21600.0
          -> Take improving step to neighbour N=15 eps=0.1 freq=100 iter=8 rad=4 step=10.0 (121.29963900000003 [based on 5 runs with cutoff 60.0]) with flip 37

          
============= Performing 5 bonus runs of state: N=15 eps=0.1 freq=100 iter=8 rad=4 step=10.0 (121.29963900000003 [based on 5 runs with cutoff 60.0]) ============ 

961/100000000, 13947.922930000004/21600.0
962/100000000, 14007.922930000004/21600.0
963/100000000, 14067.922930000004/21600.0
          -> After 5 bonus runs: N=15 eps=0.1 freq=100 iter=8 rad=4 step=10.0 (240.96493350000006 [based on 10 runs with cutoff 60.0])

    Changing ["step: 10.0->1.0"], evaluating ...
        -> worse: (1.882187 [based on 2 runs with cutoff 60.0])
    Changing ["freq: 100->10"], evaluating ...
968/100000000, 14115.972926000004/21600.0
        -> worse: (41.144782 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->1"], evaluating ...
969/100000000, 14145.889728000004/21600.0
        -> worse: (29.916802 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->200"], evaluating ...
        -> worse: (2.326192 [based on 1 runs with cutoff 60.0])
    Changing ["N: 15->10"], evaluating ...
971/100000000, 14208.215920000004/21600.0
        -> worse: (600.0092879661001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->20"], evaluating ...
        -> worse: (12.099666 [based on 2 runs with cutoff 60.0])
    Changing ["iter: 8->12"], evaluating ...
977/100000000, 14276.239893000005/21600.0
978/100000000, 14336.239893000005/21600.0
979/100000000, 14349.284869000005/21600.0
          -> Take improving step to neighbour N=15 eps=0.1 freq=100 iter=12 rad=4 step=10.0 (122.51873180000003 [based on 10 runs with cutoff 60.0]) with flip 38

          
============= Performing 7 bonus runs of state: N=15 eps=0.1 freq=100 iter=12 rad=4 step=10.0 (122.51873180000003 [based on 10 runs with cutoff 60.0]) ============ 

985/100000000, 14418.373555000006/21600.0
987/100000000, 14479.960162000005/21600.0
988/100000000, 14492.077640000005/21600.0
          -> After 7 bonus runs: N=15 eps=0.1 freq=100 iter=12 rad=4 step=10.0 (143.77669200000005 [based on 17 runs with cutoff 60.0])

    Changing ["iter: 12->5"], evaluating ...
        -> worse: (4.430147 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->1"], evaluating ...
991/100000000, 14558.476222000005/21600.0
        -> worse: (600.0092571868001 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.1->0.75"], evaluating ...
996/100000000, 14624.771685000003/21600.0
997/100000000, 14684.771685000003/21600.0
998/100000000, 14744.771685000003/21600.0
        -> worse: (258.04368042857146 [based on 7 runs with cutoff 60.0])
    Changing ["freq: 100->1"], evaluating ...
999/100000000, 14804.771685000003/21600.0
        -> worse: (600.0092267535001 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->8.0"], evaluating ...
        -> worse: (1.7349135 [based on 2 runs with cutoff 60.0])
    Changing ["step: 10.0->1.0"], evaluating ...
        -> worse: (1.878597 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.1->1"], evaluating ...
1003/100000000, 14814.887014000005/21600.0
        -> worse: (4.766905 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->500"], evaluating ...
        -> worse: (2.347668 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->0.5"], evaluating ...
        -> worse: (1.767779 [based on 2 runs with cutoff 60.0])
    Changing ["N: 15->90"], evaluating ...
        -> worse: (3.44674 [based on 1 runs with cutoff 60.0])
    Changing ["N: 15->30"], evaluating ...
1008/100000000, 14884.216980000005/21600.0
        -> worse: (600.009214322 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 12->10"], evaluating ...
1009/100000000, 14944.216980000005/21600.0
        -> worse: (600.0092004854001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->200"], evaluating ...
        -> worse: (2.313009 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.1->0.25"], evaluating ...
        -> worse: (1.983013 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->5"], evaluating ...
1012/100000000, 15008.513002000003/21600.0
        -> worse: (600.0092127490001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->50"], evaluating ...
        -> worse: (1.63502825 [based on 4 runs with cutoff 60.0])
    Changing ["rad: 4->5"], evaluating ...
1017/100000000, 15075.053115000004/21600.0
        -> worse: (600.0092431349001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->20"], evaluating ...
        -> worse: (1.73017975 [based on 4 runs with cutoff 60.0])
    Changing ["rad: 4->3"], evaluating ...
1022/100000000, 15141.973834000004/21600.0
        -> worse: (600.0092045993001 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.1->0.5"], evaluating ...
        -> worse: (2.0777780000000003 [based on 2 runs with cutoff 60.0])
    Changing ["N: 15->45"], evaluating ...
        -> worse: (2.248814 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 12->3"], evaluating ...
1025/100000000, 15205.834324000005/21600.0
        -> worse: (600.0092313381001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 15->10"], evaluating ...
1026/100000000, 15265.834324000005/21600.0
        -> worse: (600.0092709553 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->2"], evaluating ...
1027/100000000, 15325.834324000005/21600.0
        -> worse: (600.0092693292002 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->2"], evaluating ...
1028/100000000, 15336.843025000006/21600.0
        -> worse: (11.008701 [based on 1 runs with cutoff 60.0])
    Changing ["N: 15->120"], evaluating ...
        -> worse: (6.159983 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->10"], evaluating ...
1030/100000000, 15349.501340000004/21600.0
        -> worse: (6.498332 [based on 1 runs with cutoff 60.0])
    Changing ["N: 15->60"], evaluating ...
        -> worse: (2.20942 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->4.0"], evaluating ...
1036/100000000, 15417.923599000005/21600.0
1037/100000000, 15477.923599000005/21600.0
1038/100000000, 15537.923599000005/21600.0
        -> worse: (258.031877 [based on 7 runs with cutoff 60.0])
          
============= Performing 29 bonus runs of state: N=15 eps=0.1 freq=100 iter=12 rad=4 step=10.0 (143.77669200000005 [based on 17 runs with cutoff 60.0]) ============ 

1040/100000000, 15598.748194000005/21600.0
1044/100000000, 15663.071900000006/21600.0
1045/100000000, 15723.071900000006/21600.0
1046/100000000, 15783.071900000006/21600.0
1047/100000000, 15843.071900000006/21600.0
1050/100000000, 15906.852223000007/21600.0
1054/100000000, 15971.946410000006/21600.0
1057/100000000, 16035.140307000005/21600.0
1060/100000000, 16049.782486000006/21600.0
1063/100000000, 16069.230092000005/21600.0
1065/100000000, 16130.175557000006/21600.0
1067/100000000, 16191.889872000005/21600.0
          -> After 29 bonus runs for LM: N=15 eps=0.1 freq=100 iter=12 rad=4 step=10.0 (184.74370080431095 [based on 46 runs with cutoff 60.0])

   LM for iteration 11: N=15 eps=0.1 freq=100 iter=12 rad=4 step=10.0 (184.74370080431095 [based on 46 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 11): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 11): N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
==================================================================
Training quality of this incumbent parameter configuration: 82.34127895238096, based on 84 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
N=15 eps=0.1 freq=100 iter=12 rad=4 step=10.0 (184.74370080431095 [based on 46 runs with cutoff 60.0])
N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
Incumbent better, keeping it
rejecting worse N=15 eps=0.1 freq=100 iter=12 rad=4 step=10.0 (184.74370080431095 [based on 46 runs with cutoff 60.0]), going back to N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
1067/100000000, 16191.889872000005/21600.0
iteration 12, flip 40, evaluation count 1067
    perturb to ---> N=15 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (258.0778697142858 [based on 7 runs with cutoff 60.0])
    perturb to ---> N=15 eps=0.5 freq=2 iter=8 rad=4 step=10.0 (600.0093100732001 [based on 1 runs with cutoff 60.0])
    perturb to ---> N=30 eps=0.5 freq=2 iter=8 rad=4 step=10.0 (100000000 [based on 0 runs with cutoff 0])
1068/100000000, 16251.889872000005/21600.0
   BLS in iteration 12, start with N=30 eps=0.5 freq=2 iter=8 rad=4 step=10.0 (600.0093013114001 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->5"], evaluating ...
1069/100000000, 16311.889872000005/21600.0
          -> Take improving step to neighbour N=30 eps=0.5 freq=2 iter=8 rad=5 step=10.0 (600.0093013114001 [based on 1 runs with cutoff 60.0]) with flip 40

          
============= Performing 1 bonus runs of state: N=30 eps=0.5 freq=2 iter=8 rad=5 step=10.0 (600.0093013114001 [based on 1 runs with cutoff 60.0]) ============ 

          -> After 1 bonus runs: N=30 eps=0.5 freq=2 iter=8 rad=5 step=10.0 (301.19260015570006 [based on 2 runs with cutoff 60.0])

    Changing ["freq: 2->200"], evaluating ...
1071/100000000, 16374.265771000006/21600.0
          -> Take improving step to neighbour N=30 eps=0.5 freq=200 iter=8 rad=5 step=10.0 (300.67501869280005 [based on 2 runs with cutoff 60.0]) with flip 41

          
============= Performing 1 bonus runs of state: N=30 eps=0.5 freq=200 iter=8 rad=5 step=10.0 (300.67501869280005 [based on 2 runs with cutoff 60.0]) ============ 

          -> After 1 bonus runs: N=30 eps=0.5 freq=200 iter=8 rad=5 step=10.0 (201.15427446186672 [based on 3 runs with cutoff 60.0])

    Changing ["rad: 5->3"], evaluating ...
          -> Take improving step to neighbour N=30 eps=0.5 freq=200 iter=8 rad=3 step=10.0 (1.5065193333333333 [based on 3 runs with cutoff 60.0]) with flip 42

          
============= Performing 1 bonus runs of state: N=30 eps=0.5 freq=200 iter=8 rad=3 step=10.0 (1.5065193333333333 [based on 3 runs with cutoff 60.0]) ============ 

          -> After 1 bonus runs: N=30 eps=0.5 freq=200 iter=8 rad=3 step=10.0 (1.438256 [based on 4 runs with cutoff 60.0])

    Changing ["N: 30->15"], evaluating ...
1078/100000000, 16443.472364000005/21600.0
        -> worse: (600.0092101555001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 200->100"], evaluating ...
        -> worse: (1.784917 [based on 2 runs with cutoff 60.0])
    Changing ["N: 30->90"], evaluating ...
        -> worse: (3.952833 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->8.0"], evaluating ...
        -> worse: (1.773943 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->1"], evaluating ...
1083/100000000, 16454.510815/21600.0
          -> Take improving step to neighbour N=30 eps=1 freq=200 iter=8 rad=3 step=10.0 (1.414962 [based on 4 runs with cutoff 60.0]) with flip 43

          
============= Performing 5 bonus runs of state: N=30 eps=1 freq=200 iter=8 rad=3 step=10.0 (1.414962 [based on 4 runs with cutoff 60.0]) ============ 

1087/100000000, 16518.428822/21600.0
1089/100000000, 16579.931805/21600.0
          -> After 5 bonus runs: N=30 eps=1 freq=200 iter=8 rad=3 step=10.0 (134.44690122222224 [based on 9 runs with cutoff 60.0])

    Changing ["iter: 8->3"], evaluating ...
        -> worse: (1.775293 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 200->100"], evaluating ...
        -> worse: (1.766346 [based on 2 runs with cutoff 60.0])
    Changing ["freq: 200->500"], evaluating ...
1096/100000000, 16591.130775999998/21600.0
        -> worse: (1.520953 [based on 2 runs with cutoff 60.0])
    Changing ["N: 30->60"], evaluating ...
        -> worse: (2.27586 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 3->2"], evaluating ...
        -> worse: (2.828109 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 200->20"], evaluating ...
1099/100000000, 16656.234744999998/21600.0
        -> worse: (600.0092691017 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 3->5"], evaluating ...
1100/100000000, 16716.234744999998/21600.0
        -> worse: (600.0092542738001 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->1.0"], evaluating ...
1105/100000000, 16781.694926999997/21600.0
1107/100000000, 16843.023675999997/21600.0
          -> Take improving step to neighbour N=30 eps=1 freq=200 iter=8 rad=3 step=1.0 (134.40775622222225 [based on 9 runs with cutoff 60.0]) with flip 44

          
============= Performing 8 bonus runs of state: N=30 eps=1 freq=200 iter=8 rad=3 step=1.0 (134.40775622222225 [based on 9 runs with cutoff 60.0]) ============ 

1114/100000000, 16853.39091999999/21600.0
1115/100000000, 16913.39091999999/21600.0
          -> After 8 bonus runs: N=30 eps=1 freq=200 iter=8 rad=3 step=1.0 (107.16031805882353 [based on 17 runs with cutoff 60.0])

    Changing ["iter: 8->10"], evaluating ...
        -> worse: (1.782226 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 200->500"], evaluating ...
        -> worse: (1.795673 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 1->0.1"], evaluating ...
        -> worse: (1.735618 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 200->20"], evaluating ...
1121/100000000, 16978.51170799999/21600.0
        -> worse: (55.258339 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 200->5"], evaluating ...
1122/100000000, 17038.51170799999/21600.0
        -> worse: (600.0092133421001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->60"], evaluating ...
        -> worse: (2.348211 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->12"], evaluating ...
        -> worse: (1.773156 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 200->10"], evaluating ...
        -> worse: (2.290285 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 1->0.25"], evaluating ...
        -> worse: (1.711476 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->45"], evaluating ...
1127/100000000, 17106.63483599999/21600.0
        -> worse: (600.0092150148 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 3->1"], evaluating ...
        -> worse: (2.608201 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->15"], evaluating ...
1129/100000000, 17169.24303699999/21600.0
        -> worse: (600.0092075983001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 200->50"], evaluating ...
        -> worse: (1.663448 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->5"], evaluating ...
        -> worse: (1.738272 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 200->100"], evaluating ...
        -> worse: (1.785334 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->120"], evaluating ...
1133/100000000, 17185.699134999988/21600.0
        -> worse: (11.269044 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 200->2"], evaluating ...
1134/100000000, 17245.699134999988/21600.0
        -> worse: (600.0092343771 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 3->4"], evaluating ...
1135/100000000, 17305.699134999988/21600.0
        -> worse: (600.0092579186002 [based on 1 runs with cutoff 60.0])
    Changing ["step: 1.0->8.0"], evaluating ...
        -> worse: (1.724899 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->3"], evaluating ...
        -> worse: (1.742483 [based on 1 runs with cutoff 60.0])
    Changing ["step: 1.0->4.0"], evaluating ...
        -> worse: (1.776197 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 3->2"], evaluating ...
        -> worse: (2.864217 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->10"], evaluating ...
1140/100000000, 17373.80693099999/21600.0
        -> worse: (600.0092944384 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 3->5"], evaluating ...
1141/100000000, 17433.80693099999/21600.0
        -> worse: (600.0092493702001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->90"], evaluating ...
        -> worse: (4.119616 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 1->0.75"], evaluating ...
        -> worse: (1.782386 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 200->1"], evaluating ...
1144/100000000, 17499.708932999987/21600.0
        -> worse: (600.0092571511001 [based on 1 runs with cutoff 60.0])
    Changing ["step: 1.0->0.5"], evaluating ...
        -> worse: (1.474969 [based on 2 runs with cutoff 60.0])
    Changing ["eps: 1->0.5"], evaluating ...
        -> worse: (1.722534 [based on 1 runs with cutoff 60.0])
          
============= Performing 29 bonus runs of state: N=30 eps=1 freq=200 iter=8 rad=3 step=1.0 (107.16031805882353 [based on 17 runs with cutoff 60.0]) ============ 

1151/100000000, 17510.921759999983/21600.0
1153/100000000, 17572.068824999984/21600.0
1154/100000000, 17632.068824999984/21600.0
1156/100000000, 17693.480955999985/21600.0
1159/100000000, 17714.312599999987/21600.0
1161/100000000, 17775.605606999987/21600.0
1163/100000000, 17843.024107999987/21600.0
1167/100000000, 17855.236000999987/21600.0
1168/100000000, 17915.236000999987/21600.0
1172/100000000, 17980.129067999987/21600.0
1176/100000000, 18044.411148999985/21600.0
          -> After 29 bonus runs for LM: N=30 eps=1 freq=200 iter=8 rad=3 step=1.0 (145.25641461734352 [based on 46 runs with cutoff 60.0])

   LM for iteration 12: N=30 eps=1 freq=200 iter=8 rad=3 step=1.0 (145.25641461734352 [based on 46 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 12): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 12): N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
==================================================================
Training quality of this incumbent parameter configuration: 82.34127895238096, based on 84 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
N=30 eps=1 freq=200 iter=8 rad=3 step=1.0 (145.25641461734352 [based on 46 runs with cutoff 60.0])
N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
Incumbent better, keeping it
rejecting worse N=30 eps=1 freq=200 iter=8 rad=3 step=1.0 (145.25641461734352 [based on 46 runs with cutoff 60.0]), going back to N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
1176/100000000, 18044.411148999985/21600.0
iteration 13, flip 46, evaluation count 1176
    perturb to ---> N=60 eps=0.5 freq=200 iter=8 rad=4 step=10.0 (3.6215946666666667 [based on 3 runs with cutoff 60.0])
    perturb to ---> N=60 eps=0.5 freq=200 iter=8 rad=4 step=4.0 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> N=60 eps=0.5 freq=20 iter=8 rad=4 step=4.0 (100000000 [based on 0 runs with cutoff 0])
   BLS in iteration 13, start with N=60 eps=0.5 freq=20 iter=8 rad=4 step=4.0 (2.867036 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->1"], evaluating ...
          -> Take improving step to neighbour N=60 eps=0.5 freq=20 iter=8 rad=1 step=4.0 (2.087405 [based on 1 runs with cutoff 60.0]) with flip 46

          
============= Performing 1 bonus runs of state: N=60 eps=0.5 freq=20 iter=8 rad=1 step=4.0 (2.087405 [based on 1 runs with cutoff 60.0]) ============ 

          -> After 1 bonus runs: N=60 eps=0.5 freq=20 iter=8 rad=1 step=4.0 (2.2214004999999997 [based on 2 runs with cutoff 60.0])

    Changing ["freq: 20->10"], evaluating ...
1181/100000000, 18056.825214999983/21600.0
        -> worse: (2.5521145 [based on 2 runs with cutoff 60.0])
    Changing ["N: 60->90"], evaluating ...
1182/100000000, 18116.825214999983/21600.0
        -> worse: (600.0092233503001 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->12"], evaluating ...
        -> worse: (3.009473 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 1->3"], evaluating ...
        -> worse: (2.677195 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->500"], evaluating ...
1185/100000000, 18182.51188299998/21600.0
        -> worse: (600.0092334052001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->5"], evaluating ...
1186/100000000, 18242.51188299998/21600.0
        -> worse: (600.0092326110001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->15"], evaluating ...
          -> Take improving step to neighbour N=15 eps=0.5 freq=20 iter=8 rad=1 step=4.0 (1.478271 [based on 2 runs with cutoff 60.0]) with flip 47

          
============= Performing 7 bonus runs of state: N=15 eps=0.5 freq=20 iter=8 rad=1 step=4.0 (1.478271 [based on 2 runs with cutoff 60.0]) ============ 

1189/100000000, 18305.46842499998/21600.0
1191/100000000, 18366.90800799998/21600.0
1193/100000000, 18428.20865699998/21600.0
          -> After 7 bonus runs: N=15 eps=0.5 freq=20 iter=8 rad=1 step=4.0 (201.19746700000005 [based on 9 runs with cutoff 60.0])

    Changing ["rad: 1->4"], evaluating ...
        -> worse: (2.8070915 [based on 2 runs with cutoff 60.0])
    Changing ["rad: 1->2"], evaluating ...
        -> worse: (1.770818 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->100"], evaluating ...
1198/100000000, 18439.26819399998/21600.0
        -> worse: (2.601408 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.75"], evaluating ...
        -> worse: (1.336057 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.25"], evaluating ...
        -> worse: (1.811945 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->10"], evaluating ...
        -> worse: (1.912831 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->3"], evaluating ...
1202/100000000, 18504.32902699998/21600.0
        -> worse: (600.0092019221001 [based on 1 runs with cutoff 60.0])
    Changing ["step: 4.0->8.0"], evaluating ...
        -> worse: (1.4919695 [based on 2 runs with cutoff 60.0])
    Changing ["freq: 20->10"], evaluating ...
1205/100000000, 18514.54831999998/21600.0
        -> worse: (7.235354 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->500"], evaluating ...
1206/100000000, 18574.54831999998/21600.0
        -> worse: (600.0092850203 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->5"], evaluating ...
        -> worse: (1.534703 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->1"], evaluating ...
        -> worse: (1.505782 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 1->3"], evaluating ...
        -> worse: (1.498509 [based on 1 runs with cutoff 60.0])
    Changing ["N: 15->30"], evaluating ...
        -> worse: (2.797303 [based on 1 runs with cutoff 60.0])
    Changing ["step: 4.0->10.0"], evaluating ...
        -> worse: (151.10609125000002 [based on 4 runs with cutoff 60.0])
    Changing ["rad: 1->5"], evaluating ...
1212/100000000, 18643.31448599998/21600.0
        -> worse: (600.0092103540001 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.1"], evaluating ...
        -> worse: (1.794718 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->2"], evaluating ...
1214/100000000, 18705.109203999982/21600.0
        -> worse: (600.0092795126001 [based on 1 runs with cutoff 60.0])
    Changing ["step: 4.0->1.0"], evaluating ...
        -> worse: (1.6402649999999999 [based on 2 runs with cutoff 60.0])
    Changing ["freq: 20->1"], evaluating ...
1216/100000000, 18766.92653499998/21600.0
        -> worse: (600.0092680870001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 15->45"], evaluating ...
1217/100000000, 18826.92653499998/21600.0
        -> worse: (600.0092197787001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->200"], evaluating ...
        -> worse: (2.897047 [based on 1 runs with cutoff 60.0])
    Changing ["N: 15->10"], evaluating ...
        -> worse: (2.018889 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->5"], evaluating ...
1220/100000000, 18891.842470999978/21600.0
        -> worse: (600.009301022 [based on 1 runs with cutoff 60.0])
    Changing ["step: 4.0->0.5"], evaluating ...
        -> worse: (1.318983 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->50"], evaluating ...
        -> worse: (1.854493 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->12"], evaluating ...
        -> worse: (1.639464 [based on 2 runs with cutoff 60.0])
    Changing ["N: 15->120"], evaluating ...
1224/100000000, 18946.69766999998/21600.0
        -> worse: (50.01208 [based on 1 runs with cutoff 60.0])
          
============= Performing 28 bonus runs of state: N=15 eps=0.5 freq=20 iter=8 rad=1 step=4.0 (201.19746700000005 [based on 9 runs with cutoff 60.0]) ============ 

1228/100000000, 19011.77510199998/21600.0
1230/100000000, 19073.33877399998/21600.0
1236/100000000, 19084.488405999982/21600.0
1238/100000000, 19145.863105999983/21600.0
1239/100000000, 19205.863105999983/21600.0
1241/100000000, 19267.311641999982/21600.0
1244/100000000, 19330.813306999982/21600.0
1247/100000000, 19341.870073999984/21600.0
1248/100000000, 19401.870073999984/21600.0
          -> After 28 bonus runs for LM: N=15 eps=0.5 freq=20 iter=8 rad=1 step=4.0 (163.6219980540541 [based on 37 runs with cutoff 60.0])

   LM for iteration 13: N=15 eps=0.5 freq=20 iter=8 rad=1 step=4.0 (163.6219980540541 [based on 37 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 13): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 13): N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
==================================================================
Training quality of this incumbent parameter configuration: 82.34127895238096, based on 84 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
N=15 eps=0.5 freq=20 iter=8 rad=1 step=4.0 (163.6219980540541 [based on 37 runs with cutoff 60.0])
N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
Incumbent better, keeping it
rejecting worse N=15 eps=0.5 freq=20 iter=8 rad=1 step=4.0 (163.6219980540541 [based on 37 runs with cutoff 60.0]), going back to N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
1252/100000000, 19409.893694999984/21600.0
iteration 14, flip 49, evaluation count 1252
    perturb to ---> N=60 eps=0.5 freq=100 iter=8 rad=5 step=10.0 (2.1430825000000002 [based on 2 runs with cutoff 60.0])
    perturb to ---> N=60 eps=0.5 freq=20 iter=8 rad=5 step=10.0 (100000000 [based on 0 runs with cutoff 0])
    perturb to ---> N=60 eps=0.5 freq=20 iter=8 rad=4 step=10.0 (3.2811540000000003 [based on 3 runs with cutoff 60.0])
1253/100000000, 19412.368540999985/21600.0
   BLS in iteration 14, start with N=60 eps=0.5 freq=20 iter=8 rad=4 step=10.0 (3.079577 [based on 4 runs with cutoff 60.0])
    Changing ["rad: 4->1"], evaluating ...
        -> worse: (4.384508 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->2"], evaluating ...
1257/100000000, 19425.674700999985/21600.0
          -> Take improving step to neighbour N=60 eps=0.5 freq=20 iter=8 rad=2 step=10.0 (2.83460075 [based on 4 runs with cutoff 60.0]) with flip 49

          
============= Performing 2 bonus runs of state: N=60 eps=0.5 freq=20 iter=8 rad=2 step=10.0 (2.83460075 [based on 4 runs with cutoff 60.0]) ============ 

1259/100000000, 19488.091451999986/21600.0
          -> After 2 bonus runs: N=60 eps=0.5 freq=20 iter=8 rad=2 step=10.0 (102.15730766666667 [based on 6 runs with cutoff 60.0])

    Changing ["N: 60->30"], evaluating ...
1265/100000000, 19499.924018999984/21600.0
          -> Take improving step to neighbour N=30 eps=0.5 freq=20 iter=8 rad=2 step=10.0 (1.9525116666666664 [based on 6 runs with cutoff 60.0]) with flip 50

          
============= Performing 1 bonus runs of state: N=30 eps=0.5 freq=20 iter=8 rad=2 step=10.0 (1.9525116666666664 [based on 6 runs with cutoff 60.0]) ============ 

1267/100000000, 19527.465096999982/21600.0
          -> After 1 bonus runs: N=30 eps=0.5 freq=20 iter=8 rad=2 step=10.0 (5.395471714285714 [based on 7 runs with cutoff 60.0])

    Changing ["N: 30->90"], evaluating ...
        -> worse: (3.207273 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->3"], evaluating ...
1269/100000000, 19537.674770999984/21600.0
        -> worse: (7.002401 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->100"], evaluating ...
1270/100000000, 19551.329903999984/21600.0
        -> worse: (13.655133 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.1"], evaluating ...
        -> worse: (2.092878666666667 [based on 3 runs with cutoff 60.0])
    Changing ["freq: 20->50"], evaluating ...
        -> worse: (2.99784 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->0.5"], evaluating ...
1275/100000000, 19563.557062999986/21600.0
        -> worse: (2.950683 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.25"], evaluating ...
1280/100000000, 19614.233033999986/21600.0
        -> worse: (10.135194199999999 [based on 5 runs with cutoff 60.0])
    Changing ["step: 10.0->4.0"], evaluating ...
1285/100000000, 19629.850369999986/21600.0
        -> worse: (3.1234672 [based on 5 runs with cutoff 60.0])
    Changing ["freq: 20->2"], evaluating ...
1286/100000000, 19689.850369999986/21600.0
        -> worse: (600.0092589885002 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 2->5"], evaluating ...
1287/100000000, 19749.850369999986/21600.0
        -> worse: (600.0092146272001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->200"], evaluating ...
        -> worse: (2.829432 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->8.0"], evaluating ...
        -> worse: (2.0733243333333333 [based on 3 runs with cutoff 60.0])
    Changing ["eps: 0.5->1"], evaluating ...
1292/100000000, 19760.87309199998/21600.0
        -> worse: (1.9516080000000002 [based on 4 runs with cutoff 60.0])
    Changing ["iter: 8->12"], evaluating ...
1298/100000000, 19771.908318999973/21600.0
1300/100000000, 19785.997726999973/21600.0
        -> worse: (3.8583039999999995 [based on 5 runs with cutoff 60.0])
    Changing ["rad: 2->1"], evaluating ...
1301/100000000, 19845.997726999973/21600.0
        -> worse: (600.0092166741001 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->5"], evaluating ...
1302/100000000, 19905.997726999973/21600.0
        -> worse: (600.0092672834002 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->45"], evaluating ...
1303/100000000, 19965.997726999973/21600.0
        -> worse: (600.0092311545001 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->15"], evaluating ...
        -> worse: (300.7702858836 [based on 2 runs with cutoff 60.0])
    Changing ["freq: 20->1"], evaluating ...
1305/100000000, 20027.529085999973/21600.0
        -> worse: (600.0092768501002 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 2->4"], evaluating ...
        -> worse: (300.95544711625007 [based on 2 runs with cutoff 60.0])
    Changing ["freq: 20->5"], evaluating ...
1307/100000000, 20044.033270999975/21600.0
        -> worse: (14.602545 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->10"], evaluating ...
        -> worse: (9.821029 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 20->500"], evaluating ...
1309/100000000, 20056.581076999973/21600.0
        -> worse: (2.726777 [based on 1 runs with cutoff 60.0])
    Changing ["N: 30->120"], evaluating ...
        -> worse: (7.353036 [based on 1 runs with cutoff 60.0])
    Changing ["eps: 0.5->0.75"], evaluating ...
1312/100000000, 20068.023079999974/21600.0
        -> worse: (2.0496243333333335 [based on 3 runs with cutoff 60.0])
    Changing ["rad: 2->3"], evaluating ...
1314/100000000, 20130.082985999972/21600.0
        -> worse: (600.0092095032 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->10"], evaluating ...
1319/100000000, 20196.864286999975/21600.0
        -> worse: (121.35628020000001 [based on 5 runs with cutoff 60.0])
    Changing ["freq: 20->10"], evaluating ...
1324/100000000, 20208.184890999975/21600.0
        -> worse: (2.2641207999999997 [based on 5 runs with cutoff 60.0])
    Changing ["step: 10.0->1.0"], evaluating ...
1329/100000000, 20263.586310999974/21600.0
        -> worse: (11.080284 [based on 5 runs with cutoff 60.0])
          
============= Performing 29 bonus runs of state: N=30 eps=0.5 freq=20 iter=8 rad=2 step=10.0 (5.395471714285714 [based on 7 runs with cutoff 60.0]) ============ 

1334/100000000, 20274.064208999975/21600.0
1337/100000000, 20316.437143999974/21600.0
1341/100000000, 20361.494465999975/21600.0
1345/100000000, 20427.993669999974/21600.0
1346/100000000, 20487.993669999974/21600.0
1348/100000000, 20549.529284999975/21600.0
1351/100000000, 20613.159321999974/21600.0
1355/100000000, 20682.232521999973/21600.0
          -> After 29 bonus runs for LM: N=30 eps=0.5 freq=20 iter=8 rad=2 step=10.0 (72.85620836111111 [based on 36 runs with cutoff 60.0])

   LM for iteration 14: N=30 eps=0.5 freq=20 iter=8 rad=2 step=10.0 (72.85620836111111 [based on 36 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 14): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 14): N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
==================================================================
Training quality of this incumbent parameter configuration: 82.34127895238096, based on 84 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
N=30 eps=0.5 freq=20 iter=8 rad=2 step=10.0 (72.85620836111111 [based on 36 runs with cutoff 60.0])
N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
Incumbent better, keeping it
rejecting worse N=30 eps=0.5 freq=20 iter=8 rad=2 step=10.0 (72.85620836111111 [based on 36 runs with cutoff 60.0]), going back to N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
1358/100000000, 20688.611109999973/21600.0
iteration 15, flip 52, evaluation count 1358
    perturb to ---> N=60 eps=1 freq=100 iter=8 rad=4 step=10.0 (2.147119 [based on 2 runs with cutoff 60.0])
    perturb to ---> N=60 eps=0.75 freq=100 iter=8 rad=4 step=10.0 (2.145364 [based on 2 runs with cutoff 60.0])
    perturb to ---> N=60 eps=0.25 freq=100 iter=8 rad=4 step=10.0 (2.1132145 [based on 2 runs with cutoff 60.0])
1359/100000000, 20692.25658699997/21600.0
   BLS in iteration 15, start with N=60 eps=0.25 freq=100 iter=8 rad=4 step=10.0 (2.623968666666667 [based on 3 runs with cutoff 60.0])
    Changing ["step: 10.0->1.0"], evaluating ...
        -> worse: (2.246576 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->0.5"], evaluating ...
        -> worse: (2.303004 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->1"], evaluating ...
1362/100000000, 20756.806166999973/21600.0
        -> worse: (600.0092527294 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->12"], evaluating ...
        -> worse: (2.263582 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->20"], evaluating ...
        -> worse: (2.4820175 [based on 2 runs with cutoff 60.0])
    Changing ["N: 60->120"], evaluating ...
1366/100000000, 20770.192538999974/21600.0
        -> worse: (6.158755 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->4.0"], evaluating ...
        -> worse: (2.232692 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->200"], evaluating ...
        -> worse: (2.242526 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->3"], evaluating ...
        -> worse: (2.249976 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->5"], evaluating ...
        -> worse: (2.417601 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->10"], evaluating ...
1371/100000000, 20782.283966999978/21600.0
        -> worse: (2.948633 [based on 1 runs with cutoff 60.0])
    Changing ["N: 60->15"], evaluating ...
          -> Take improving step to neighbour N=15 eps=0.25 freq=100 iter=8 rad=4 step=10.0 (1.7950636666666666 [based on 3 runs with cutoff 60.0]) with flip 52

          
============= Performing 12 bonus runs of state: N=15 eps=0.25 freq=100 iter=8 rad=4 step=10.0 (1.7950636666666666 [based on 3 runs with cutoff 60.0]) ============ 

1376/100000000, 20848.521204999975/21600.0
1377/100000000, 20908.521204999975/21600.0
1378/100000000, 20968.521204999975/21600.0
1384/100000000, 21037.12779499997/21600.0
1386/100000000, 21098.70445499997/21600.0
          -> After 12 bonus runs: N=15 eps=0.25 freq=100 iter=8 rad=4 step=10.0 (201.0960658666667 [based on 15 runs with cutoff 60.0])

    Changing ["eps: 0.25->0.5"], evaluating ...
        -> worse: (226.06445312500003 [based on 8 runs with cutoff 60.0])
    Changing ["N: 15->90"], evaluating ...
        -> worse: (3.497414 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->5"], evaluating ...
        -> worse: (3.980416 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->200"], evaluating ...
1390/100000000, 21110.49541299997/21600.0
        -> worse: (2.342591 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->20"], evaluating ...
1392/100000000, 21172.20153599997/21600.0
        -> worse: (201.1299726666667 [based on 3 runs with cutoff 60.0])
    Changing ["rad: 4->2"], evaluating ...
1393/100000000, 21232.20153599997/21600.0
        -> worse: (600.0093053663 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->0.5"], evaluating ...
        -> worse: (1.7977889999999999 [based on 2 runs with cutoff 60.0])
    Changing ["step: 10.0->1.0"], evaluating ...
        -> worse: (1.8126693333333332 [based on 3 runs with cutoff 60.0])
    Changing ["freq: 100->5"], evaluating ...
1399/100000000, 21242.940493999973/21600.0
        -> worse: (1.71798 [based on 2 runs with cutoff 60.0])
    Changing ["iter: 8->12"], evaluating ...
        -> worse: (1.794357 [based on 2 runs with cutoff 60.0])
    Changing ["eps: 0.25->0.1"], evaluating ...
        -> worse: (219.2244521818182 [based on 11 runs with cutoff 60.0])
    Changing ["iter: 8->3"], evaluating ...
1403/100000000, 21268.546338999975/21600.0
        -> worse: (20.449917 [based on 1 runs with cutoff 60.0])
    Changing ["iter: 8->10"], evaluating ...
        -> worse: (2.922811 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->3"], evaluating ...
        -> worse: (3.718959 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->1"], evaluating ...
1406/100000000, 21312.154599999976/21600.0
        -> worse: (36.966491 [based on 1 runs with cutoff 60.0])
    Changing ["N: 15->45"], evaluating ...
        -> worse: (2.143961 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->2"], evaluating ...
1410/100000000, 21329.667850999977/21600.0
        -> worse: (5.123096666666666 [based on 3 runs with cutoff 60.0])
    Changing ["N: 15->10"], evaluating ...
1411/100000000, 21389.667850999977/21600.0
        -> worse: (600.0092879764001 [based on 1 runs with cutoff 60.0])
    Changing ["freq: 100->10"], evaluating ...
        -> worse: (1.6358145000000002 [based on 4 runs with cutoff 60.0])
    Changing ["freq: 100->1"], evaluating ...
1416/100000000, 21456.211108999974/21600.0
        -> worse: (600.0092867429 [based on 1 runs with cutoff 60.0])
    Changing ["rad: 4->5"], evaluating ...
1417/100000000, 21511.756434999974/21600.0
        -> worse: (55.545326 [based on 1 runs with cutoff 60.0])
    Changing ["step: 10.0->4.0"], evaluating ...
        -> worse: (1.7562975 [based on 2 runs with cutoff 60.0])
    Changing ["step: 10.0->8.0"], evaluating ...
1424/100000000, 21581.492881999973/21600.0
1425/100000000, 21641.492881999973/21600.0
ParamILS has reached the specified CPU time limit of 21600.0 seconds => stopping the search now.
ParamILS has reached the specified CPU time limit of 21600.0 seconds => stopping the search now.
        -> worse: (201.037342 [based on 6 runs with cutoff 60.0])
ParamILS has reached the specified CPU time limit of 21600.0 seconds => stopping the search now.
          
============= Performing 23 bonus runs of state: N=15 eps=0.25 freq=100 iter=8 rad=4 step=10.0 (201.0960658666667 [based on 15 runs with cutoff 60.0]) ============ 

ParamILS has reached the specified CPU time limit of 21600.0 seconds => stopping the search now.
          -> After 23 bonus runs for LM: N=15 eps=0.25 freq=100 iter=8 rad=4 step=10.0 (201.0960658666667 [based on 15 runs with cutoff 60.0])

   LM for iteration 15: N=15 eps=0.25 freq=100 iter=8 rad=4 step=10.0 (201.0960658666667 [based on 15 runs with cutoff 60.0])

========== DETAILED RESULTS (iteration 15): ==========
================================================

==================================================================
Best parameter configuration found so far (end of iteration 15): N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
==================================================================
Training quality of this incumbent parameter configuration: 82.34127895238096, based on 84 runs with cutoff 60.0
==================================================================

Comparing LM against incumbent:
N=15 eps=0.25 freq=100 iter=8 rad=4 step=10.0 (201.0960658666667 [based on 15 runs with cutoff 60.0])
N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
Incumbent better, keeping it
rejecting worse N=15 eps=0.25 freq=100 iter=8 rad=4 step=10.0 (201.0960658666667 [based on 15 runs with cutoff 60.0]), going back to N=60 eps=0.5 freq=100 iter=8 rad=4 step=10.0 (82.34127895238096 [based on 84 runs with cutoff 60.0])
ParamILS has reached the specified CPU time limit of 21600.0 seconds => stopping the search now.
Final solution for depth 1 with limit N=2000, and cutoff time=60.0.
New Incumbent: 21641.492881999973, 82.34127895238096 [84, 60.0]. With state N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0

==================================================================
ParamILS is finished.
==================================================================

Final best parameter configuration found: N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
==================================================================
Active parameters: N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0

==================================================================
Training quality of this final best found parameter configuration: 82.34127895238096, based on 84 runs with cutoff 60.0
==================================================================


==================================================================
Computing validation result on independent data -- 100 runs with cutoff time 60.0...
==================================================================
SchwefelS3: 2.896643
RosenbrockR2: 60.00101000000001
SphereS3: 60.00101000000001
WeierstrassW2: 4.05653
EllipticE2: 60.00101000000001
EllipticE3: 60.00101000000001
RastriginR2: 3.939318
SchwefelS2: 2.804011
RosenbrockR3: 1.887159
RastriginS2: 60.00043989918001
RastriginS3: 3.062092
GriewankG3: 1.608284
WeierstrassW3: 2.111653
GriewankG2: 1.693446
SphereS2: 1.769167
RastriginR3: 4.105411
Ackley: 3.206241
RastriginR3: 3.732619
GriewankG3: 1.638183
SchwefelS3: 2.814461
RosenbrockR2: 1.629196
SphereS3: 60.00101000000001
WeierstrassW2: 2.340623
GriewankG2: 1.70095
SphereS2: 1.711476
SchwefelS2: 2.027914
EllipticE2: 60.00101000000001
Ackley: 2.945046
EllipticE3: 60.00101000000001
RastriginS3: 60.00100989918001
RastriginS2: 60.00043989918001
RastriginR2: 3.242353
RosenbrockR3: 3.812845
WeierstrassW3: 60.00101000000001
Ackley: 3.124196
RastriginR3: 3.758712
RosenbrockR3: 1.627352
RastriginS2: 60.00044984877001
GriewankG3: 1.744012
RosenbrockR2: 3.860844
GriewankG2: 1.620618
SphereS3: 1.943805
WeierstrassW2: 1.718814
SchwefelS3: 2.706813
RastriginS3: 60.00100989918001
EllipticE2: 60.00101000000001
SphereS2: 1.690376
RastriginR2: 3.859306
SchwefelS2: 2.690607
WeierstrassW3: 3.051051
EllipticE3: 60.00101000000001
SphereS2: 1.819818
EllipticE2: 60.00101000000001
RosenbrockR3: 3.708348
Ackley: 3.267843
RastriginS2: 60.00043989918001
SphereS3: 1.874484
WeierstrassW3: 2.883599
RastriginS3: 60.00101000000001
GriewankG3: 2.7349
RastriginR3: 2.895281
EllipticE3: 60.00101000000001
SchwefelS2: 3.024055
RastriginR2: 60.00101000000001
RosenbrockR2: 1.716603
WeierstrassW2: 60.00001000000001
SchwefelS3: 2.066742
GriewankG2: 1.749115
RastriginR2: 4.384128
RosenbrockR3: 1.713014
Ackley: 3.108611
GriewankG3: 1.554612
SphereS2: 1.783274
EllipticE2: 57.67275
WeierstrassW3: 2.131411
SchwefelS2: 1.909203
RastriginR3: 1.20819
EllipticE3: 60.00101000000001
WeierstrassW2: 10.830419
GriewankG2: 1.553159
SchwefelS3: 2.676774
RastriginS2: 60.00045986384001
SphereS3: 1.855053
RosenbrockR2: 3.484196
RastriginS3: 60.00101000000001
RosenbrockR2: 4.046661
SphereS2: 1.951244
RosenbrockR3: 4.121142
RastriginR3: 3.586323
SphereS3: 60.00101000000001
RastriginS3: 60.00100989918001
EllipticE2: 60.00101000000001
Ackley: 3.154166
WeierstrassW3: 2.433943
SchwefelS3: 2.807475
RastriginS2: 60.00046974790001
SchwefelS2: 2.709051
WeierstrassW2: 2.301382
EllipticE3: 60.00101000000001
GriewankG3: 1.876295
Combined result: 176.46974679555893

================================================================
Final best parameter configuration: N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0
==================================================================
Active parameters: N=60, eps=0.5, freq=100, iter=8, rad=4, step=10.0

================================================================
Training quality of this final best found parameter configuration: 82.34127895238096, based on 84 runs with cutoff 60.0
Test quality of this final best found parameter configuration: 176.46974679555893, based on 100 independent runs with cutoff 60.0
==================================================================
